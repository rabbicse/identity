# generated by fastapi-codegen:
#   filename:  openapi.json
#   timestamp: 2024-10-22T11:04:04+00:00

from __future__ import annotations

from fastapi import APIRouter

from ..dependencies import *

router = APIRouter(tags=['events'])


@router.get(
    '/projects/{project_id}/eventstreams',
    response_model=ListEventStreams,
    responses={
        '400': {'model': ErrorGeneric},
        '403': {'model': ErrorGeneric},
        'default': {'model': ErrorGeneric},
    },
    tags=['events'],
)
def list_event_streams(project_id: str) -> Union[ListEventStreams, ErrorGeneric]:
    """
    List all event streams for the project. This endpoint is not paginated.
    """
    pass


@router.post(
    '/projects/{project_id}/eventstreams',
    response_model=None,
    responses={
        '201': {'model': EventStream},
        '400': {'model': ErrorGeneric},
        '403': {'model': ErrorGeneric},
        '409': {'model': ErrorGeneric},
        'default': {'model': ErrorGeneric},
    },
    tags=['events'],
)
def create_event_stream(
    project_id: str, body: CreateEventStreamBody = ...
) -> Optional[Union[EventStream, ErrorGeneric]]:
    """
    Create an event stream for your project.
    """
    pass


@router.delete(
    '/projects/{project_id}/eventstreams/{event_stream_id}',
    response_model=None,
    responses={
        '400': {'model': ErrorGeneric},
        '403': {'model': ErrorGeneric},
        '409': {'model': ErrorGeneric},
        'default': {'model': ErrorGeneric},
    },
    tags=['events'],
)
def delete_event_stream(
    project_id: str, event_stream_id: str = ...
) -> Optional[ErrorGeneric]:
    """
    Remove an event stream from a project
    """
    pass


@router.put(
    '/projects/{project_id}/eventstreams/{event_stream_id}',
    response_model=EventStream,
    responses={
        '400': {'model': ErrorGeneric},
        '403': {'model': ErrorGeneric},
        '409': {'model': ErrorGeneric},
        'default': {'model': ErrorGeneric},
    },
    tags=['events'],
)
def set_event_stream(
    project_id: str, event_stream_id: str = ..., body: SetEventStreamBody = None
) -> Union[EventStream, ErrorGeneric]:
    """
    Update an event stream for a project.
    """
    pass
