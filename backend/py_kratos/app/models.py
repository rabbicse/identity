# generated by fastapi-codegen:
#   filename:  .\openapi.json
#   timestamp: 2024-10-22T11:04:04+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union
from uuid import UUID

from pydantic import UUID4, BaseModel, Field, conint, constr
from typing_extensions import Literal


class AmountInCent(BaseModel):
    __root__: int


class Attribute(BaseModel):
    key: Optional[str] = None
    value: Optional[str] = None


class Condition(Enum):
    equals = 'equals'
    not_equals = 'not_equals'
    contains = 'contains'
    not_contains = 'not_contains'
    regex = 'regex'
    not_regex = 'not_regex'
    set = 'set'
    not_set = 'not_set'


class AttributeFilter(BaseModel):
    attribute: Optional[str] = None
    condition: Optional[Condition] = None
    value: Optional[str] = None


class AttributesCountDatapoint(BaseModel):
    count: int = Field(..., description='Count of the attribute value for given key')
    name: str = Field(..., description='Name of the attribute value for given key')


class CodeChannel(BaseModel):
    __root__: str


class CreateProjectMemberInviteBody(BaseModel):
    invitee_email: Optional[str] = Field(None, description='A email to invite')


class Environment(Enum):
    prod = 'prod'
    stage = 'stage'
    dev = 'dev'


class HomeRegion(Enum):
    eu_central = 'eu-central'
    asia_northeast = 'asia-northeast'
    us_east = 'us-east'
    us_west = 'us-west'
    us = 'us'
    global_ = 'global'


class HydraStrategiesAccessToken(Enum):
    opaque = 'opaque'
    jwt = 'jwt'


class HydraStrategiesJwtScopeClaim(Enum):
    list = 'list'
    string = 'string'
    both = 'both'


class HydraStrategiesScope(Enum):
    exact = 'exact'
    wildcard = 'wildcard'


class KratosSelfserviceFlowsRecoveryUse(Enum):
    link = 'link'
    code = 'code'


class KratosSelfserviceFlowsVerificationUse(Enum):
    link = 'link'
    code = 'code'


class Currency(Enum):
    usd = 'usd'
    eur = 'eur'


class Interval(Enum):
    monthly = 'monthly'
    yearly = 'yearly'


class CreateSubscriptionCommon(BaseModel):
    currency: Optional[Currency] = Field(None, description='\nusd USD\neur Euro')
    interval: Interval = Field(..., description='\nmonthly Monthly\nyearly Yearly')
    plan: str
    return_to: Optional[str] = None


class CreateWorkspaceApiKeyBody(BaseModel):
    name: str = Field(
        ..., description='The API Key Name\n\nA descriptive name for the API key.'
    )


class Role(Enum):
    owner = 'owner'
    developer = 'developer'


class CreateWorkspaceMemberInviteBody(BaseModel):
    invitee_email: str = Field(..., description='A email to invite')
    role: Role = Field(
        ...,
        description='The role the user will have in the workspace\nowner WorkspaceMemberRoleOwner\ndeveloper WorkspaceMemberRoleDeveloper',
    )


class CustomHostnameStatus(BaseModel):
    __root__: str = Field(
        ...,
        title='CustomHostnameStatus is the enumeration of valid state values in the CustomHostnameSSL.',
    )


class DefaultError(BaseModel):
    __root__: Any


class Duration(BaseModel):
    __root__: int = Field(
        ...,
        description='A Duration represents the elapsed time between two instants\nas an int64 nanosecond count. The representation limits the\nlargest representable duration to approximately 290 years.',
    )


class ID(BaseModel):
    __root__: int


class InvoiceStatus(BaseModel):
    __root__: str = Field(
        ...,
        description='The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)',
    )


class JSONRawMessage(BaseModel):
    pass


class KetoNamespace(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None


class KetoNamespaces(BaseModel):
    __root__: List[KetoNamespace]


class LineItemV1(BaseModel):
    amount_in_cent: Optional[AmountInCent] = None
    description: Optional[str] = None
    items: Optional[List[LineItemV1]] = Field(
        None, description='Each line item can have sub-items to create a hierarchy.'
    )
    quantity: Optional[int] = None
    title: Optional[str] = None
    unit_price: Optional[str] = None


class Money(BaseModel):
    Cents: Optional[int] = None
    String: Optional[str] = None
    Unit: Optional[str] = None


class RequestConfigAuthType(Enum):
    basic_auth = 'basic_auth'
    api_key = 'api_key'


class NullBool(BaseModel):
    __root__: Optional[bool] = None


class NullDuration(BaseModel):
    __root__: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = None


class NullInt(BaseModel):
    __root__: Optional[int] = None


class NullString(BaseModel):
    __root__: Optional[str] = None


class NullTime(BaseModel):
    __root__: Optional[datetime] = None


class NullUUID(BaseModel):
    __root__: Optional[UUID4] = None


class OAuth2LoginChallengeParams(BaseModel):
    pass


class OrganizationBody(BaseModel):
    domains: Optional[List[str]] = Field(
        None, description="Domains contains the list of organization's domains."
    )
    label: Optional[str] = Field(
        None, description="Label contains the organization's label."
    )


class Plan(BaseModel):
    name: str = Field(..., description='Name is the name of the plan.')
    version: int = Field(
        ...,
        description='Version is the version of the plan. The combination of `name@version` must be unique.',
    )


class ProjectEventsDatapoint(BaseModel):
    attributes: List[Attribute] = Field(
        ..., description='Event attributes with details'
    )
    name: str = Field(..., description='Name of the event')
    timestamp: datetime = Field(..., description='Time of occurence')


class RFC6749ErrorJson(BaseModel):
    error: Optional[str] = None
    error_debug: Optional[str] = None
    error_description: Optional[str] = None
    error_hint: Optional[str] = None
    status_code: Optional[int] = None


class RecoveryAddressType(BaseModel):
    __root__: str = Field(
        ...,
        title='RecoveryAddressType must not exceed 16 characters as that is the limitation in the SQL Schema.',
    )


class SessionActivityDatapoint(BaseModel):
    country: str = Field(..., description='Country of the events')
    failed: int = Field(
        ..., description='Number of events that failed in the given timeframe'
    )
    succeeded: int = Field(
        ..., description='Number of events that succeeded in the given timeframe'
    )


class SourcePosition(BaseModel):
    Line: Optional[int] = None
    column: Optional[int] = None


class String(BaseModel):
    __root__: NullString


class StringSliceJSONFormat(BaseModel):
    __root__: List[str] = Field(
        ...,
        title='StringSliceJSONFormat represents []string{} which is encoded to/from JSON for SQL storage.',
    )


class SubscriptionStatus(BaseModel):
    __root__: str = Field(
        ...,
        description="For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this status can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` status. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal status, the open invoice will be voided and no further invoices will be generated.\n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over.\n\nA subscription can only enter a `paused` status [when a trial ends without a payment method](https://stripe.com/billing/subscriptions/trials#create-free-trials-without-payment). A `paused` subscription doesn't generate invoices and can be resumed after your customer adds their payment method. The `paused` status is different from [pausing collection](https://stripe.com/billing/subscriptions/pause-payment), which still generates invoices and leaves the subscription's status unchanged.\n\nIf subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings).\n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
        title='Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, `unpaid`, or `paused`.',
    )


class TaxLineItem(BaseModel):
    amount_in_cent: Optional[AmountInCent] = None
    title: Optional[str] = None


class Time(BaseModel):
    __root__: datetime


class TimeInterval(BaseModel):
    end: datetime = Field(..., description='The end of the time period.')
    start: datetime = Field(..., description='The start of the time period.')


class UUIDModel(BaseModel):
    __root__: UUID4


class VerifiableCredentialProof(BaseModel):
    jwt: Optional[str] = None
    proof_type: Optional[str] = None


class Warning(BaseModel):
    code: Optional[int] = None
    message: Optional[str] = None


class AcceptOAuth2ConsentRequestSession(BaseModel):
    access_token: Optional[Any] = Field(
        None,
        description='AccessToken sets session data for the access and refresh token, as well as any future tokens issued by the\nrefresh grant. Keep in mind that this data will be available to anyone performing OAuth 2.0 Challenge Introspection.\nIf only your services can perform OAuth 2.0 Challenge Introspection, this is usually fine. But if third parties\ncan access that endpoint as well, sensitive data from the session might be exposed to them. Use with care!',
    )
    id_token: Optional[Any] = Field(
        None,
        description="IDToken sets session data for the OpenID Connect ID token. Keep in mind that the session'id payloads are readable\nby anyone that has access to the ID Challenge. Use with care!",
    )


class AcceptOAuth2LoginRequest(BaseModel):
    acr: Optional[str] = Field(
        None,
        description='ACR sets the Authentication AuthorizationContext Class Reference value for this authentication session. You can use it\nto express that, for example, a user authenticated using two factor authentication.',
    )
    amr: Optional[StringSliceJSONFormat] = None
    context: Optional[JSONRawMessage] = None
    extend_session_lifespan: Optional[bool] = Field(
        None,
        description='Extend OAuth2 authentication session lifespan\n\nIf set to `true`, the OAuth2 authentication cookie lifespan is extended. This is for example useful if you want the user to be able to use `prompt=none` continuously.\n\nThis value can only be set to `true` if the user has an authentication, which is the case if the `skip` value is `true`.',
    )
    force_subject_identifier: Optional[str] = Field(
        None,
        description='ForceSubjectIdentifier forces the "pairwise" user ID of the end-user that authenticated. The "pairwise" user ID refers to the\n(Pairwise Identifier Algorithm)[http://openid.net/specs/openid-connect-core-1_0.html#PairwiseAlg] of the OpenID\nConnect specification. It allows you to set an obfuscated subject ("user") identifier that is unique to the client.\n\nPlease note that this changes the user ID on endpoint /userinfo and sub claim of the ID Token. It does not change the\nsub claim in the OAuth 2.0 Introspection.\n\nPer default, ORY Hydra handles this value with its own algorithm. In case you want to set this yourself\nyou can use this field. Please note that setting this field has no effect if `pairwise` is not configured in\nORY Hydra or the OAuth 2.0 Client does not expect a pairwise identifier (set via `subject_type` key in the client\'s\nconfiguration).\n\nPlease also be aware that ORY Hydra is unable to properly compute this value during authentication. This implies\nthat you have to compute this value on every authentication process (probably depending on the client ID or some\nother unique value).\n\nIf you fail to compute the proper value, then authentication processes which have id_token_hint set might fail.',
    )
    identity_provider_session_id: Optional[str] = Field(
        None,
        description='IdentityProviderSessionID is the session ID of the end-user that authenticated.\nIf specified, we will use this value to propagate the logout.',
    )
    remember: Optional[bool] = Field(
        None,
        description='Remember, if set to true, tells ORY Hydra to remember this user by telling the user agent (browser) to store\na cookie with authentication data. If the same user performs another OAuth 2.0 Authorization Request, he/she\nwill not be asked to log in again.',
    )
    remember_for: Optional[int] = Field(
        None,
        description='RememberFor sets how long the authentication should be remembered for in seconds. If set to `0`, the\nauthorization will be remembered for the duration of the browser session (using a session cookie).',
    )
    subject: str = Field(
        ..., description='Subject is the user ID of the end-user that authenticated.'
    )


class AccountExperienceConfiguration(BaseModel):
    account_experience_theme_stylesheet: Optional[str] = None
    favicon_type: Optional[str] = None
    favicon_url: Optional[str] = None
    kratos_selfservice_default_browser_return_url: Optional[str] = None
    kratos_selfservice_flows_recovery_enabled: Optional[bool] = None
    kratos_selfservice_flows_registration_enabled: Optional[bool] = None
    kratos_selfservice_flows_verification_enabled: Optional[bool] = None
    logo_url: Optional[str] = None
    name: Optional[str] = None
    organization_map: Optional[Dict[str, str]] = None


class AccountExperienceThemeVariables(BaseModel):
    accent: Optional[str] = None
    bg_default: Optional[str] = Field(None, alias='bg-default')
    border_radius_branding: Optional[str] = Field(None, alias='border-radius-branding')
    border_radius_buttons: Optional[str] = Field(None, alias='border-radius-buttons')
    border_radius_cards: Optional[str] = Field(None, alias='border-radius-cards')
    border_radius_forms: Optional[str] = Field(None, alias='border-radius-forms')
    border_radius_general: Optional[str] = Field(None, alias='border-radius-general')
    button_primary_bg_default: Optional[str] = Field(
        None, alias='button-primary-bg-default'
    )
    button_primary_bg_disabled: Optional[str] = Field(
        None, alias='button-primary-bg-disabled'
    )
    button_primary_bg_hover: Optional[str] = Field(
        None, alias='button-primary-bg-hover'
    )
    button_primary_border_default: Optional[str] = Field(
        None, alias='button-primary-border-default'
    )
    button_primary_border_disabled: Optional[str] = Field(
        None, alias='button-primary-border-disabled'
    )
    button_primary_border_hover: Optional[str] = Field(
        None, alias='button-primary-border-hover'
    )
    button_primary_fg_default: Optional[str] = Field(
        None, alias='button-primary-fg-default'
    )
    button_primary_fg_disabled: Optional[str] = Field(
        None, alias='button-primary-fg-disabled'
    )
    button_primary_fg_hover: Optional[str] = Field(
        None, alias='button-primary-fg-hover'
    )
    button_secondary_bg_default: Optional[str] = Field(
        None, alias='button-secondary-bg-default'
    )
    button_secondary_bg_disabled: Optional[str] = Field(
        None, alias='button-secondary-bg-disabled'
    )
    button_secondary_bg_hover: Optional[str] = Field(
        None, alias='button-secondary-bg-hover'
    )
    button_secondary_border_default: Optional[str] = Field(
        None, alias='button-secondary-border-default'
    )
    button_secondary_border_disabled: Optional[str] = Field(
        None, alias='button-secondary-border-disabled'
    )
    button_secondary_border_hover: Optional[str] = Field(
        None, alias='button-secondary-border-hover'
    )
    button_secondary_fg_default: Optional[str] = Field(
        None, alias='button-secondary-fg-default'
    )
    button_secondary_fg_disabled: Optional[str] = Field(
        None, alias='button-secondary-fg-disabled'
    )
    button_secondary_fg_hover: Optional[str] = Field(
        None, alias='button-secondary-fg-hover'
    )
    button_social_bg_default: Optional[str] = Field(
        None, alias='button-social-bg-default'
    )
    button_social_bg_disabled: Optional[str] = Field(
        None, alias='button-social-bg-disabled'
    )
    button_social_bg_hover: Optional[str] = Field(None, alias='button-social-bg-hover')
    button_social_bg_provider: Optional[str] = Field(
        None, alias='button-social-bg-provider'
    )
    button_social_border_default: Optional[str] = Field(
        None, alias='button-social-border-default'
    )
    button_social_border_disabled: Optional[str] = Field(
        None, alias='button-social-border-disabled'
    )
    button_social_border_hover: Optional[str] = Field(
        None, alias='button-social-border-hover'
    )
    button_social_border_provider: Optional[str] = Field(
        None, alias='button-social-border-provider'
    )
    button_social_fg_default: Optional[str] = Field(
        None, alias='button-social-fg-default'
    )
    button_social_fg_disabled: Optional[str] = Field(
        None, alias='button-social-fg-disabled'
    )
    button_social_fg_hover: Optional[str] = Field(None, alias='button-social-fg-hover')
    button_social_fg_provider: Optional[str] = Field(
        None, alias='button-social-fg-provider'
    )
    created_at: Optional[datetime] = None
    dialog_bg_default: Optional[str] = Field(None, alias='dialog-bg-default')
    dialog_bg_subtle: Optional[str] = Field(None, alias='dialog-bg-subtle')
    dialog_border_default: Optional[str] = Field(None, alias='dialog-border-default')
    dialog_fg_default: Optional[str] = Field(None, alias='dialog-fg-default')
    dialog_fg_mute: Optional[str] = Field(None, alias='dialog-fg-mute')
    dialog_fg_subtle: Optional[str] = Field(None, alias='dialog-fg-subtle')
    forms_bg_default: Optional[str] = Field(None, alias='forms-bg-default')
    forms_bg_disabled: Optional[str] = Field(None, alias='forms-bg-disabled')
    forms_bg_hover: Optional[str] = Field(None, alias='forms-bg-hover')
    forms_border_default: Optional[str] = Field(None, alias='forms-border-default')
    forms_border_disabled: Optional[str] = Field(None, alias='forms-border-disabled')
    forms_border_error: Optional[str] = Field(None, alias='forms-border-error')
    forms_border_focus: Optional[str] = Field(None, alias='forms-border-focus')
    forms_border_hover: Optional[str] = Field(None, alias='forms-border-hover')
    forms_border_success: Optional[str] = Field(None, alias='forms-border-success')
    forms_border_warn: Optional[str] = Field(None, alias='forms-border-warn')
    forms_checkbox_bg_checked: Optional[str] = Field(
        None, alias='forms-checkbox-bg-checked'
    )
    forms_checkbox_bg_default: Optional[str] = Field(
        None, alias='forms-checkbox-bg-default'
    )
    forms_checkbox_border_checked: Optional[str] = Field(
        None, alias='forms-checkbox-border-checked'
    )
    forms_checkbox_border_default: Optional[str] = Field(
        None, alias='forms-checkbox-border-default'
    )
    forms_checkbox_fg_checked: Optional[str] = Field(
        None, alias='forms-checkbox-fg-checked'
    )
    forms_checkbox_fg_default: Optional[str] = Field(
        None, alias='forms-checkbox-fg-default'
    )
    forms_fg_default: Optional[str] = Field(None, alias='forms-fg-default')
    forms_fg_error: Optional[str] = Field(None, alias='forms-fg-error')
    forms_fg_mute: Optional[str] = Field(None, alias='forms-fg-mute')
    forms_fg_subtle: Optional[str] = Field(None, alias='forms-fg-subtle')
    forms_fg_success: Optional[str] = Field(None, alias='forms-fg-success')
    forms_fg_warn: Optional[str] = Field(None, alias='forms-fg-warn')
    forms_radio_bg_checked: Optional[str] = Field(None, alias='forms-radio-bg-checked')
    forms_radio_bg_default: Optional[str] = Field(None, alias='forms-radio-bg-default')
    forms_radio_border_checked: Optional[str] = Field(
        None, alias='forms-radio-border-checked'
    )
    forms_radio_border_default: Optional[str] = Field(
        None, alias='forms-radio-border-default'
    )
    forms_radio_fg_checked: Optional[str] = Field(None, alias='forms-radio-fg-checked')
    forms_radio_fg_default: Optional[str] = Field(None, alias='forms-radio-fg-default')
    forms_toggle_bg_checked: Optional[str] = Field(
        None, alias='forms-toggle-bg-checked'
    )
    forms_toggle_bg_default: Optional[str] = Field(
        None, alias='forms-toggle-bg-default'
    )
    forms_toggle_border_checked: Optional[str] = Field(
        None, alias='forms-toggle-border-checked'
    )
    forms_toggle_border_default: Optional[str] = Field(
        None, alias='forms-toggle-border-default'
    )
    forms_toggle_fg_checked: Optional[str] = Field(
        None, alias='forms-toggle-fg-checked'
    )
    forms_toggle_fg_default: Optional[str] = Field(
        None, alias='forms-toggle-fg-default'
    )
    id: Optional[UUID] = None
    links_link_default: Optional[str] = Field(None, alias='links-link-default')
    links_link_disabled: Optional[str] = Field(None, alias='links-link-disabled')
    links_link_hover: Optional[str] = Field(None, alias='links-link-hover')
    links_link_inverted_default: Optional[str] = Field(
        None, alias='links-link-inverted-default'
    )
    links_link_inverted_hover: Optional[str] = Field(
        None, alias='links-link-inverted-hover'
    )
    links_link_mute_default: Optional[str] = Field(
        None, alias='links-link-mute-default'
    )
    links_link_mute_hover: Optional[str] = Field(None, alias='links-link-mute-hover')
    syntax_syntax: Optional[str] = Field(None, alias='syntax-syntax')
    syntax_syntax_key: Optional[str] = Field(None, alias='syntax-syntax-key')
    syntax_syntax_num: Optional[str] = Field(None, alias='syntax-syntax-num')
    syntax_syntax_value: Optional[str] = Field(None, alias='syntax-syntax-value')
    updated_at: Optional[datetime] = None


class ActiveProjectInConsole(BaseModel):
    project_id: Optional[str] = Field(
        None, description='The Active Project ID\n\nformat: uuid'
    )


class ProjectSubscription(Enum):
    migrate = 'migrate'
    ignore = 'ignore'


class AddProjectToWorkspaceBody(BaseModel):
    environment: Environment = Field(
        ...,
        description='The environment of the project in the workspace. Can be one of "prod" or\n"dev". Note that the number of projects in the "prod" environment is limited\ndepending on the subscription.\nprod Production\nstage Staging\ndev Development',
    )
    project_subscription: ProjectSubscription = Field(
        ...,
        description='The action to take with the project subscription. Can be one of "migrate", and\n"ignore". "migrate" will migrate the project subscription to the workspace.\n"ignore" will ignore the project subscription.\nmigrate ProjectSubscriptionActionMigrate  ProjectSubscriptionActionMigrate will migrate the project subscription to the  workspace.\nignore ProjectSubscriptionActionIgnore  ProjectSubscriptionActionIgnore will ignore the project subscription.',
    )


class AuthenticatorAssuranceLevel(Enum):
    aal0 = 'aal0'
    aal1 = 'aal1'
    aal2 = 'aal2'
    aal3 = 'aal3'


class CheckOplSyntaxBody(BaseModel):
    __root__: str = Field(..., description='Ory Permission Language Document')


class CheckPermissionResult(BaseModel):
    allowed: bool = Field(..., description='whether the relation tuple is allowed')


class CheckPermissionResultWithError(BaseModel):
    allowed: bool = Field(..., description='whether the relation tuple is allowed')
    error: Optional[str] = Field(
        None, description='any error generated while checking the relation tuple'
    )


class CloudAccount(BaseModel):
    email: str
    email_verified: bool
    id: UUID
    name: str


class Consistency(Enum):
    field_ = ''
    strong = 'strong'
    eventual = 'eventual'


class ConsistencyRequestParameters(BaseModel):
    consistency: Optional[Consistency] = Field(
        None,
        description='Read Consistency Level (preview)\n\nThe read consistency level determines the consistency guarantee for reads:\n\nstrong (slow): The read is guaranteed to return the most recent data committed at the start of the read.\neventual (very fast): The result will return data that is about 4.8 seconds old.\n\nThe default consistency guarantee can be changed in the Ory Network Console or using the Ory CLI with\n`ory patch project --replace \'/previews/default_read_consistency_level="strong"\'`.\n\nSetting the default consistency level to `eventual` may cause regressions in the future as we add consistency\ncontrols to more APIs. Currently, the following APIs will be affected by this setting:\n\n`GET /admin/identities`\n\nThis feature is in preview and only available in Ory Network.\n ConsistencyLevelUnset  ConsistencyLevelUnset is the unset / default consistency level.\nstrong ConsistencyLevelStrong  ConsistencyLevelStrong is the strong consistency level.\neventual ConsistencyLevelEventual  ConsistencyLevelEventual is the eventual consistency level using follower read timestamps.',
    )


class Action(Enum):
    show_recovery_ui = 'show_recovery_ui'


class ContinueWithRecoveryUiFlow(BaseModel):
    id: UUID = Field(..., description='The ID of the recovery flow')
    url: Optional[str] = Field(
        None,
        description="The URL of the recovery flow\n\nIf this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.",
    )


class Action1(Enum):
    redirect_browser_to = 'redirect_browser_to'


class ContinueWithRedirectBrowserTo(BaseModel):
    action: Literal['redirect_browser_to'] = Field(
        ...,
        description='Action will always be `redirect_browser_to`\nredirect_browser_to ContinueWithActionRedirectBrowserToString',
    )
    redirect_browser_to: str = Field(
        ..., description='The URL to redirect the browser to'
    )


class Action2(Enum):
    set_ory_session_token = 'set_ory_session_token'


class ContinueWithSetOrySessionToken(BaseModel):
    action: Literal['set_ory_session_token'] = Field(
        ...,
        description='Action will always be `set_ory_session_token`\nset_ory_session_token ContinueWithActionSetOrySessionTokenString',
    )
    ory_session_token: str = Field(..., description='Token is the token of the session')


class Action3(Enum):
    show_settings_ui = 'show_settings_ui'


class ContinueWithSettingsUiFlow(BaseModel):
    id: UUID = Field(..., description='The ID of the settings flow')
    url: Optional[str] = Field(
        None,
        description="The URL of the settings flow\n\nIf this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.",
    )


class Action4(Enum):
    show_verification_ui = 'show_verification_ui'


class ContinueWithVerificationUiFlow(BaseModel):
    id: UUID = Field(..., description='The ID of the verification flow')
    url: Optional[str] = Field(
        None,
        description="The URL of the verification flow\n\nIf this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.",
    )
    verifiable_address: str = Field(
        ..., description='The address that should be verified in this flow'
    )


class CourierMessageStatus(Enum):
    queued = 'queued'
    sent = 'sent'
    processing = 'processing'
    abandoned = 'abandoned'


class CourierMessageType(Enum):
    email = 'email'
    phone = 'phone'


class CreateCustomDomainBody(BaseModel):
    cookie_domain: Optional[str] = Field(
        None,
        description='The domain where cookies will be set. Has to be a parent domain of the custom hostname to work.',
    )
    cors_allowed_origins: Optional[List[str]] = Field(
        None, description='CORS Allowed origins for the custom hostname.'
    )
    cors_enabled: Optional[bool] = Field(
        None, description='CORS Enabled for the custom hostname.'
    )
    custom_ui_base_url: Optional[str] = Field(
        None,
        description='The base URL where the custom user interface will be exposed.',
    )
    hostname: Optional[str] = Field(
        None, description='The custom hostname where the API will be exposed.'
    )


class Type(Enum):
    sns = 'sns'


class CreateEventStreamBody(BaseModel):
    role_arn: str = Field(
        ...,
        description='The AWS IAM role ARN to assume when publishing to the SNS topic.',
    )
    topic_arn: str = Field(..., description='The AWS SNS topic ARN.')
    type: Type = Field(
        ..., description='The type of the event stream (AWS SNS, GCP Pub/Sub, etc).'
    )


class State(Enum):
    active = 'active'
    inactive = 'inactive'


class CreateJsonWebKeySet(BaseModel):
    alg: str = Field(
        ...,
        description='JSON Web Key Algorithm\n\nThe algorithm to be used for creating the key. Supports `RS256`, `ES256`, `ES512`, `HS512`, and `HS256`.',
    )
    kid: str = Field(
        ..., description='JSON Web Key ID\n\nThe Key ID of the key to be created.'
    )
    use: str = Field(
        ...,
        description='JSON Web Key Use\n\nThe "use" (public key use) parameter identifies the intended use of\nthe public key. The "use" parameter is employed to indicate whether\na public key is used for encrypting data or verifying the signature\non data. Valid values are "enc" and "sig".',
    )


class CreateProjectBody(BaseModel):
    environment: Environment = Field(
        ...,
        description='The environment of the project.\nprod Production\nstage Staging\ndev Development',
    )
    home_region: Optional[HomeRegion] = Field(
        None,
        description='Home Region\n\nThe home region of the project. This is the region where the project will be created.\neu-central EUCentral\nasia-northeast AsiaNorthEast\nus-east USEast\nus-west USWest\nus US\nglobal Global',
    )
    name: str = Field(..., description='The name of the project to be created')
    workspace_id: Optional[UUID] = Field(
        None, description='The workspace to create the project in.'
    )


class CreateRecoveryLinkForIdentityBody(BaseModel):
    expires_in: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        None,
        description='Link Expires In\n\nThe recovery link will expire after that amount of time has passed. Defaults to the configuration value of\n`selfservice.methods.code.config.lifespan`.',
    )
    identity_id: UUID = Field(
        ..., description="Identity to Recover\n\nThe identity's ID you wish to recover."
    )


class CreateSubscriptionBody(BaseModel):
    currency: Optional[Currency] = Field(None, description='\nusd USD\neur Euro')
    interval: Interval = Field(..., description='\nmonthly Monthly\nyearly Yearly')
    plan: str
    provision_first_project: UUID
    return_to: Optional[str] = None


class CreateWorkspaceBody(BaseModel):
    name: str = Field(..., description='The name of the workspace')


class CreateWorkspaceSubscriptionBody(BaseModel):
    currency: Optional[Currency] = Field(None, description='\nusd USD\neur Euro')
    interval: Interval = Field(..., description='\nmonthly Monthly\nyearly Yearly')
    plan: str
    return_to: Optional[str] = None


class CredentialSupportedDraft00(BaseModel):
    cryptographic_binding_methods_supported: Optional[List[str]] = Field(
        None,
        description='OpenID Connect Verifiable Credentials Cryptographic Binding Methods Supported\n\nContains a list of cryptographic binding methods supported for signing the proof.',
    )
    cryptographic_suites_supported: Optional[List[str]] = Field(
        None,
        description='OpenID Connect Verifiable Credentials Cryptographic Suites Supported\n\nContains a list of cryptographic suites methods supported for signing the proof.',
    )
    format: Optional[str] = Field(
        None,
        description='OpenID Connect Verifiable Credentials Format\n\nContains the format that is supported by this authorization server.',
    )
    types: Optional[List[str]] = Field(
        None,
        description='OpenID Connect Verifiable Credentials Types\n\nContains the types of verifiable credentials supported.',
    )


class SslStatus(Enum):
    initializing = 'initializing'
    pending_validation = 'pending_validation'
    deleted = 'deleted'
    pending_issuance = 'pending_issuance'
    pending_deployment = 'pending_deployment'
    pending_deletion = 'pending_deletion'
    pending_expiration = 'pending_expiration'
    expired = 'expired'
    active = 'active'
    initializing_timed_out = 'initializing_timed_out'
    validation_timed_out = 'validation_timed_out'
    issuance_timed_out = 'issuance_timed_out'
    deployment_timed_out = 'deployment_timed_out'
    deletion_timed_out = 'deletion_timed_out'
    pending_cleanup = 'pending_cleanup'
    staging_deployment = 'staging_deployment'
    staging_active = 'staging_active'
    deactivating = 'deactivating'
    inactive = 'inactive'
    backup_issued = 'backup_issued'
    holding_deployment = 'holding_deployment'
    field_ = ''


class CustomDomain(BaseModel):
    cookie_domain: Optional[str] = None
    cors_allowed_origins: Optional[StringSliceJSONFormat] = None
    cors_enabled: Optional[bool] = None
    created_at: Optional[datetime] = None
    custom_ui_base_url: Optional[str] = None
    hostname: Optional[str] = None
    id: Optional[UUID] = None
    ssl_status: Optional[SslStatus] = None
    updated_at: Optional[datetime] = None
    verification_errors: Optional[List[str]] = None
    verification_status: Optional[CustomHostnameStatus] = None


class DeleteMySessionsCount(BaseModel):
    count: Optional[int] = Field(
        None, description='The number of sessions that were revoked.'
    )


class EmailTemplateDataBody(BaseModel):
    html: str
    plaintext: str


class ErrorOAuth2(BaseModel):
    error: Optional[str] = Field(None, description='Error')
    error_debug: Optional[str] = Field(
        None, description='Error Debug Information\n\nOnly available in dev mode.'
    )
    error_description: Optional[str] = Field(None, description='Error Description')
    error_hint: Optional[str] = Field(
        None,
        description='Error Hint\n\nHelps the user identify the error cause.',
        example='The redirect URL is not allowed.',
    )
    status_code: Optional[int] = Field(
        None, description='HTTP Status Code', example=401
    )


class EventStream(BaseModel):
    created_at: Optional[datetime] = None
    id: Optional[UUID] = None
    role_arn: Optional[str] = None
    topic_arn: Optional[str] = None
    type: Optional[str] = None
    updated_at: Optional[datetime] = None


class Type1(Enum):
    union = 'union'
    exclusion = 'exclusion'
    intersection = 'intersection'
    leaf = 'leaf'
    tuple_to_subject_set = 'tuple_to_subject_set'
    computed_subject_set = 'computed_subject_set'
    not_ = 'not'
    unspecified = 'unspecified'


class FalsyNullBool(BaseModel):
    __root__: bool = Field(
        ...,
        description='It JSON decodes to false if null.',
        title='FalsyNullBool represents a bool that may be null.',
    )


class FlowError(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    error: Optional[Dict[str, Any]] = None
    id: UUID = Field(..., description='ID of the error container.')
    updated_at: Optional[datetime] = Field(
        None, description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )


class GenericErrorContent(BaseModel):
    debug: Optional[str] = Field(
        None,
        description='Debug contains debug information. This is usually not available and has to be enabled.',
        example='The database adapter was unable to find the element',
    )
    error: Optional[str] = Field(
        None,
        description='Name is the error name.',
        example='The requested resource could not be found',
    )
    error_description: Optional[str] = Field(
        None,
        description='Description contains further information on the nature of the error.',
        example='Object with ID 12345 does not exist',
    )
    message: Optional[str] = Field(
        None, description='Message contains the error message.'
    )
    status_code: Optional[int] = Field(
        None,
        description='Code represents the error status code (404, 403, 401, ...).',
        example=404,
    )


class GetAttributesCountResponse(BaseModel):
    data: List[AttributesCountDatapoint] = Field(
        ..., description='The list of data points.'
    )


class GetManagedIdentitySchemaLocation(BaseModel):
    location: Optional[str] = None


class GetMetricsEventAttributesResponse(BaseModel):
    events: List[str] = Field(..., description='The list of data points.')


class GetMetricsEventTypesResponse(BaseModel):
    events: List[str] = Field(..., description='The list of data points.')


class GetProjectEventsBody(BaseModel):
    event_name: Optional[str] = Field(None, description='The event name to query for')
    filters: Optional[List[AttributeFilter]] = Field(
        [], description='Event attribute filters'
    )
    from_: datetime = Field(
        ..., alias='from', description='The start RFC3339 date of the time window'
    )
    page_size: Optional[int] = Field(
        25, description='Maximum number of events to return'
    )
    page_token: Optional[str] = Field(
        None, description='Pagination token to fetch next page, empty if first page'
    )
    to: datetime = Field(..., description='The end RFC3339 date of the time window')


class GetProjectEventsResponse(BaseModel):
    events: List[ProjectEventsDatapoint] = Field(
        ..., description='The list of data points.'
    )
    page_token: Optional[str] = Field(
        None, description='Pagination token to be included in next page request'
    )


class GetSessionActivityResponse(BaseModel):
    data: List[SessionActivityDatapoint] = Field(
        ..., description='The list of data points.'
    )


class HealthNotReadyStatus(BaseModel):
    errors: Optional[Dict[str, str]] = Field(
        None,
        description='Errors contains a list of errors that caused the not ready status.',
    )


class HealthStatus(BaseModel):
    status: Optional[str] = Field(None, description='Status always contains "ok".')


class Type2(Enum):
    password = 'password'
    oidc = 'oidc'
    totp = 'totp'
    lookup_secret = 'lookup_secret'
    webauthn = 'webauthn'
    code = 'code'
    passkey = 'passkey'
    profile = 'profile'
    link_recovery = 'link_recovery'
    code_recovery = 'code_recovery'


class IdentityCredentials(BaseModel):
    config: Optional[JSONRawMessage] = None
    created_at: Optional[datetime] = Field(
        None, description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    identifiers: Optional[List[str]] = Field(
        None,
        description='Identifiers represents a list of unique identifiers this credential type matches.',
    )
    type: Optional[Type2] = Field(
        None,
        description='Type discriminates between different types of credentials.\npassword CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode',
    )
    updated_at: Optional[datetime] = Field(
        None, description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )
    version: Optional[int] = Field(
        None,
        description='Version refers to the version of the credential. Useful when changing the config schema.',
    )


class IdentityCredentialsCodeAddress(BaseModel):
    address: Optional[str] = Field(None, description='The address for this code')
    channel: Optional[CodeChannel] = None


class IdentityCredentialsOidcProvider(BaseModel):
    initial_access_token: Optional[str] = None
    initial_id_token: Optional[str] = None
    initial_refresh_token: Optional[str] = None
    organization: Optional[str] = None
    provider: Optional[str] = None
    subject: Optional[str] = None


class IdentityCredentialsPassword(BaseModel):
    hashed_password: Optional[str] = Field(
        None, description='HashedPassword is a hash-representation of the password.'
    )
    use_password_migration_hook: Optional[bool] = Field(
        None,
        description='UsePasswordMigrationHook is set to true if the password should be migrated\nusing the password migration hook. If set, and the HashedPassword is empty, a\nwebhook will be called during login to migrate the password.',
    )


class IdentityMetaSchema(BaseModel):
    pass


class Action5(Enum):
    create = 'create'
    error = 'error'


class IdentityPatchResponse(BaseModel):
    action: Optional[Action5] = Field(
        None,
        description='The action for this specific patch\ncreate ActionCreate  Create this identity.\nerror ActionError  Error indicates that the patch failed.',
    )
    error: Optional[DefaultError] = None
    identity: Optional[UUID] = Field(
        None, description='The identity ID payload of this patch'
    )
    patch_id: Optional[UUID] = Field(
        None,
        description='The ID of this patch response, if an ID was specified in the patch.',
    )


class IdentitySchema(BaseModel):
    pass


class IdentitySchemaContainer(BaseModel):
    id: Optional[str] = Field(None, description='The ID of the Identity JSON Schema')
    schema_: Optional[Dict[str, Any]] = Field(
        None, alias='schema', description='The actual Identity JSON Schema'
    )


class IdentitySchemaPreset(BaseModel):
    schema_: Dict[str, Any] = Field(
        ..., alias='schema', description='Schema is the Identity JSON Schema'
    )
    url: str = Field(..., description='URL is the preset identifier')


class IdentitySchemaPresets(BaseModel):
    __root__: List[IdentitySchemaPreset]


class IdentityTraits(BaseModel):
    __root__: Any = Field(
        ...,
        description="Traits represent an identity's traits. The identity is able to create, modify, and delete traits\nin a self-service manner. The input will always be validated against the JSON Schema defined\nin `schema_url`.",
    )


class IdentityVerifiableAddressStatus(BaseModel):
    __root__: str = Field(
        ...,
        description='VerifiableAddressStatus must not exceed 16 characters as that is the limitation in the SQL Schema',
    )


class IdentityWithCredentialsOidcConfigProvider(BaseModel):
    provider: str = Field(
        ...,
        description='The OpenID Connect provider to link the subject to. Usually something like `google` or `github`.',
    )
    subject: str = Field(
        ...,
        description='The subject (`sub`) of the OpenID Connect connection. Usually the `sub` field of the ID Token.',
    )


class IdentityWithCredentialsPasswordConfig(BaseModel):
    hashed_password: Optional[str] = Field(
        None,
        description='The hashed password in [PHC format](https://www.ory.sh/docs/kratos/manage-identities/import-user-accounts-identities#hashed-passwords)',
    )
    password: Optional[str] = Field(
        None, description='The password in plain text if no hash is available.'
    )
    use_password_migration_hook: Optional[bool] = Field(
        None,
        description='If set to true, the password will be migrated using the password migration hook.',
    )


class InternalGetProjectBrandingBody(BaseModel):
    hostname: Optional[str] = None


class InternalIsAXWelcomeScreenEnabledForProjectBody(BaseModel):
    path: str = Field(..., description='Path is the path of the request.')
    project_slug: str = Field(..., description="ProjectSlug is the project's slug.")


class Namespace(Enum):
    User = 'User'
    field_ApiKey = ' ApiKey'


class InternalIsOwnerForProjectBySlugBody(BaseModel):
    namespace: Namespace = Field(
        ..., description='Namespace is the namespace of the subject.'
    )
    project_scope: Optional[str] = Field(
        None, description='ProjectScope is the project_id resolved from the\nAPI Token.'
    )
    project_slug: str = Field(..., description="ProjectSlug is the project's slug.")
    subject: str = Field(
        ..., description='Subject is the subject acting (user or API key).'
    )


class InternalIsOwnerForProjectBySlugResponse(BaseModel):
    project_id: str = Field(..., description="ProjectID is the project's ID.")


class IntrospectedOAuth2Token(BaseModel):
    active: bool = Field(
        ...,
        description='Active is a boolean indicator of whether or not the presented token\nis currently active.  The specifics of a token\'s "active" state\nwill vary depending on the implementation of the authorization\nserver and the information it keeps about its tokens, but a "true"\nvalue return for the "active" property will generally indicate\nthat a given token has been issued by this authorization server,\nhas not been revoked by the resource owner, and is within its\ngiven time window of validity (e.g., after its issuance time and\nbefore its expiration time).',
    )
    aud: Optional[List[str]] = Field(
        None, description="Audience contains a list of the token's intended audiences."
    )
    client_id: Optional[str] = Field(
        None,
        description='ID is aclient identifier for the OAuth 2.0 client that\nrequested this token.',
    )
    exp: Optional[int] = Field(
        None,
        description='Expires at is an integer timestamp, measured in the number of seconds\nsince January 1 1970 UTC, indicating when this token will expire.',
    )
    ext: Optional[Dict[str, Any]] = Field(
        None, description='Extra is arbitrary data set by the session.'
    )
    iat: Optional[int] = Field(
        None,
        description='Issued at is an integer timestamp, measured in the number of seconds\nsince January 1 1970 UTC, indicating when this token was\noriginally issued.',
    )
    iss: Optional[str] = Field(
        None, description='IssuerURL is a string representing the issuer of this token'
    )
    nbf: Optional[int] = Field(
        None,
        description='NotBefore is an integer timestamp, measured in the number of seconds\nsince January 1 1970 UTC, indicating when this token is not to be\nused before.',
    )
    obfuscated_subject: Optional[str] = Field(
        None,
        description='ObfuscatedSubject is set when the subject identifier algorithm was set to "pairwise" during authorization.\nIt is the `sub` value of the ID Token that was issued.',
    )
    scope: Optional[str] = Field(
        None,
        description='Scope is a JSON string containing a space-separated list of\nscopes associated with this token.',
    )
    sub: Optional[str] = Field(
        None,
        description='Subject of the token, as defined in JWT [RFC7519].\nUsually a machine-readable identifier of the resource owner who\nauthorized this token.',
    )
    token_type: Optional[str] = Field(
        None,
        description="TokenType is the introspected token's type, typically `Bearer`.",
    )
    token_use: Optional[str] = Field(
        None,
        description="TokenUse is the introspected token's use, for example `access_token` or `refresh_token`.",
    )
    username: Optional[str] = Field(
        None,
        description='Username is a human-readable identifier for the resource owner who\nauthorized this token.',
    )


class Type3(Enum):
    usage = 'usage'
    base = 'base'


class IsOwnerForProjectBySlug(BaseModel):
    ProjectSlug: str = Field(..., description="ProjectSlug is the project's slug.")
    Subject: str = Field(..., description='Subject is the subject from the API Token.')


class Op(Enum):
    add = 'add'
    remove = 'remove'
    replace = 'replace'
    move = 'move'
    copy = 'copy'
    test = 'test'


class JsonPatch(BaseModel):
    from_: Optional[str] = Field(
        None,
        alias='from',
        description='This field is used together with operation "move" and uses JSON Pointer notation.\n\nLearn more [about JSON Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).',
        example='/name',
    )
    op: Op = Field(
        ...,
        description='The operation to be performed. One of "add", "remove", "replace", "move", "copy", or "test".',
        example='replace',
    )
    path: str = Field(
        ...,
        description='The path to the target path. Uses JSON pointer notation.\n\nLearn more [about JSON Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).',
        example='/name',
    )
    value: Optional[Any] = Field(
        None,
        description='The value to be used within the operations.\n\nLearn more [about JSON Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).',
        example='foobar',
    )


class JsonWebKey(BaseModel):
    alg: str = Field(
        ...,
        description='The "alg" (algorithm) parameter identifies the algorithm intended for\nuse with the key.  The values used should either be registered in the\nIANA "JSON Web Signature and Encryption Algorithms" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.',
        example='RS256',
    )
    crv: Optional[str] = Field(None, example='P-256')
    d: Optional[str] = Field(
        None,
        example='T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE',
    )
    dp: Optional[str] = Field(
        None,
        example='G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0',
    )
    dq: Optional[str] = Field(
        None,
        example='s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk',
    )
    e: Optional[str] = Field(None, example='AQAB')
    k: Optional[str] = Field(None, example='GawgguFyGrWKav7AX4VKUg')
    kid: str = Field(
        ...,
        description='The "kid" (key ID) parameter is used to match a specific key.  This\nis used, for instance, to choose among a set of keys within a JWK Set\nduring key rollover.  The structure of the "kid" value is\nunspecified.  When "kid" values are used within a JWK Set, different\nkeys within the JWK Set SHOULD use distinct "kid" values.  (One\nexample in which different keys might use the same "kid" value is if\nthey have different "kty" (key type) values but are considered to be\nequivalent alternatives by the application using them.)  The "kid"\nvalue is a case-sensitive string.',
        example='1603dfe0af8f4596',
    )
    kty: str = Field(
        ...,
        description='The "kty" (key type) parameter identifies the cryptographic algorithm\nfamily used with the key, such as "RSA" or "EC". "kty" values should\neither be registered in the IANA "JSON Web Key Types" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.  The "kty" value is a case-sensitive string.',
        example='RSA',
    )
    n: Optional[str] = Field(
        None,
        example='vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0',
    )
    p: Optional[str] = Field(
        None,
        example='6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ',
    )
    q: Optional[str] = Field(
        None,
        example='0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ',
    )
    qi: Optional[str] = Field(
        None,
        example='GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU',
    )
    use: str = Field(
        ...,
        description='Use ("public key use") identifies the intended use of\nthe public key. The "use" parameter is employed to indicate whether\na public key is used for encrypting data or verifying the signature\non data. Values are commonly "sig" (signature) or "enc" (encryption).',
        example='sig',
    )
    x: Optional[str] = Field(
        None, example='f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU'
    )
    x5c: Optional[List[str]] = Field(
        None,
        description='The "x5c" (X.509 certificate chain) parameter contains a chain of one\nor more PKIX certificates [RFC5280].  The certificate chain is\nrepresented as a JSON array of certificate value strings.  Each\nstring in the array is a base64-encoded (Section 4 of [RFC4648] --\nnot base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.\nThe PKIX certificate containing the key value MUST be the first\ncertificate.',
    )
    y: Optional[str] = Field(
        None, example='x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0'
    )


class JsonWebKeySet(BaseModel):
    keys: Optional[List[JsonWebKey]] = Field(
        None,
        description='List of JSON Web Keys\n\nThe value of the "keys" parameter is an array of JSON Web Key (JWK)\nvalues. By default, the order of the JWK values within the array does\nnot imply an order of preference among them, although applications\nof JWK Sets can choose to assign a meaning to the order for their\npurposes, if desired.',
    )


class ListCustomDomains(BaseModel):
    __root__: List[CustomDomain] = Field(..., description='Custom Hostname List')


class ListEventStreams(BaseModel):
    event_streams: Optional[List[EventStream]] = None


class Active(Enum):
    password = 'password'
    oidc = 'oidc'
    totp = 'totp'
    lookup_secret = 'lookup_secret'
    webauthn = 'webauthn'
    code = 'code'
    passkey = 'passkey'
    profile = 'profile'
    link_recovery = 'link_recovery'
    code_recovery = 'code_recovery'


class LoginFlowState(Enum):
    choose_method = 'choose_method'
    sent_email = 'sent_email'
    passed_challenge = 'passed_challenge'


class LogoutFlow(BaseModel):
    logout_token: str = Field(
        ..., description='LogoutToken can be used to perform logout using AJAX.'
    )
    logout_url: str = Field(
        ...,
        description='LogoutURL can be opened in a browser to sign the user out.\n\nformat: uri',
    )


class ManagedIdentitySchema(BaseModel):
    blob_name: str = Field(
        ...,
        description='The gcs file name\n\nThis is a randomly generated name which is used to uniquely identify the file on the blob storage',
    )
    blob_url: str = Field(..., description='The publicly accessible url of the schema')
    content_hash: Optional[str] = Field(
        None, description="The Content Hash\n\nContains a hash of the schema's content."
    )
    created_at: datetime = Field(..., description="The Schema's Creation Date")
    id: UUID = Field(..., description="The schema's ID.")
    name: str = Field(
        ...,
        description='The schema name\n\nThis is set by the user and is for them to easily recognise their schema',
        example='CustomerIdentity',
    )
    updated_at: datetime = Field(..., description='Last Time Schema was Updated')


class ManagedIdentitySchemaValidationResult(BaseModel):
    message: Optional[str] = None
    valid: Optional[bool] = None


class ManagedIdentitySchemas(BaseModel):
    __root__: List[ManagedIdentitySchema]


class Status(Enum):
    pending = 'pending'
    accepted = 'accepted'
    declined = 'declined'
    expired = 'expired'
    cancelled = 'cancelled'
    removed = 'removed'


class MemberInvite(BaseModel):
    created_at: datetime = Field(
        ..., description="The Project's Revision Creation Date"
    )
    id: UUID = Field(..., description="The invite's ID.")
    invitee_email: str = Field(..., description="The invitee's email")
    invitee_id: Optional[NullUUID] = None
    owner_email: str = Field(
        ..., description="The invite owner's email\nUsually the project's owner email"
    )
    owner_id: UUID = Field(
        ..., description="The invite owner's ID\nUsually the project's owner"
    )
    project_id: Optional[NullUUID] = None
    role: Optional[String] = None
    status: Status = Field(
        ...,
        description="The invite's status\nKeeps track of the invites status such as pending, accepted, declined, expired\npending PENDING\naccepted ACCEPTED\ndeclined DECLINED\nexpired EXPIRED\ncancelled CANCELLED\nremoved REMOVED",
    )
    updated_at: datetime = Field(
        ..., description="Last Time Project's Revision was Updated"
    )
    workspace_id: Optional[NullUUID] = None


class MemberInvites(BaseModel):
    __root__: List[MemberInvite]


class TemplateType(Enum):
    recovery_invalid = 'recovery_invalid'
    recovery_valid = 'recovery_valid'
    recovery_code_invalid = 'recovery_code_invalid'
    recovery_code_valid = 'recovery_code_valid'
    verification_invalid = 'verification_invalid'
    verification_valid = 'verification_valid'
    verification_code_invalid = 'verification_code_invalid'
    verification_code_valid = 'verification_code_valid'
    stub = 'stub'
    login_code_valid = 'login_code_valid'
    registration_code_valid = 'registration_code_valid'


class Status1(Enum):
    failed = 'failed'
    success = 'success'


class MessageDispatch(BaseModel):
    created_at: datetime = Field(
        ..., description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    error: Optional[JSONRawMessage] = None
    id: UUID = Field(..., description='The ID of this message dispatch')
    message_id: UUID = Field(..., description='The ID of the message being dispatched')
    status: Status1 = Field(
        ...,
        description='The status of this dispatch\nEither "failed" or "success"\nfailed CourierMessageDispatchStatusFailed\nsuccess CourierMessageDispatchStatusSuccess',
    )
    updated_at: datetime = Field(
        ..., description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )


class MetricsDatapoint(BaseModel):
    count: int = Field(..., description='The count of events that occured in this time')
    time: datetime = Field(..., description='The time of the bucket')


class Namespace1(BaseModel):
    name: Optional[str] = Field(None, description='Name of the namespace.')


class State2(Enum):
    running = 'running'
    halted = 'halted'
    deleted = 'deleted'


class NormalizedProjectRevisionHook(BaseModel):
    config_key: str = Field(..., description='The Hooks Config Key')
    created_at: Optional[datetime] = Field(
        None, description="The Project's Revision Creation Date"
    )
    hook: str = Field(..., description='The Hook Type')
    id: Optional[UUID] = Field(None, description='ID of the entry')
    project_revision_id: Optional[UUID] = Field(
        None, description="The Revision's ID this schema belongs to"
    )
    updated_at: Optional[datetime] = Field(
        None, description="Last Time Project's Revision was Updated"
    )
    web_hook_config_auth_api_key_in: Optional[str] = Field(
        None,
        description='Whether to send the API Key in the HTTP Header or as a HTTP Cookie',
        example='header',
    )
    web_hook_config_auth_api_key_name: Optional[str] = Field(
        None, description='The name of the api key', example='X-API-Key'
    )
    web_hook_config_auth_api_key_value: Optional[str] = Field(
        None,
        description='The value of the api key',
        example='eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ',
    )
    web_hook_config_auth_basic_auth_password: Optional[str] = Field(
        None, description='The password to be sent in the HTTP Basic Auth Header'
    )
    web_hook_config_auth_basic_auth_user: Optional[str] = Field(
        None, description='The username to be sent in the HTTP Basic Auth Header'
    )
    web_hook_config_auth_type: Optional[str] = Field(
        None, description='HTTP Auth Method to use for the Web-Hook'
    )
    web_hook_config_body: Optional[str] = Field(
        None,
        description='URI pointing to the JsonNet template used for Web-Hook payload generation. Only used for those HTTP methods, which support HTTP body payloads.',
        example='base64://ZnVuY3Rpb24oY3R4KSB7CiAgaWRlbnRpdHlfaWQ6IGlmIGN0eFsiaWRlbnRpdHkiXSAhPSBudWxsIHRoZW4gY3R4LmlkZW50aXR5LmlkLAp9=',
    )
    web_hook_config_can_interrupt: Optional[bool] = Field(
        None,
        description='If enabled allows the web hook to interrupt / abort the self-service flow. It only applies to certain flows (registration/verification/login/settings) and requires a valid response format.',
    )
    web_hook_config_method: Optional[str] = Field(
        None,
        description='The HTTP method to use (GET, POST, etc) for the Web-Hook',
        example='POST',
    )
    web_hook_config_response_ignore: Optional[bool] = Field(
        None, description='Whether to ignore the Web Hook response'
    )
    web_hook_config_response_parse: Optional[bool] = Field(
        None, description='Whether to parse the Web Hook response'
    )
    web_hook_config_url: Optional[str] = Field(
        None,
        description='The URL the Web-Hook should call',
        example='https://www.example.org/web-hook-listener',
    )


class NormalizedProjectRevisionIdentitySchema(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description="The Project's Revision Creation Date"
    )
    id: Optional[UUID] = Field(None, description='The unique ID of this entry.')
    identity_schema: Optional[ManagedIdentitySchema] = None
    identity_schema_id: Optional[NullUUID] = None
    import_id: Optional[str] = Field(
        None,
        description='The imported (named) ID of the Identity Schema referenced in the Ory Kratos config.',
    )
    import_url: Optional[str] = Field(
        None,
        description='The ImportURL can be used to import an Identity Schema from a bse64 encoded string.\nIn the future, this key also support HTTPS and other sources!\n\nIf you import an Ory Kratos configuration, this would be akin to the `identity.schemas.#.url` key.\n\nThe configuration will always return the import URL when you fetch it from the API.',
        example='base64://ey...',
    )
    is_default: Optional[bool] = Field(
        None,
        description='If true sets the default schema for identities\n\nOnly one schema can ever be the default schema. If you\ntry to add two schemas with default to true, the\nrequest will fail.',
    )
    preset: Optional[str] = Field(
        None, description='Use a preset instead of a custom identity schema.'
    )
    project_revision_id: Optional[UUID] = Field(
        None, description="The Revision's ID this schema belongs to"
    )
    updated_at: Optional[datetime] = Field(
        None, description="Last Time Project's Revision was Updated"
    )


class NormalizedProjectRevisionIdentitySchemas(BaseModel):
    __root__: List[NormalizedProjectRevisionIdentitySchema]


class Pkce(Enum):
    auto = 'auto'
    never = 'never'
    force = 'force'


class State3(Enum):
    enabled = 'enabled'
    disabled = 'disabled'


class NormalizedProjectRevisionThirdPartyProvider(BaseModel):
    additional_id_token_audiences: Optional[StringSliceJSONFormat] = None
    apple_private_key: Optional[String] = None
    apple_private_key_id: Optional[str] = Field(
        None,
        description='Apple Private Key Identifier\n\nSign In with Apple Private Key Identifier needed for generating a JWT token for client secret',
        example='UX56C66723',
    )
    apple_team_id: Optional[str] = Field(
        None,
        description='Apple Developer Team ID\n\nApple Developer Team ID needed for generating a JWT token for client secret',
        example='KP76DQS54M',
    )
    auth_url: Optional[str] = Field(
        None,
        description='AuthURL is the authorize url, typically something like: https://example.org/oauth2/auth\nShould only be used when the OAuth2 / OpenID Connect server is not supporting OpenID Connect Discovery and when\n`provider` is set to `generic`.',
        example='https://www.googleapis.com/oauth2/v2/auth',
    )
    azure_tenant: Optional[str] = Field(
        None,
        description='Tenant is the Azure AD Tenant to use for authentication, and must be set when `provider` is set to `microsoft`.\n\nCan be either `common`, `organizations`, `consumers` for a multitenant application or a specific tenant like\n`8eaef023-2b34-4da1-9baa-8bc8c9d6a490` or `contoso.onmicrosoft.com`.',
        example='contoso.onmicrosoft.com',
    )
    claims_source: Optional[String] = None
    client_id: Optional[str] = Field(
        None, description="ClientID is the application's Client ID."
    )
    client_secret: Optional[String] = None
    created_at: Optional[datetime] = Field(
        None, description="The Project's Revision Creation Date"
    )
    id: Optional[UUID] = None
    issuer_url: Optional[str] = Field(
        None,
        description='IssuerURL is the OpenID Connect Server URL. You can leave this empty if `provider` is not set to `generic`.\nIf set, neither `auth_url` nor `token_url` are required.',
        example='https://accounts.google.com',
    )
    label: Optional[str] = Field(
        None,
        description='Label represents an optional label which can be used in the UI generation.',
    )
    mapper_url: Optional[str] = Field(
        None,
        description="Mapper specifies the JSONNet code snippet which uses the OpenID Connect Provider's data (e.g. GitHub or Google\nprofile information) to hydrate the identity's data.",
    )
    organization_id: Optional[NullUUID] = None
    pkce: Optional[Pkce] = Field(
        None,
        description="PKCE controls if the OpenID Connect OAuth2 flow should use PKCE (Proof Key for Code Exchange).\nPossible values are: `auto` (default), `never`, `force`.\n`auto`: PKCE is used if the provider supports it. Requires setting `issuer_url`.\n`never`: Disable PKCE entirely for this provider, even if the provider advertises support for it.\n`force`: Always use PKCE, even if the provider does not advertise support for it. OAuth2 flows will fail if the provider does not support PKCE.\nIMPORTANT: If you set this to `force`, you must whitelist a different return URL for your OAuth2 client in the provider's configuration.\nInstead of <base-url>/self-service/methods/oidc/callback/<provider>, you must use <base-url>/self-service/methods/oidc/callback\n(Note the missing <provider> path segment and no trailing slash).",
    )
    project_revision_id: Optional[UUID] = Field(
        None, description="The Revision's ID this schema belongs to"
    )
    provider: Optional[str] = Field(
        None,
        description='Provider is either "generic" for a generic OAuth 2.0 / OpenID Connect Provider or one of:\ngeneric\ngoogle\ngithub\ngitlab\nmicrosoft\ndiscord\nslack\nfacebook\nvk\nyandex\napple',
        example='google',
    )
    provider_id: Optional[str] = Field(None, description="ID is the provider's ID")
    requested_claims: Optional[JSONRawMessage] = None
    scope: Optional[StringSliceJSONFormat] = None
    state: Optional[State3] = Field(
        None,
        description='State indicates the state of the provider\n\nOnly providers with state `enabled` will be used for authentication\nenabled ThirdPartyProviderStateEnabled\ndisabled ThirdPartyProviderStateDisabled',
    )
    subject_source: Optional[String] = None
    token_url: Optional[str] = Field(
        None,
        description='TokenURL is the token url, typically something like: https://example.org/oauth2/token\n\nShould only be used when the OAuth2 / OpenID Connect server is not supporting OpenID Connect Discovery and when\n`provider` is set to `generic`.',
        example='https://www.googleapis.com/oauth2/v4/token',
    )
    updated_at: Optional[datetime] = Field(
        None, description="Last Time Project's Revision was Updated"
    )


class NormalizedProjectRevisionTokenizerTemplate(BaseModel):
    claims_mapper_url: Optional[str] = Field(None, description='Claims mapper URL')
    created_at: Optional[datetime] = Field(
        None, description="The Project's Revision Creation Date"
    )
    id: Optional[UUID] = Field(None, description='The revision ID.')
    jwks_url: Optional[str] = Field(None, description='JSON Web Key URL')
    key: Optional[str] = Field(None, description='The unique key of the template')
    project_revision_id: Optional[UUID] = Field(
        None, description="The Revision's ID this schema belongs to"
    )
    ttl: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '1m', description='Token time to live', example='1h'
    )
    updated_at: Optional[datetime] = Field(
        None, description="Last Time Project's Revision was Updated"
    )


class NormalizedProjectRevisionTokenizerTemplates(BaseModel):
    __root__: List[NormalizedProjectRevisionTokenizerTemplate]


class NullInt64(BaseModel):
    __root__: Optional[int] = None


class NullJsonRawMessage(BaseModel):
    pass


class NullString1(BaseModel):
    __root__: str


class NullTimeModel(BaseModel):
    __root__: datetime = Field(
        ..., title='NullTime implements sql.NullTime functionality.'
    )


class OAuth2Client(BaseModel):
    access_token_strategy: Optional[str] = Field(
        None,
        description='OAuth 2.0 Access Token Strategy\n\nAccessTokenStrategy is the strategy used to generate access tokens.\nValid options are `jwt` and `opaque`. `jwt` is a bad idea, see https://www.ory.sh/docs/hydra/advanced#json-web-tokens\nSetting the stragegy here overrides the global setting in `strategies.access_token`.',
    )
    allowed_cors_origins: Optional[StringSliceJSONFormat] = None
    audience: Optional[StringSliceJSONFormat] = None
    authorization_code_grant_access_token_lifespan: Optional[NullDuration] = None
    authorization_code_grant_id_token_lifespan: Optional[NullDuration] = None
    authorization_code_grant_refresh_token_lifespan: Optional[NullDuration] = None
    backchannel_logout_session_required: Optional[bool] = Field(
        None,
        description='OpenID Connect Back-Channel Logout Session Required\n\nBoolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout\nToken to identify the RP session with the OP when the backchannel_logout_uri is used.\nIf omitted, the default value is false.',
    )
    backchannel_logout_uri: Optional[str] = Field(
        None,
        description='OpenID Connect Back-Channel Logout URI\n\nRP URL that will cause the RP to log itself out when sent a Logout Token by the OP.',
    )
    client_credentials_grant_access_token_lifespan: Optional[NullDuration] = None
    client_id: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client ID\n\nThe ID is immutable. If no ID is provided, a UUID4 will be generated.',
    )
    client_name: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client Name\n\nThe human-readable name of the client to be presented to the\nend-user during authorization.',
    )
    client_secret: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client Secret\n\nThe secret will be included in the create request as cleartext, and then\nnever again. The secret is kept in hashed format and is not recoverable once lost.',
    )
    client_secret_expires_at: Optional[int] = Field(
        None,
        description='OAuth 2.0 Client Secret Expires At\n\nThe field is currently not supported and its value is always 0.',
    )
    client_uri: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client URI\n\nClientURI is a URL string of a web page providing information about the client.\nIf present, the server SHOULD display this URL to the end-user in\na clickable fashion.',
    )
    contacts: Optional[StringSliceJSONFormat] = None
    created_at: Optional[datetime] = Field(
        None,
        description="OAuth 2.0 Client Creation Date\n\nCreatedAt returns the timestamp of the client's creation.",
    )
    frontchannel_logout_session_required: Optional[bool] = Field(
        None,
        description='OpenID Connect Front-Channel Logout Session Required\n\nBoolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be\nincluded to identify the RP session with the OP when the frontchannel_logout_uri is used.\nIf omitted, the default value is false.',
    )
    frontchannel_logout_uri: Optional[str] = Field(
        None,
        description='OpenID Connect Front-Channel Logout URI\n\nRP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query\nparameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the\nrequest and to determine which of the potentially multiple sessions is to be logged out; if either is\nincluded, both MUST be.',
    )
    grant_types: Optional[StringSliceJSONFormat] = None
    implicit_grant_access_token_lifespan: Optional[NullDuration] = None
    implicit_grant_id_token_lifespan: Optional[NullDuration] = None
    jwks: Optional[Any] = Field(
        None,
        description="OAuth 2.0 Client JSON Web Key Set\n\nClient's JSON Web Key Set [JWK] document, passed by value. The semantics of the jwks parameter are the same as\nthe jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter\nis intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for\ninstance, by native applications that might not have a location to host the contents of the JWK Set. If a Client\ncan use jwks_uri, it MUST NOT use jwks. One significant downside of jwks is that it does not enable key rotation\n(which jwks_uri does, as described in Section 10 of OpenID Connect Core 1.0 [OpenID.Core]). The jwks_uri and jwks\nparameters MUST NOT be used together.",
    )
    jwks_uri: Optional[str] = Field(
        None,
        description="OAuth 2.0 Client JSON Web Key Set URL\n\nURL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains\nthe signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the\nClient's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing\nand encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced\nJWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both\nsignatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used\nto provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST\nmatch those in the certificate.",
    )
    jwt_bearer_grant_access_token_lifespan: Optional[NullDuration] = None
    logo_uri: Optional[str] = Field(
        None,
        description="OAuth 2.0 Client Logo URI\n\nA URL string referencing the client's logo.",
    )
    metadata: Optional[JSONRawMessage] = None
    owner: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client Owner\n\nOwner is a string identifying the owner of the OAuth 2.0 Client.',
    )
    policy_uri: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client Policy URI\n\nPolicyURI is a URL string that points to a human-readable privacy policy document\nthat describes how the deployment organization collects, uses,\nretains, and discloses personal data.',
    )
    post_logout_redirect_uris: Optional[StringSliceJSONFormat] = None
    redirect_uris: Optional[StringSliceJSONFormat] = None
    refresh_token_grant_access_token_lifespan: Optional[NullDuration] = None
    refresh_token_grant_id_token_lifespan: Optional[NullDuration] = None
    refresh_token_grant_refresh_token_lifespan: Optional[NullDuration] = None
    registration_access_token: Optional[str] = Field(
        None,
        description='OpenID Connect Dynamic Client Registration Access Token\n\nRegistrationAccessToken can be used to update, get, or delete the OAuth2 Client. It is sent when creating a client\nusing Dynamic Client Registration.',
    )
    registration_client_uri: Optional[str] = Field(
        None,
        description='OpenID Connect Dynamic Client Registration URL\n\nRegistrationClientURI is the URL used to update, get, or delete the OAuth2 Client.',
    )
    request_object_signing_alg: Optional[str] = Field(
        None,
        description='OpenID Connect Request Object Signing Algorithm\n\nJWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects\nfrom this Client MUST be rejected, if not signed with this algorithm.',
    )
    request_uris: Optional[StringSliceJSONFormat] = None
    response_types: Optional[StringSliceJSONFormat] = None
    scope: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client Scope\n\nScope is a string containing a space-separated list of scope values (as\ndescribed in Section 3.3 of OAuth 2.0 [RFC6749]) that the client\ncan use when requesting access tokens.',
        example='scope1 scope-2 scope.3 scope:4',
    )
    sector_identifier_uri: Optional[str] = Field(
        None,
        description='OpenID Connect Sector Identifier URI\n\nURL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a\nfile with a single JSON array of redirect_uri values.',
    )
    skip_consent: Optional[bool] = Field(
        None,
        description='SkipConsent skips the consent screen for this client. This field can only\nbe set from the admin API.',
    )
    skip_logout_consent: Optional[bool] = Field(
        None,
        description='SkipLogoutConsent skips the logout consent screen for this client. This field can only\nbe set from the admin API.',
    )
    subject_type: Optional[str] = Field(
        None,
        description='OpenID Connect Subject Type\n\nThe `subject_types_supported` Discovery parameter contains a\nlist of the supported subject_type values for this server. Valid types include `pairwise` and `public`.',
    )
    token_endpoint_auth_method: Optional[str] = Field(
        'client_secret_basic',
        description='OAuth 2.0 Token Endpoint Authentication Method\n\nRequested Client Authentication method for the Token Endpoint. The options are:\n\n`client_secret_basic`: (default) Send `client_id` and `client_secret` as `application/x-www-form-urlencoded` encoded in the HTTP Authorization header.\n`client_secret_post`: Send `client_id` and `client_secret` as `application/x-www-form-urlencoded` in the HTTP body.\n`private_key_jwt`: Use JSON Web Tokens to authenticate the client.\n`none`: Used for public clients (native apps, mobile apps) which can not have secrets.',
    )
    token_endpoint_auth_signing_alg: Optional[str] = Field(
        None,
        description='OAuth 2.0 Token Endpoint Signing Algorithm\n\nRequested Client Authentication signing algorithm for the Token Endpoint.',
    )
    tos_uri: Optional[str] = Field(
        None,
        description='OAuth 2.0 Client Terms of Service URI\n\nA URL string pointing to a human-readable terms of service\ndocument for the client that describes a contractual relationship\nbetween the end-user and the client that the end-user accepts when\nauthorizing the client.',
    )
    updated_at: Optional[datetime] = Field(
        None,
        description='OAuth 2.0 Client Last Update Date\n\nUpdatedAt returns the timestamp of the last update.',
    )
    userinfo_signed_response_alg: Optional[str] = Field(
        None,
        description='OpenID Connect Request Userinfo Signed Response Algorithm\n\nJWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT\n[JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims\nas a UTF-8 encoded JSON object using the application/json content-type.',
    )


class OAuth2ClientTokenLifespans(BaseModel):
    authorization_code_grant_access_token_lifespan: Optional[NullDuration] = None
    authorization_code_grant_id_token_lifespan: Optional[NullDuration] = None
    authorization_code_grant_refresh_token_lifespan: Optional[NullDuration] = None
    client_credentials_grant_access_token_lifespan: Optional[NullDuration] = None
    implicit_grant_access_token_lifespan: Optional[NullDuration] = None
    implicit_grant_id_token_lifespan: Optional[NullDuration] = None
    jwt_bearer_grant_access_token_lifespan: Optional[NullDuration] = None
    refresh_token_grant_access_token_lifespan: Optional[NullDuration] = None
    refresh_token_grant_id_token_lifespan: Optional[NullDuration] = None
    refresh_token_grant_refresh_token_lifespan: Optional[NullDuration] = None


class OAuth2ConsentRequestOpenIDConnectContext(BaseModel):
    acr_values: Optional[List[str]] = Field(
        None,
        description='ACRValues is the Authentication AuthorizationContext Class Reference requested in the OAuth 2.0 Authorization request.\nIt is a parameter defined by OpenID Connect and expresses which level of authentication (e.g. 2FA) is required.\n\nOpenID Connect defines it as follows:\n> Requested Authentication AuthorizationContext Class Reference values. Space-separated string that specifies the acr values\nthat the Authorization Server is being requested to use for processing this Authentication Request, with the\nvalues appearing in order of preference. The Authentication AuthorizationContext Class satisfied by the authentication\nperformed is returned as the acr Claim Value, as specified in Section 2. The acr Claim is requested as a\nVoluntary Claim by this parameter.',
    )
    display: Optional[str] = Field(
        None,
        description='Display is a string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User.\nThe defined values are:\npage: The Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.\npopup: The Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.\ntouch: The Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.\nwap: The Authorization Server SHOULD display the authentication and consent UI consistent with a "feature phone" type display.\n\nThe Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.',
    )
    id_token_hint_claims: Optional[Dict[str, Any]] = Field(
        None,
        description="IDTokenHintClaims are the claims of the ID Token previously issued by the Authorization Server being passed as a hint about the\nEnd-User's current or past authenticated session with the Client.",
    )
    login_hint: Optional[str] = Field(
        None,
        description='LoginHint hints about the login identifier the End-User might use to log in (if necessary).\nThis hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier)\nand then wants to pass that value as a hint to the discovered authorization service. This value MAY also be a\nphone number in the format specified for the phone_number Claim. The use of this parameter is optional.',
    )
    ui_locales: Optional[List[str]] = Field(
        None,
        description='UILocales is the End-User\'id preferred languages and scripts for the user interface, represented as a\nspace-separated list of BCP47 [RFC5646] language tag values, ordered by preference. For instance, the value\n"fr-CA fr en" represents a preference for French as spoken in Canada, then French (without a region designation),\nfollowed by English (without a region designation). An error SHOULD NOT result if some or all of the requested\nlocales are not supported by the OpenID Provider.',
    )


class ExpiresAt(BaseModel):
    access_token: Optional[datetime] = None
    authorize_code: Optional[datetime] = None
    id_token: Optional[datetime] = None
    par_context: Optional[datetime] = None
    refresh_token: Optional[datetime] = None


class OAuth2LoginRequest(BaseModel):
    challenge: str = Field(
        ...,
        description='ID is the identifier ("login challenge") of the login request. It is used to\nidentify the session.',
    )
    client: OAuth2Client
    oidc_context: Optional[OAuth2ConsentRequestOpenIDConnectContext] = None
    request_url: str = Field(
        ...,
        description='RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which\ninitiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but\nmight come in handy if you want to deal with additional request parameters.',
    )
    requested_access_token_audience: Optional[StringSliceJSONFormat] = None
    requested_scope: Optional[StringSliceJSONFormat] = None
    session_id: Optional[str] = Field(
        None,
        description='SessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag)\nthis ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false)\nthis will be a new random value. This value is used as the "sid" parameter in the ID Token and in OIDC Front-/Back-\nchannel logout. It\'s value can generally be used to associate consecutive login requests by a certain user.',
    )
    skip: bool = Field(
        ...,
        description='Skip, if true, implies that the client has requested the same scopes from the same user previously.\nIf true, you can skip asking the user to grant the requested scopes, and simply forward the user to the redirect URL.\n\nThis feature allows you to update / set session information.',
    )
    subject: str = Field(
        ...,
        description='Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope\nrequested by the OAuth 2.0 client. If this value is set and `skip` is true, you MUST include this subject type\nwhen accepting the login request, or the request will fail.',
    )


class OAuth2LogoutRequest(BaseModel):
    challenge: Optional[str] = Field(
        None,
        description='Challenge is the identifier ("logout challenge") of the logout authentication request. It is used to\nidentify the session.',
    )
    client: Optional[OAuth2Client] = None
    request_url: Optional[str] = Field(
        None, description='RequestURL is the original Logout URL requested.'
    )
    rp_initiated: Optional[bool] = Field(
        None,
        description='RPInitiated is set to true if the request was initiated by a Relying Party (RP), also known as an OAuth 2.0 Client.',
    )
    sid: Optional[str] = Field(
        None,
        description='SessionID is the login session ID that was requested to log out.',
    )
    subject: Optional[str] = Field(
        None, description='Subject is the user for whom the logout was request.'
    )


class OAuth2RedirectTo(BaseModel):
    redirect_to: str = Field(
        ...,
        description="RedirectURL is the URL which you should redirect the user's browser to once the authentication process is completed.",
    )


class OAuth2TokenExchange(BaseModel):
    access_token: Optional[str] = Field(
        None, description='The access token issued by the authorization server.'
    )
    expires_in: Optional[int] = Field(
        None,
        description='The lifetime in seconds of the access token. For\nexample, the value "3600" denotes that the access token will\nexpire in one hour from the time the response was generated.',
    )
    id_token: Optional[str] = Field(
        None, description='To retrieve a refresh token request the id_token scope.'
    )
    refresh_token: Optional[str] = Field(
        None,
        description='The refresh token, which can be used to obtain new\naccess tokens. To retrieve it add the scope "offline" to your access token request.',
    )
    scope: Optional[str] = Field(None, description='The scope of the access token')
    token_type: Optional[str] = Field(None, description='The type of the token issued')


class OidcConfiguration(BaseModel):
    authorization_endpoint: str = Field(
        ...,
        description='OAuth 2.0 Authorization Endpoint URL',
        example='https://playground.ory.sh/ory-hydra/public/oauth2/auth',
    )
    backchannel_logout_session_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Back-Channel Logout Session Required\n\nBoolean value specifying whether the OP can pass a sid (session ID) Claim in the Logout Token to identify the RP\nsession with the OP. If supported, the sid Claim is also included in ID Tokens issued by the OP',
    )
    backchannel_logout_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Back-Channel Logout Supported\n\nBoolean value specifying whether the OP supports back-channel logout, with true indicating support.',
    )
    claims_parameter_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Claims Parameter Parameter Supported\n\nBoolean value specifying whether the OP supports use of the claims parameter, with true indicating support.',
    )
    claims_supported: Optional[List[str]] = Field(
        None,
        description='OpenID Connect Supported Claims\n\nJSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply\nvalues for. Note that for privacy or other reasons, this might not be an exhaustive list.',
    )
    code_challenge_methods_supported: Optional[List[str]] = Field(
        None,
        description='OAuth 2.0 PKCE Supported Code Challenge Methods\n\nJSON array containing a list of Proof Key for Code Exchange (PKCE) [RFC7636] code challenge methods supported\nby this authorization server.',
    )
    credentials_endpoint_draft_00: Optional[str] = Field(
        None,
        description='OpenID Connect Verifiable Credentials Endpoint\n\nContains the URL of the Verifiable Credentials Endpoint.',
    )
    credentials_supported_draft_00: Optional[List[CredentialSupportedDraft00]] = Field(
        None,
        description='OpenID Connect Verifiable Credentials Supported\n\nJSON array containing a list of the Verifiable Credentials supported by this authorization server.',
    )
    end_session_endpoint: Optional[str] = Field(
        None,
        description='OpenID Connect End-Session Endpoint\n\nURL at the OP to which an RP can perform a redirect to request that the End-User be logged out at the OP.',
    )
    frontchannel_logout_session_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Front-Channel Logout Session Required\n\nBoolean value specifying whether the OP can pass iss (issuer) and sid (session ID) query parameters to identify\nthe RP session with the OP when the frontchannel_logout_uri is used. If supported, the sid Claim is also\nincluded in ID Tokens issued by the OP.',
    )
    frontchannel_logout_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Front-Channel Logout Supported\n\nBoolean value specifying whether the OP supports HTTP-based logout, with true indicating support.',
    )
    grant_types_supported: Optional[List[str]] = Field(
        None,
        description='OAuth 2.0 Supported Grant Types\n\nJSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.',
    )
    id_token_signed_response_alg: List[str] = Field(
        ...,
        description='OpenID Connect Default ID Token Signing Algorithms\n\nAlgorithm used to sign OpenID Connect ID Tokens.',
    )
    id_token_signing_alg_values_supported: List[str] = Field(
        ...,
        description='OpenID Connect Supported ID Token Signing Algorithms\n\nJSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token\nto encode the Claims in a JWT.',
    )
    issuer: str = Field(
        ...,
        description='OpenID Connect Issuer URL\n\nAn URL using the https scheme with no query or fragment component that the OP asserts as its IssuerURL Identifier.\nIf IssuerURL discovery is supported , this value MUST be identical to the issuer value returned\nby WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this IssuerURL.',
        example='https://playground.ory.sh/ory-hydra/public/',
    )
    jwks_uri: str = Field(
        ...,
        description="OpenID Connect Well-Known JSON Web Keys URL\n\nURL of the OP's JSON Web Key Set [JWK] document. This contains the signing key(s) the RP uses to validate\nsignatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs\nto encrypt requests to the Server. When both signing and encryption keys are made available, a use (Key Use)\nparameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage.\nAlthough some algorithms allow the same key to be used for both signatures and encryption, doing so is\nNOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of\nkeys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.",
        example='https://{slug}.projects.oryapis.com/.well-known/jwks.json',
    )
    registration_endpoint: Optional[str] = Field(
        None,
        description='OpenID Connect Dynamic Client Registration Endpoint URL',
        example='https://playground.ory.sh/ory-hydra/admin/client',
    )
    request_object_signing_alg_values_supported: Optional[List[str]] = Field(
        None,
        description='OpenID Connect Supported Request Object Signing Algorithms\n\nJSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects,\nwhich are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core]. These algorithms are used both when\nthe Request Object is passed by value (using the request parameter) and when it is passed by reference\n(using the request_uri parameter).',
    )
    request_parameter_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Request Parameter Supported\n\nBoolean value specifying whether the OP supports use of the request parameter, with true indicating support.',
    )
    request_uri_parameter_supported: Optional[bool] = Field(
        None,
        description='OpenID Connect Request URI Parameter Supported\n\nBoolean value specifying whether the OP supports use of the request_uri parameter, with true indicating support.',
    )
    require_request_uri_registration: Optional[bool] = Field(
        None,
        description='OpenID Connect Requires Request URI Registration\n\nBoolean value specifying whether the OP requires any request_uri values used to be pre-registered\nusing the request_uris registration parameter.',
    )
    response_modes_supported: Optional[List[str]] = Field(
        None,
        description='OAuth 2.0 Supported Response Modes\n\nJSON array containing a list of the OAuth 2.0 response_mode values that this OP supports.',
    )
    response_types_supported: List[str] = Field(
        ...,
        description='OAuth 2.0 Supported Response Types\n\nJSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID\nProviders MUST support the code, id_token, and the token id_token Response Type values.',
    )
    revocation_endpoint: Optional[str] = Field(
        None,
        description="OAuth 2.0 Token Revocation URL\n\nURL of the authorization server's OAuth 2.0 revocation endpoint.",
    )
    scopes_supported: Optional[List[str]] = Field(
        None,
        description='OAuth 2.0 Supported Scope Values\n\nJSON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST\nsupport the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used',
    )
    subject_types_supported: List[str] = Field(
        ...,
        description='OpenID Connect Supported Subject Types\n\nJSON array containing a list of the Subject Identifier types that this OP supports. Valid types include\npairwise and public.',
    )
    token_endpoint: str = Field(
        ...,
        description='OAuth 2.0 Token Endpoint URL',
        example='https://playground.ory.sh/ory-hydra/public/oauth2/token',
    )
    token_endpoint_auth_methods_supported: Optional[List[str]] = Field(
        None,
        description='OAuth 2.0 Supported Client Authentication Methods\n\nJSON array containing a list of Client Authentication methods supported by this Token Endpoint. The options are\nclient_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 9 of OpenID Connect Core 1.0',
    )
    userinfo_endpoint: Optional[str] = Field(
        None,
        description="OpenID Connect Userinfo URL\n\nURL of the OP's UserInfo Endpoint.",
    )
    userinfo_signed_response_alg: List[str] = Field(
        ...,
        description='OpenID Connect User Userinfo Signing Algorithm\n\nAlgorithm used to sign OpenID Connect Userinfo Responses.',
    )
    userinfo_signing_alg_values_supported: Optional[List[str]] = Field(
        None,
        description='OpenID Connect Supported Userinfo Signing Algorithm\n\nJSON array containing a list of the JWS [JWS] signing algorithms (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims in a JWT [JWT].',
    )


class OidcUserInfo(BaseModel):
    birthdate: Optional[str] = Field(
        None,
        description="End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted. To represent only the year, YYYY format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.",
    )
    email: Optional[str] = Field(
        None,
        description="End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.",
    )
    email_verified: Optional[bool] = Field(
        None,
        description="True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.",
    )
    family_name: Optional[str] = Field(
        None,
        description='Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.',
    )
    gender: Optional[str] = Field(
        None,
        description="End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.",
    )
    given_name: Optional[str] = Field(
        None,
        description='Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.',
    )
    locale: Optional[str] = Field(
        None,
        description="End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Relying Parties MAY choose to accept this locale syntax as well.",
    )
    middle_name: Optional[str] = Field(
        None,
        description='Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.',
    )
    name: Optional[str] = Field(
        None,
        description="End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.",
    )
    nickname: Optional[str] = Field(
        None,
        description='Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.',
    )
    phone_number: Optional[str] = Field(
        None,
        description="End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.",
    )
    phone_number_verified: Optional[bool] = Field(
        None,
        description="True if the End-User's phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.",
    )
    picture: Optional[str] = Field(
        None,
        description="URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.",
    )
    preferred_username: Optional[str] = Field(
        None,
        description='Non-unique shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace.',
    )
    profile: Optional[str] = Field(
        None,
        description="URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.",
    )
    sub: Optional[str] = Field(
        None, description='Subject - Identifier for the End-User at the IssuerURL.'
    )
    updated_at: Optional[int] = Field(
        None,
        description="Time the End-User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.",
    )
    website: Optional[str] = Field(
        None,
        description="URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.",
    )
    zoneinfo: Optional[str] = Field(
        None,
        description="String from zoneinfo [zoneinfo] time zone database representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.",
    )


class Organization(BaseModel):
    created_at: datetime = Field(..., description="The organization's creation date.")
    domains: StringSliceJSONFormat
    id: UUID = Field(..., description="The organization's ID.")
    label: str = Field(..., description="The organization's human-readable label.")
    project_id: UUID = Field(..., description="The project's ID.")
    updated_at: datetime = Field(
        ..., description='The last time the organization was updated.'
    )


class Pagination(BaseModel):
    page_size: Optional[conint(ge=1, le=1000)] = Field(
        250,
        description='Items per page\n\nThis is the number of items per page to return.\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).',
    )
    page_token: Optional[str] = Field(
        '1',
        description='Next Page Token\n\nThe next page token.\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).',
    )


class PaginationHeaders(BaseModel):
    link: Optional[str] = Field(
        None,
        description='The link header contains pagination links.\n\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).\n\nin: header',
    )
    x_total_count: Optional[str] = Field(
        None,
        alias='x-total-count',
        description='The total number of clients.\n\nin: header',
    )


class PerformNativeLogoutBody(BaseModel):
    session_token: str = Field(
        ..., description='The Session Token\n\nInvalidate this session token.'
    )


class PermissionsOnProject(BaseModel):
    __root__: Optional[Dict[str, bool]] = None


class PermissionsOnWorkspace(BaseModel):
    permissions: Optional[Dict[str, bool]] = None


class State4(Enum):
    running = 'running'
    halted = 'halted'
    deleted = 'deleted'


class ProjectApiKey(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description="The token's creation date"
    )
    id: UUID = Field(..., description="The token's ID.")
    name: str = Field(
        ...,
        description="The Token's Name\n\nSet this to help you remember, for example, where you use the token.",
    )
    owner_id: UUID = Field(..., description="The token's owner")
    project_id: Optional[UUID] = Field(None, description="The Token's Project ID")
    updated_at: Optional[datetime] = Field(
        None, description="The token's last update date"
    )
    value: Optional[str] = Field(None, description="The token's value")


class ProjectBrandingColors(BaseModel):
    accent_default_color: Optional[str] = Field(
        None,
        description='AccentDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_disabled_color: Optional[str] = Field(
        None,
        description='AccentDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_emphasis_color: Optional[str] = Field(
        None,
        description='AccentEmphasisColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_muted_color: Optional[str] = Field(
        None,
        description='AccentMutedColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_subtle_color: Optional[str] = Field(
        None,
        description='AccentSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    background_canvas_color: Optional[str] = Field(
        None,
        description='BackgroundCanvasColor is a hex color code used by the Ory Account Experience theme.',
    )
    background_subtle_color: Optional[str] = Field(
        None,
        description='BackgroundSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    background_surface_color: Optional[str] = Field(
        None,
        description='BackgroundSurfaceColor is a hex color code used by the Ory Account Experience theme.',
    )
    border_default_color: Optional[str] = Field(
        None,
        description='BorderDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_default_color: Optional[str] = Field(
        None,
        description='ErrorDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_emphasis_color: Optional[str] = Field(
        None,
        description='ErrorEmphasisColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_muted_color: Optional[str] = Field(
        None,
        description='ErrorMutedColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_subtle_color: Optional[str] = Field(
        None,
        description='ErrorSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_default_color: Optional[str] = Field(
        None,
        description='ForegroundDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_disabled_color: Optional[str] = Field(
        None,
        description='ForegroundDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_muted_color: Optional[str] = Field(
        None,
        description='ForegroundMutedColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_on_accent_color: Optional[str] = Field(
        None,
        description='ForegroundOnAccentColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_on_dark_color: Optional[str] = Field(
        None,
        description='ForegroundOnDarkColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_on_disabled_color: Optional[str] = Field(
        None,
        description='ForegroundOnDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_subtle_color: Optional[str] = Field(
        None,
        description='ForegroundSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_background_color: Optional[str] = Field(
        None,
        description='InputBackgroundColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_disabled_color: Optional[str] = Field(
        None,
        description='InputDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_placeholder_color: Optional[str] = Field(
        None,
        description='InputPlaceholderColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_text_color: Optional[str] = Field(
        None,
        description='InputTextColor is a hex color code used by the Ory Account Experience theme.',
    )
    primary_color: Optional[str] = Field(
        None,
        description='Primary color is an hsla color value used to derive the other colors from for the Ory Account Experience theme.',
    )
    secondary_color: Optional[str] = Field(
        None,
        description='Secondary color is a hsla color code used to derive the other colors from for the Ory Account Experience theme.',
    )
    success_emphasis_color: Optional[str] = Field(
        None,
        description='SuccessEmphasisColor is a hex color code used by the Ory Account Experience theme.',
    )
    text_default_color: Optional[str] = Field(
        None,
        description='TextDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    text_disabled_color: Optional[str] = Field(
        None,
        description='TextDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )


class ProjectBrandingTheme(BaseModel):
    accent_default_color: Optional[str] = Field(
        None,
        description='AccentDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_disabled_color: Optional[str] = Field(
        None,
        description='AccentDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_emphasis_color: Optional[str] = Field(
        None,
        description='AccentEmphasisColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_muted_color: Optional[str] = Field(
        None,
        description='AccentMutedColor is a hex color code used by the Ory Account Experience theme.',
    )
    accent_subtle_color: Optional[str] = Field(
        None,
        description='AccentSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    account_experience_variables: Optional[List[AccountExperienceThemeVariables]] = (
        Field(None, description='The Account Experience Theme Variables.')
    )
    account_experience_variables_stylesheet: Optional[str] = Field(
        None,
        description='AccountExperienceVariableStylesheet holds a reference to the current stylesheet that can be used in the AX',
    )
    background_canvas_color: Optional[str] = Field(
        None,
        description='BackgroundCanvasColor is a hex color code used by the Ory Account Experience theme.',
    )
    background_subtle_color: Optional[str] = Field(
        None,
        description='BackgroundSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    background_surface_color: Optional[str] = Field(
        None,
        description='BackgroundSurfaceColor is a hex color code used by the Ory Account Experience theme.',
    )
    border_default_color: Optional[str] = Field(
        None,
        description='BorderDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    created_at: datetime = Field(..., description='The Customization Creation Date.')
    error_default_color: Optional[str] = Field(
        None,
        description='ErrorDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_emphasis_color: Optional[str] = Field(
        None,
        description='ErrorEmphasisColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_muted_color: Optional[str] = Field(
        None,
        description='ErrorMutedColor is a hex color code used by the Ory Account Experience theme.',
    )
    error_subtle_color: Optional[str] = Field(
        None,
        description='ErrorSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    favicon_type: Optional[str] = Field(
        None, description='Favicon Type\nThe Favicon mime type.'
    )
    favicon_url: Optional[str] = Field(
        None,
        description='Favicon URL\nFavicon can be an https:// or base64:// URL. If the URL is not allowed, the favicon will be stored inside the Ory Network storage bucket.',
    )
    foreground_default_color: Optional[str] = Field(
        None,
        description='ForegroundDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_disabled_color: Optional[str] = Field(
        None,
        description='ForegroundDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_muted_color: Optional[str] = Field(
        None,
        description='ForegroundMutedColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_on_accent_color: Optional[str] = Field(
        None,
        description='ForegroundOnAccentColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_on_dark_color: Optional[str] = Field(
        None,
        description='ForegroundOnDarkColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_on_disabled_color: Optional[str] = Field(
        None,
        description='ForegroundOnDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    foreground_subtle_color: Optional[str] = Field(
        None,
        description='ForegroundSubtleColor is a hex color code used by the Ory Account Experience theme.',
    )
    id: UUID = Field(..., description='The customization theme ID.')
    input_background_color: Optional[str] = Field(
        None,
        description='InputBackgroundColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_disabled_color: Optional[str] = Field(
        None,
        description='InputDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_placeholder_color: Optional[str] = Field(
        None,
        description='InputPlaceholderColor is a hex color code used by the Ory Account Experience theme.',
    )
    input_text_color: Optional[str] = Field(
        None,
        description='InputTextColor is a hex color code used by the Ory Account Experience theme.',
    )
    logo_type: Optional[str] = Field(None, description='Logo Type\nThe Logo mime type.')
    logo_url: Optional[str] = Field(
        None,
        description='Logo URL\nLogo can be an https:// or base64:// URL. If the URL is not allowed, the logo will be stored inside the Ory Network storage bucket.',
    )
    name: str = Field(..., description='The customization theme name.')
    primary_color: Optional[str] = Field(
        None,
        description='Primary color is an hsla color value used to derive the other colors from for the Ory Account Experience theme.',
    )
    project_branding_id: UUID = Field(
        ..., description='The ProjectBranding ID this customization is associated with.'
    )
    secondary_color: Optional[str] = Field(
        None,
        description='Secondary color is a hsla color code used to derive the other colors from for the Ory Account Experience theme.',
    )
    success_emphasis_color: Optional[str] = Field(
        None,
        description='SuccessEmphasisColor is a hex color code used by the Ory Account Experience theme.',
    )
    text_default_color: Optional[str] = Field(
        None,
        description='TextDefaultColor is a hex color code used by the Ory Account Experience theme.',
    )
    text_disabled_color: Optional[str] = Field(
        None,
        description='TextDisabledColor is a hex color code used by the Ory Account Experience theme.',
    )
    updated_at: datetime = Field(..., description='Last Time Branding was Updated.')


class ProjectBrandingThemes(BaseModel):
    __root__: List[ProjectBrandingTheme] = Field(
        ..., title='ProjectBrandingThemes is a list of ProjectBrandingTheme.'
    )


class ProjectCors(BaseModel):
    enabled: Optional[bool] = Field(
        None, description='Whether CORS is enabled for this endpoint.'
    )
    origins: Optional[List[str]] = Field(
        None,
        description='The allowed origins. Use `*` to allow all origins. A wildcard can also be used in the subdomain, i.e. `https://*.example.com` will allow all origins on all subdomains of `example.com`.',
    )


class ProjectHost(BaseModel):
    host: str = Field(..., description="The project's host.")
    id: UUID = Field(..., description="The mapping's ID.")
    project_id: UUID = Field(..., description="The Revision's Project ID")


class ProjectMember(BaseModel):
    email: str
    email_verified: bool
    id: UUID
    name: str
    role: str


class ProjectRevisionHooks(BaseModel):
    __root__: List[NormalizedProjectRevisionHook]


class ProjectRevisionIdentitySchemas(BaseModel):
    __root__: List[NormalizedProjectRevisionIdentitySchema]


class ProjectRevisionThirdPartyLoginProviders(BaseModel):
    __root__: List[NormalizedProjectRevisionThirdPartyProvider]


class ProjectServiceIdentity(BaseModel):
    config: Dict[str, Any]


class ProjectServiceOAuth2(BaseModel):
    config: Dict[str, Any]


class ProjectServicePermission(BaseModel):
    config: Dict[str, Any]


class ProjectServices(BaseModel):
    identity: Optional[ProjectServiceIdentity] = None
    oauth2: Optional[ProjectServiceOAuth2] = None
    permission: Optional[ProjectServicePermission] = None


class Feature(Enum):
    production_projects = 'production_projects'
    staging_projects = 'staging_projects'
    development_projects = 'development_projects'
    daily_active_users = 'daily_active_users'
    custom_domains = 'custom_domains'
    event_streams = 'event_streams'
    event_stream_events = 'event_stream_events'
    sla = 'sla'
    collaborator_seats = 'collaborator_seats'
    edge_cache = 'edge_cache'
    branding_themes = 'branding_themes'
    zendesk_support = 'zendesk_support'
    project_metrics = 'project_metrics'
    project_metrics_time_window = 'project_metrics_time_window'
    project_metrics_events_history = 'project_metrics_events_history'
    organizations = 'organizations'
    rop_grant = 'rop_grant'
    concierge_onboarding = 'concierge_onboarding'
    credit = 'credit'
    data_location_global = 'data_location_global'
    data_location_us = 'data_location_us'
    m2m_token_issuance = 'm2m_token_issuance'
    permission_checks = 'permission_checks'
    captcha = 'captcha'
    data_location_regional = 'data_location_regional'
    rate_limit_tier = 'rate_limit_tier'
    session_rate_limit_tier = 'session_rate_limit_tier'
    identities_list_rate_limit_tier = 'identities_list_rate_limit_tier'
    permission_checks_rate_limit_tier = 'permission_checks_rate_limit_tier'
    oauth2_introspect_rate_limit_tier = 'oauth2_introspect_rate_limit_tier'


class QuotaUsage(BaseModel):
    additional_price: str = Field(
        ..., description='The additional price per unit in cents.'
    )
    can_use_more: bool
    feature: Feature = Field(
        ...,
        description='\nproduction_projects ProductionProjects\nstaging_projects StagingProjects\ndevelopment_projects DevelopmentProjects\ndaily_active_users DailyActiveUsers\ncustom_domains CustomDomains\nevent_streams EventStreams\nevent_stream_events EventStreamEvents\nsla SLA\ncollaborator_seats CollaboratorSeats\nedge_cache EdgeCache\nbranding_themes BrandingThemes\nzendesk_support ZendeskSupport\nproject_metrics ProjectMetrics\nproject_metrics_time_window ProjectMetricsTimeWindow\nproject_metrics_events_history ProjectMetricsEventsHistory\norganizations Organizations\nrop_grant ResourceOwnerPasswordGrant\nconcierge_onboarding ConciergeOnboarding\ncredit Credit\ndata_location_global DataLocationGlobal\ndata_location_us DataLocationUS\nm2m_token_issuance M2MTokenIssuance\npermission_checks PermissionChecks\ncaptcha Captcha\ndata_location_regional DataLocationRegional  Required Features\nrate_limit_tier RateLimitTier\nsession_rate_limit_tier RateLimitTierSessions\nidentities_list_rate_limit_tier RateLimitTierIdentitiesList\npermission_checks_rate_limit_tier RateLimitTierPermissionChecks\noauth2_introspect_rate_limit_tier RateLimitTierOAuth2Introspect',
    )
    feature_available: bool
    included: int
    used: int


class RecoveryCodeForIdentity(BaseModel):
    expires_at: Optional[datetime] = Field(
        None,
        description='Expires At is the timestamp of when the recovery flow expires\n\nThe timestamp when the recovery code expires.',
    )
    recovery_code: str = Field(
        ...,
        description='RecoveryCode is the code that can be used to recover the account',
    )
    recovery_link: str = Field(
        ...,
        description='RecoveryLink with flow\n\nThis link opens the recovery UI with an empty `code` field.',
    )


class RecoveryFlowState(Enum):
    choose_method = 'choose_method'
    sent_email = 'sent_email'
    passed_challenge = 'passed_challenge'


class RecoveryIdentityAddress(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    id: UUID
    updated_at: Optional[datetime] = Field(
        None, description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )
    value: str
    via: RecoveryAddressType


class RecoveryLinkForIdentity(BaseModel):
    expires_at: Optional[datetime] = Field(
        None,
        description='Recovery Link Expires At\n\nThe timestamp when the recovery link expires.',
    )
    recovery_link: str = Field(
        ...,
        description='Recovery Link\n\nThis link can be used to recover the account.',
    )


class RegistrationFlowState(Enum):
    choose_method = 'choose_method'
    sent_email = 'sent_email'
    passed_challenge = 'passed_challenge'


class RejectOAuth2Request(BaseModel):
    error: Optional[str] = Field(
        None,
        description='The error should follow the OAuth2 error format (e.g. `invalid_request`, `login_required`).\n\nDefaults to `request_denied`.',
    )
    error_debug: Optional[str] = Field(
        None,
        description='Debug contains information to help resolve the problem as a developer. Usually not exposed\nto the public but only in the server logs.',
    )
    error_description: Optional[str] = Field(
        None, description='Description of the error in a human readable format.'
    )
    error_hint: Optional[str] = Field(
        None, description='Hint to help resolve the error.'
    )
    status_code: Optional[int] = Field(
        None,
        description='Represents the HTTP status code of the error (e.g. 401 or 403)\n\nDefaults to 400',
    )


class RelationshipNamespaces(BaseModel):
    namespaces: Optional[List[Namespace1]] = None


class Action6(Enum):
    insert = 'insert'
    delete = 'delete'


class SchemaPatch(BaseModel):
    data: Dict[str, Any] = Field(..., description='The json schema')
    name: str = Field(..., description='The user defined schema name')


class SelfServiceFlowType(BaseModel):
    __root__: str = Field(
        ...,
        description='The flow type can either be `api` or `browser`.',
        title='Type is the flow type.',
    )


class Method(Enum):
    link_recovery = 'link_recovery'
    code_recovery = 'code_recovery'
    password = 'password'
    code = 'code'
    totp = 'totp'
    oidc = 'oidc'
    webauthn = 'webauthn'
    lookup_secret = 'lookup_secret'
    v0_6_legacy_session = 'v0.6_legacy_session'


class SessionAuthenticationMethod(BaseModel):
    aal: Optional[AuthenticatorAssuranceLevel] = None
    completed_at: Optional[datetime] = Field(
        None, description='When the authentication challenge was completed.'
    )
    method: Optional[Method] = Field(None, title='The method used')
    organization: Optional[str] = Field(
        None, description='The Organization id used for authentication'
    )
    provider: Optional[str] = Field(
        None, description='OIDC or SAML provider id used for authentication'
    )


class SessionAuthenticationMethods(BaseModel):
    __root__: List[SessionAuthenticationMethod] = Field(
        ...,
        description='A list of authenticators which were used to authenticate the session.',
        title='List of (Used) AuthenticationMethods',
    )


class SessionDevice(BaseModel):
    id: UUID = Field(..., description='Device record ID')
    ip_address: Optional[str] = Field(None, description='IPAddress of the client')
    location: Optional[str] = Field(
        None, description='Geo Location corresponding to the IP Address'
    )
    user_agent: Optional[str] = Field(None, description='UserAgent of the client')


class SetActiveProjectInConsoleBody(BaseModel):
    project_id: str = Field(
        ...,
        description='Project ID\n\nThe Project ID you want to set active.\n\nformat: uuid',
    )


class SetCustomDomainBody(BaseModel):
    cookie_domain: Optional[str] = Field(
        None,
        description='The domain where cookies will be set. Has to be a parent domain of the custom hostname to work.',
    )
    cors_allowed_origins: Optional[List[str]] = Field(
        None, description='CORS Allowed origins for the custom hostname.'
    )
    cors_enabled: Optional[bool] = Field(
        None, description='CORS Enabled for the custom hostname.'
    )
    custom_ui_base_url: Optional[str] = Field(
        None, description='The custom UI base URL where the UI will be exposed.'
    )
    hostname: Optional[str] = Field(
        None, description='The custom hostname where the API will be exposed.'
    )


class Type4(Enum):
    sns = 'sns'


class SetEventStreamBody(BaseModel):
    role_arn: str = Field(
        ...,
        description='The AWS IAM role ARN to assume when publishing to the SNS topic.',
    )
    topic_arn: str = Field(..., description='The AWS SNS topic ARN.')
    type: Type4 = Field(
        ..., description='The type of the event stream (AWS SNS, GCP Pub/Sub, etc).'
    )


class SetProject(BaseModel):
    cors_admin: ProjectCors
    cors_public: ProjectCors
    name: str = Field(..., description='The name of the project.')
    services: ProjectServices


class SetProjectBrandingThemeBody(BaseModel):
    favicon_type: Optional[str] = Field(None, description='Favicon Type')
    favicon_url: Optional[str] = Field(None, description='Favicon URL')
    logo_type: Optional[str] = Field(None, description='Logo type')
    logo_url: Optional[str] = Field(None, description='Logo URL')
    name: Optional[str] = Field(None, description='Branding name')
    theme: Optional[ProjectBrandingColors] = None


class SettingsFlowState(Enum):
    show_form = 'show_form'
    success = 'success'


class SubjectSet(BaseModel):
    namespace: str = Field(..., description='Namespace of the Subject Set')
    object: str = Field(..., description='Object of the Subject Set')
    relation: str = Field(..., description='Relation of the Subject Set')


class CurrentInterval(Enum):
    monthly = 'monthly'
    yearly = 'yearly'


class TokenPagination(BaseModel):
    page_size: Optional[conint(ge=1, le=1000)] = Field(
        250,
        description='Items per page\n\nThis is the number of items per page to return.\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).',
    )
    page_token: Optional[str] = Field(
        '1',
        description='Next Page Token\n\nThe next page token.\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).',
    )


class TokenPaginationHeaders(BaseModel):
    link: Optional[str] = Field(
        None,
        description='The link header contains pagination links.\n\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).\n\nin: header',
    )
    x_total_count: Optional[str] = Field(
        None,
        alias='x-total-count',
        description='The total number of clients.\n\nin: header',
    )


class TokenPaginationRequestParameters(BaseModel):
    page_size: Optional[conint(ge=1, le=500)] = Field(
        250,
        description='Items per Page\n\nThis is the number of items per page to return.\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).',
    )
    page_token: Optional[str] = Field(
        '1',
        description='Next Page Token\n\nThe next page token.\nFor details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).',
    )


class TokenPaginationResponseHeaders(BaseModel):
    link: Optional[str] = Field(
        None,
        description='The Link HTTP Header\n\nThe `Link` header contains a comma-delimited list of links to the following pages:\n\nfirst: The first page of results.\nnext: The next page of results.\nprev: The previous page of results.\nlast: The last page of results.\n\nPages are omitted if they do not exist. For example, if there is no next page, the `next` link is omitted. Examples:\n\n</clients?page_size=5&page_token=0>; rel="first",</clients?page_size=5&page_token=15>; rel="next",</clients?page_size=5&page_token=5>; rel="prev",</clients?page_size=5&page_token=20>; rel="last"',
    )
    x_total_count: Optional[int] = Field(
        None,
        alias='x-total-count',
        description='The X-Total-Count HTTP Header\n\nThe `X-Total-Count` header contains the total number of items in the collection.',
    )


class TrustOAuth2JwtGrantIssuer(BaseModel):
    allow_any_subject: Optional[bool] = Field(
        None,
        description='The "allow_any_subject" indicates that the issuer is allowed to have any principal as the subject of the JWT.',
    )
    expires_at: datetime = Field(
        ...,
        description='The "expires_at" indicates, when grant will expire, so we will reject assertion from "issuer" targeting "subject".',
    )
    issuer: str = Field(
        ...,
        description='The "issuer" identifies the principal that issued the JWT assertion (same as "iss" claim in JWT).',
        example='https://jwt-idp.example.com',
    )
    jwk: JsonWebKey
    scope: List[str] = Field(
        ...,
        description='The "scope" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])',
        example=['openid', 'offline'],
    )
    subject: Optional[str] = Field(
        None,
        description='The "subject" identifies the principal that is the subject of the JWT.',
        example='mike@example.com',
    )


class TrustedOAuth2JwtGrantJsonWebKey(BaseModel):
    kid: Optional[str] = Field(
        None,
        description='The "key_id" is key unique identifier (same as kid header in jws/jwt).',
        example='123e4567-e89b-12d3-a456-426655440000',
    )
    set: Optional[str] = Field(
        None,
        description='The "set" is basically a name for a group(set) of keys. Will be the same as "issuer" in grant.',
        example='https://jwt-idp.example.com',
    )


class Group(Enum):
    default = 'default'
    password = 'password'
    oidc = 'oidc'
    profile = 'profile'
    link = 'link'
    code = 'code'
    totp = 'totp'
    lookup_secret = 'lookup_secret'
    webauthn = 'webauthn'
    passkey = 'passkey'
    identifier_first = 'identifier_first'


class Type5(Enum):
    text = 'text'
    input = 'input'
    img = 'img'
    a = 'a'
    script = 'script'


class NodeType(Enum):
    text = 'text'
    input = 'input'
    img = 'img'
    a = 'a'
    script = 'script'


class UiNodeImageAttributes(BaseModel):
    height: int = Field(..., description='Height of the image')
    id: str = Field(..., description='A unique identifier')
    node_type: Literal['img'] = Field(
        ...,
        description='NodeType represents this node\'s types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "img".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script',
    )
    src: str = Field(..., description="The image's source URL.\n\nformat: uri")
    width: int = Field(..., description='Width of the image')


class Autocomplete(Enum):
    email = 'email'
    tel = 'tel'
    url = 'url'
    current_password = 'current-password'
    new_password = 'new-password'
    one_time_code = 'one-time-code'


class OnclickTrigger(Enum):
    oryWebAuthnRegistration = 'oryWebAuthnRegistration'
    oryWebAuthnLogin = 'oryWebAuthnLogin'
    oryPasskeyLogin = 'oryPasskeyLogin'
    oryPasskeyLoginAutocompleteInit = 'oryPasskeyLoginAutocompleteInit'
    oryPasskeyRegistration = 'oryPasskeyRegistration'
    oryPasskeySettingsRegistration = 'oryPasskeySettingsRegistration'


class OnloadTrigger(Enum):
    oryWebAuthnRegistration = 'oryWebAuthnRegistration'
    oryWebAuthnLogin = 'oryWebAuthnLogin'
    oryPasskeyLogin = 'oryPasskeyLogin'
    oryPasskeyLoginAutocompleteInit = 'oryPasskeyLoginAutocompleteInit'
    oryPasskeyRegistration = 'oryPasskeyRegistration'
    oryPasskeySettingsRegistration = 'oryPasskeySettingsRegistration'


class Type6(Enum):
    text = 'text'
    password = 'password'
    number = 'number'
    checkbox = 'checkbox'
    hidden = 'hidden'
    email = 'email'
    tel = 'tel'
    submit = 'submit'
    button = 'button'
    datetime_local = 'datetime-local'
    date = 'date'
    url = 'url'


class UiNodeScriptAttributes(BaseModel):
    async_: bool = Field(..., alias='async', description='The script async type')
    crossorigin: str = Field(..., description='The script cross origin policy')
    id: str = Field(..., description='A unique identifier')
    integrity: str = Field(..., description="The script's integrity hash")
    node_type: Literal['script'] = Field(
        ...,
        description='NodeType represents this node\'s types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is "script".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script',
    )
    nonce: str = Field(
        ...,
        description='Nonce for CSP\n\nA nonce you may want to use to improve your Content Security Policy.\nYou do not have to use this value but if you want to improve your CSP\npolicies you may use it. You can also choose to use your own nonce value!',
    )
    referrerpolicy: str = Field(..., description='The script referrer policy')
    src: str = Field(..., description='The script source')
    type: str = Field(..., description='The script MIME type')


class Type7(Enum):
    info = 'info'
    error = 'error'
    success = 'success'


class UiText(BaseModel):
    context: Optional[Dict[str, Any]] = Field(
        None, description="The message's context. Useful when customizing messages."
    )
    id: ID
    text: str = Field(..., description='The message text. Written in american english.')
    type: Type7 = Field(
        ..., description='The message type.\ninfo Info\nerror Error\nsuccess Success'
    )


class UiTexts(BaseModel):
    __root__: List[UiText]


class UnexpectedError(BaseModel):
    __root__: str


class State6(Enum):
    active = 'active'
    inactive = 'inactive'


class UpdateLoginFlowWithCodeMethod(BaseModel):
    address: Optional[str] = Field(
        None,
        description='Address is the address to send the code to, in case that there are multiple addresses. This field\nis only used in two-factor flows and is ineffective for passwordless flows.',
    )
    code: Optional[str] = Field(
        None, description='Code is the 6 digits code sent to the user'
    )
    csrf_token: str = Field(..., description='CSRFToken is the anti-CSRF token')
    identifier: Optional[str] = Field(
        None,
        description='Identifier is the code identifier\nThe identifier requires that the user has already completed the registration or settings with code flow.',
    )
    method: str = Field(
        ...,
        description='Method should be set to "code" when logging in using the code strategy.',
    )
    resend: Optional[str] = Field(
        None, description='Resend is set when the user wants to resend the code'
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateLoginFlowWithIdentifierFirstMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    identifier: str = Field(
        ...,
        description='Identifier is the email or username of the user trying to log in.',
    )
    method: str = Field(
        ...,
        description='Method should be set to "password" when logging in using the identifier and password strategy.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateLoginFlowWithLookupSecretMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    lookup_secret: str = Field(..., description='The lookup secret.')
    method: str = Field(
        ...,
        description='Method should be set to "lookup_secret" when logging in using the lookup_secret strategy.',
    )


class UpdateLoginFlowWithOidcMethod(BaseModel):
    csrf_token: Optional[str] = Field(None, description='The CSRF Token')
    id_token: Optional[str] = Field(
        None,
        description="IDToken is an optional id token provided by an OIDC provider\n\nIf submitted, it is verified using the OIDC provider's public key set and the claims are used to populate\nthe OIDC credentials of the identity.\nIf the OIDC provider does not store additional claims (such as name, etc.) in the IDToken itself, you can use\nthe `traits` field to populate the identity's traits. Note, that Apple only includes the users email in the IDToken.\n\nSupported providers are\nApple\nGoogle",
    )
    id_token_nonce: Optional[str] = Field(
        None,
        description='IDTokenNonce is the nonce, used when generating the IDToken.\nIf the provider supports nonce validation, the nonce will be validated against this value and required.',
    )
    method: str = Field(
        ...,
        description='Method to use\n\nThis field must be set to `oidc` when using the oidc method.',
    )
    provider: str = Field(..., description='The provider to register with')
    traits: Optional[Dict[str, Any]] = Field(
        None,
        description='The identity traits. This is a placeholder for the registration flow.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )
    upstream_parameters: Optional[Dict[str, Any]] = Field(
        None,
        description='UpstreamParameters are the parameters that are passed to the upstream identity provider.\n\nThese parameters are optional and depend on what the upstream identity provider supports.\nSupported parameters are:\n`login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session.\n`hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`.\n`prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`.',
    )


class UpdateLoginFlowWithPasskeyMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    method: str = Field(
        ...,
        description='Method should be set to "passkey" when logging in using the Passkey strategy.',
    )
    passkey_login: Optional[str] = Field(
        None,
        description='Login a WebAuthn Security Key\n\nThis must contain the ID of the WebAuthN connection.',
    )


class UpdateLoginFlowWithPasswordMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    identifier: str = Field(
        ...,
        description='Identifier is the email or username of the user trying to log in.',
    )
    method: str = Field(
        ...,
        description='Method should be set to "password" when logging in using the identifier and password strategy.',
    )
    password: str = Field(..., description="The user's password.")
    password_identifier: Optional[str] = Field(
        None,
        description='Identifier is the email or username of the user trying to log in.\nThis field is deprecated!',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateLoginFlowWithTotpMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    method: str = Field(
        ...,
        description='Method should be set to "totp" when logging in using the TOTP strategy.',
    )
    totp_code: str = Field(..., description='The TOTP code.')
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateLoginFlowWithWebAuthnMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    identifier: str = Field(
        ...,
        description='Identifier is the email or username of the user trying to log in.',
    )
    method: str = Field(
        ...,
        description='Method should be set to "webAuthn" when logging in using the WebAuthn strategy.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )
    webauthn_login: Optional[str] = Field(
        None,
        description='Login a WebAuthn Security Key\n\nThis must contain the ID of the WebAuthN connection.',
    )


class Method1(Enum):
    link = 'link'
    code = 'code'


class UpdateRecoveryFlowWithCodeMethod(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Code from the recovery email\n\nIf you want to submit a code, use this field, but make sure to _not_ include the email field, as well.',
    )
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    email: Optional[str] = Field(
        None,
        description='The email address of the account to recover\n\nIf the email belongs to a valid account, a recovery email will be sent.\n\nIf you want to notify the email address if the account does not exist, see\nthe [notify_unknown_recipients flag](https://www.ory.sh/docs/kratos/self-service/flows/account-recovery-password-reset#attempted-recovery-notifications)\n\nIf a code was already sent, including this field in the payload will invalidate the sent code and re-send a new code.\n\nformat: email',
    )
    method: Method1 = Field(
        ...,
        description='Method is the method that should be used for this recovery flow\n\nAllowed values are `link` and `code`.\nlink RecoveryStrategyLink\ncode RecoveryStrategyCode',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateRecoveryFlowWithLinkMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    email: str = Field(
        ...,
        description='Email to Recover\n\nNeeds to be set when initiating the flow. If the email is a registered\nrecovery email, a recovery link will be sent. If the email is not known,\na email with details on what happened will be sent instead.\n\nformat: email',
    )
    method: Method1 = Field(
        ...,
        description='Method is the method that should be used for this recovery flow\n\nAllowed values are `link` and `code`\nlink RecoveryStrategyLink\ncode RecoveryStrategyCode',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateRegistrationFlowWithCodeMethod(BaseModel):
    code: Optional[str] = Field(None, description='The OTP Code sent to the user')
    csrf_token: Optional[str] = Field(None, description='The CSRF Token')
    method: str = Field(
        ...,
        description='Method to use\n\nThis field must be set to `code` when using the code method.',
    )
    resend: Optional[str] = Field(
        None, description='Resend restarts the flow with a new code'
    )
    traits: Dict[str, Any] = Field(..., description="The identity's traits")
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateRegistrationFlowWithOidcMethod(BaseModel):
    csrf_token: Optional[str] = Field(None, description='The CSRF Token')
    id_token: Optional[str] = Field(
        None,
        description="IDToken is an optional id token provided by an OIDC provider\n\nIf submitted, it is verified using the OIDC provider's public key set and the claims are used to populate\nthe OIDC credentials of the identity.\nIf the OIDC provider does not store additional claims (such as name, etc.) in the IDToken itself, you can use\nthe `traits` field to populate the identity's traits. Note, that Apple only includes the users email in the IDToken.\n\nSupported providers are\nApple\nGoogle",
    )
    id_token_nonce: Optional[str] = Field(
        None,
        description='IDTokenNonce is the nonce, used when generating the IDToken.\nIf the provider supports nonce validation, the nonce will be validated against this value and is required.',
    )
    method: str = Field(
        ...,
        description='Method to use\n\nThis field must be set to `oidc` when using the oidc method.',
    )
    provider: str = Field(..., description='The provider to register with')
    traits: Optional[Dict[str, Any]] = Field(None, description='The identity traits')
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )
    upstream_parameters: Optional[Dict[str, Any]] = Field(
        None,
        description='UpstreamParameters are the parameters that are passed to the upstream identity provider.\n\nThese parameters are optional and depend on what the upstream identity provider supports.\nSupported parameters are:\n`login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session.\n`hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`.\n`prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`.',
    )


class UpdateRegistrationFlowWithPasskeyMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to "passkey" when trying to add, update, or remove a Passkey.',
    )
    passkey_register: Optional[str] = Field(
        None,
        description='Register a WebAuthn Security Key\n\nIt is expected that the JSON returned by the WebAuthn registration process\nis included here.',
    )
    traits: Dict[str, Any] = Field(..., description="The identity's traits")
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateRegistrationFlowWithPasswordMethod(BaseModel):
    csrf_token: Optional[str] = Field(None, description='The CSRF Token')
    method: str = Field(
        ...,
        description='Method to use\n\nThis field must be set to `password` when using the password method.',
    )
    password: str = Field(..., description='Password to sign the user up with')
    traits: Dict[str, Any] = Field(..., description="The identity's traits")
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class Screen(Enum):
    credential_selection = 'credential-selection'
    previous = 'previous'


class UpdateRegistrationFlowWithProfileMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='The Anti-CSRF Token\n\nThis token is only required when performing browser flows.',
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to profile when trying to update a profile.',
    )
    screen: Optional[Screen] = Field(
        None,
        description='Screen requests navigation to a previous screen.\n\nThis must be set to credential-selection to go back to the credential\nselection screen.\ncredential-selection RegistrationScreenCredentialSelection nolint:gosec // not a credential\nprevious RegistrationScreenPrevious',
    )
    traits: Dict[str, Any] = Field(..., description="Traits\n\nThe identity's traits.")
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateRegistrationFlowWithWebAuthnMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to "webauthn" when trying to add, update, or remove a webAuthn pairing.',
    )
    traits: Dict[str, Any] = Field(..., description="The identity's traits")
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )
    webauthn_register: Optional[str] = Field(
        None,
        description='Register a WebAuthn Security Key\n\nIt is expected that the JSON returned by the WebAuthn registration process\nis included here.',
    )
    webauthn_register_displayname: Optional[str] = Field(
        None,
        description='Name of the WebAuthn Security Key to be Added\n\nA human-readable name for the security key which will be added.',
    )


class UpdateSettingsFlowWithLookupMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    lookup_secret_confirm: Optional[bool] = Field(
        None, description='If set to true will save the regenerated lookup secrets'
    )
    lookup_secret_disable: Optional[bool] = Field(
        None, description='Disables this method if true.'
    )
    lookup_secret_regenerate: Optional[bool] = Field(
        None, description='If set to true will regenerate the lookup secrets'
    )
    lookup_secret_reveal: Optional[bool] = Field(
        None, description='If set to true will reveal the lookup secrets'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to "lookup" when trying to add, update, or remove a lookup pairing.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateSettingsFlowWithOidcMethod(BaseModel):
    flow: Optional[str] = Field(
        None, description="Flow ID is the flow's ID.\n\nin: query"
    )
    link: Optional[str] = Field(
        None,
        description='Link this provider\n\nEither this or `unlink` must be set.\n\ntype: string\nin: body',
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to profile when trying to update a profile.',
    )
    traits: Optional[Dict[str, Any]] = Field(
        None, description="The identity's traits\n\nin: body"
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )
    unlink: Optional[str] = Field(
        None,
        description='Unlink this provider\n\nEither this or `link` must be set.\n\ntype: string\nin: body',
    )
    upstream_parameters: Optional[Dict[str, Any]] = Field(
        None,
        description='UpstreamParameters are the parameters that are passed to the upstream identity provider.\n\nThese parameters are optional and depend on what the upstream identity provider supports.\nSupported parameters are:\n`login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session.\n`hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`.\n`prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`.',
    )


class UpdateSettingsFlowWithPasskeyMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to "passkey" when trying to add, update, or remove a webAuthn pairing.',
    )
    passkey_remove: Optional[str] = Field(
        None,
        description='Remove a WebAuthn Security Key\n\nThis must contain the ID of the WebAuthN connection.',
    )
    passkey_settings_register: Optional[str] = Field(
        None,
        description='Register a WebAuthn Security Key\n\nIt is expected that the JSON returned by the WebAuthn registration process\nis included here.',
    )


class UpdateSettingsFlowWithPasswordMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to password when trying to update a password.',
    )
    password: str = Field(..., description='Password is the updated password')
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateSettingsFlowWithProfileMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='The Anti-CSRF Token\n\nThis token is only required when performing browser flows.',
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to profile when trying to update a profile.',
    )
    traits: Dict[str, Any] = Field(..., description="Traits\n\nThe identity's traits.")
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateSettingsFlowWithTotpMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to "totp" when trying to add, update, or remove a totp pairing.',
    )
    totp_code: Optional[str] = Field(
        None, description='ValidationTOTP must contain a valid TOTP based on the'
    )
    totp_unlink: Optional[bool] = Field(
        None,
        description='UnlinkTOTP if true will remove the TOTP pairing,\neffectively removing the credential. This can be used\nto set up a new TOTP device.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateSettingsFlowWithWebAuthnMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None, description='CSRFToken is the anti-CSRF token'
    )
    method: str = Field(
        ...,
        description='Method\n\nShould be set to "webauthn" when trying to add, update, or remove a webAuthn pairing.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )
    webauthn_register: Optional[str] = Field(
        None,
        description='Register a WebAuthn Security Key\n\nIt is expected that the JSON returned by the WebAuthn registration process\nis included here.',
    )
    webauthn_register_displayname: Optional[str] = Field(
        None,
        description='Name of the WebAuthn Security Key to be Added\n\nA human-readable name for the security key which will be added.',
    )
    webauthn_remove: Optional[str] = Field(
        None,
        description='Remove a WebAuthn Security Key\n\nThis must contain the ID of the WebAuthN connection.',
    )


class UpdateSubscriptionBody(BaseModel):
    interval: Interval = Field(..., description='\nmonthly Monthly\nyearly Yearly')
    plan: str
    return_to: Optional[str] = None


class UpdateVerificationFlowWithCodeMethod(BaseModel):
    code: Optional[str] = Field(
        None,
        description='Code from the recovery email\n\nIf you want to submit a code, use this field, but make sure to _not_ include the email field, as well.',
    )
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    email: Optional[str] = Field(
        None,
        description='The email address to verify\n\nIf the email belongs to a valid account, a verifiation email will be sent.\n\nIf you want to notify the email address if the account does not exist, see\nthe [notify_unknown_recipients flag](https://www.ory.sh/docs/kratos/self-service/flows/verify-email-account-activation#attempted-verification-notifications)\n\nIf a code was already sent, including this field in the payload will invalidate the sent code and re-send a new code.\n\nformat: email',
    )
    method: Method1 = Field(
        ...,
        description='Method is the method that should be used for this verification flow\n\nAllowed values are `link` and `code`.\nlink VerificationStrategyLink\ncode VerificationStrategyCode',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateVerificationFlowWithLinkMethod(BaseModel):
    csrf_token: Optional[str] = Field(
        None,
        description='Sending the anti-csrf token is only required for browser login flows.',
    )
    email: str = Field(
        ...,
        description='Email to Verify\n\nNeeds to be set when initiating the flow. If the email is a registered\nverification email, a verification link will be sent. If the email is not known,\na email with details on what happened will be sent instead.\n\nformat: email',
    )
    method: Method1 = Field(
        ...,
        description='Method is the method that should be used for this verification flow\n\nAllowed values are `link` and `code`\nlink VerificationStrategyLink\ncode VerificationStrategyCode',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None, description='Transient data to pass along to any webhooks'
    )


class UpdateWorkspaceBody(BaseModel):
    name: str = Field(..., description='The name of the workspace.')


class VerifiableCredentialPrimingResponse(BaseModel):
    c_nonce: Optional[str] = None
    c_nonce_expires_in: Optional[int] = None
    error: Optional[str] = None
    error_debug: Optional[str] = None
    error_description: Optional[str] = None
    error_hint: Optional[str] = None
    format: Optional[str] = None
    status_code: Optional[int] = None


class VerifiableCredentialResponse(BaseModel):
    credential_draft_00: Optional[str] = None
    format: Optional[str] = None


class Via(Enum):
    email = 'email'
    sms = 'sms'


class VerifiableIdentityAddress(BaseModel):
    created_at: Optional[datetime] = Field(
        None,
        description='When this entry was created',
        example='2014-01-01T23:28:56.782Z',
    )
    id: Optional[UUID] = Field(None, description='The ID')
    status: IdentityVerifiableAddressStatus
    updated_at: Optional[datetime] = Field(
        None,
        description='When this entry was last updated',
        example='2014-01-01T23:28:56.782Z',
    )
    value: str = Field(..., description='The address value\n\nexample foo@user.com')
    verified: bool = Field(
        ...,
        description='Indicates if the address has already been verified',
        example=True,
    )
    verified_at: Optional[NullTimeModel] = None
    via: Via = Field(..., description='The delivery method', example='email')


class VerificationFlowState(Enum):
    choose_method = 'choose_method'
    sent_email = 'sent_email'
    passed_challenge = 'passed_challenge'


class Version(BaseModel):
    version: Optional[str] = Field(
        None, description="Version is the service's version."
    )


class Workspace(BaseModel):
    created_at: datetime
    id: UUID
    name: str
    subscription_id: Optional[NullUUID] = None
    subscription_plan: Optional[String] = None
    updated_at: datetime


class WorkspaceApiKey(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description="The API key's creation date"
    )
    id: UUID = Field(..., description="The key's ID.")
    name: str = Field(
        ...,
        description="The API key's Name\n\nSet this to help you remember, for example, where you use the API key.",
    )
    owner_id: UUID = Field(..., description="The key's owner")
    updated_at: Optional[datetime] = Field(
        None, description="The API key's last update date"
    )
    value: Optional[str] = Field(None, description="The key's value")
    workspace_id: Optional[UUID] = Field(
        None, description="The API token's workspace ID"
    )


class Workspaces(BaseModel):
    __root__: List[Workspace]


class IncludeCredentialEnum(Enum):
    password = 'password'
    oidc = 'oidc'
    totp = 'totp'
    lookup_secret = 'lookup_secret'
    webauthn = 'webauthn'
    code = 'code'
    passkey = 'passkey'
    profile = 'profile'
    link_recovery = 'link_recovery'
    code_recovery = 'code_recovery'


class Type8(Enum):
    password = 'password'
    oidc = 'oidc'
    totp = 'totp'
    lookup_secret = 'lookup_secret'
    webauthn = 'webauthn'
    code = 'code'
    passkey = 'passkey'
    profile = 'profile'
    link_recovery = 'link_recovery'
    code_recovery = 'code_recovery'


class AdminOauth2IntrospectPostRequest(BaseModel):
    scope: Optional[str] = Field(
        None,
        description='An optional, space separated list of required scopes. If the access token was not granted one of the\nscopes, the result of active will be false.',
    )
    token: str = Field(
        ...,
        description='The string value of the token. For access tokens, this\nis the "access_token" value returned from the token endpoint\ndefined in OAuth 2.0. For refresh tokens, this is the "refresh_token"\nvalue returned.',
    )


class ExpandEnum(Enum):
    identity = 'identity'
    devices = 'devices'


class Oauth2RevokePostRequest(BaseModel):
    client_id: Optional[str] = None
    client_secret: Optional[str] = None
    token: str


class Oauth2TokenPostRequest(BaseModel):
    client_id: Optional[str] = None
    code: Optional[str] = None
    grant_type: str
    redirect_uri: Optional[str] = None
    refresh_token: Optional[str] = None


class ProjectsProjectIdPatchRequest(BaseModel):
    __root__: List[JsonPatch]


class ProjectsProjectIdRevisionRevisionIdPatchRequest(BaseModel):
    __root__: List[JsonPatch]


class ProjectsProjectTokensPostRequest(BaseModel):
    name: str = Field(
        ...,
        description='The Token Name\n\nA descriptive name for the token.\n\nin: body',
    )


class VersionGetResponse(BaseModel):
    version: str = Field(..., description='The version of Ory Kratos.')


class CreateInviteResponse(BaseModel):
    all_invites: List[MemberInvite] = Field(
        ..., description='A list of all invites for this resource'
    )
    created_invite: MemberInvite


class CreateVerifiableCredentialRequestBody(BaseModel):
    format: Optional[str] = None
    proof: Optional[VerifiableCredentialProof] = None
    types: Optional[List[str]] = None


class GenericUsage(BaseModel):
    additional_price: Money
    included_usage: int = Field(
        ..., description='IncludedUsage is the number of included items.'
    )


class InvoiceDataV1(BaseModel):
    billing_period: TimeInterval
    currency: str = Field(..., description='The currency of the invoice.')
    deleted: Optional[bool] = Field(
        None, description='Deleted is true if the invoice has been soft-deleted.'
    )
    items: List[LineItemV1] = Field(
        ..., description='The items that are part of this invoice.'
    )
    plan: Optional[str] = Field(
        None,
        description='The plan that this invoice is based on, in the format "Name@version".',
    )
    stripe_invoice_item: Optional[str] = None
    stripe_invoice_status: Optional[InvoiceStatus] = None
    stripe_link: Optional[str] = Field(
        None, description='An optional link to the invoice on Stripe.'
    )
    subtitle: Optional[str] = Field(None, description='The subtitle of the invoice.')
    tax: Optional[TaxLineItem] = None
    title: str = Field(..., description='The title of the invoice.')
    total_in_cent: AmountInCent


class NormalizedProjectRevisionCourierChannel(BaseModel):
    channel_id: str = Field(..., description="The Channel's public ID")
    created_at: Optional[datetime] = Field(None, description='The creation date')
    request_config_auth_config_api_key_in: Optional[str] = Field(
        None,
        description='API key location\n\nCan either be "header" or "query"',
        example='header',
    )
    request_config_auth_config_api_key_name: Optional[str] = Field(
        None, description='API key name\n\nOnly used if the auth type is api_key'
    )
    request_config_auth_config_api_key_value: Optional[str] = Field(
        None, description='API key value\n\nOnly used if the auth type is api_key'
    )
    request_config_auth_config_basic_auth_password: Optional[str] = Field(
        None,
        description='Basic Auth Password\n\nOnly used if the auth type is basic_auth',
    )
    request_config_auth_config_basic_auth_user: Optional[str] = Field(
        None,
        description='Basic Auth Username\n\nOnly used if the auth type is basic_auth',
    )
    request_config_auth_type: Optional[RequestConfigAuthType] = Field(
        None,
        description='HTTP Auth Method to use for the HTTP call\n\nCan either be basic_auth or api_key\nbasic_auth CourierChannelAuthTypeBasicAuth\napi_key CourierChannelAuthTypeApiKey',
    )
    request_config_body: str = Field(
        ...,
        description='URI pointing to the JsonNet template used for HTTP body payload generation.',
    )
    request_config_headers: Optional[NullJsonRawMessage] = None
    request_config_method: str = Field(
        ...,
        description='The HTTP method to use (GET, POST, etc) for the HTTP call',
        example='POST',
    )
    request_config_url: Optional[str] = None
    updated_at: Optional[datetime] = Field(None, description='Last upate time')


class ParseError(BaseModel):
    end: Optional[SourcePosition] = None
    message: Optional[str] = None
    start: Optional[SourcePosition] = None


class PlanFeatures(BaseModel):
    __root__: Optional[Dict[str, GenericUsage]] = None


class Usage(BaseModel):
    GenericUsage: Optional[GenericUsage] = None


class AcceptOAuth2ConsentRequest(BaseModel):
    context: Optional[JSONRawMessage] = None
    grant_access_token_audience: Optional[StringSliceJSONFormat] = None
    grant_scope: Optional[StringSliceJSONFormat] = None
    handled_at: Optional[NullTimeModel] = None
    remember: Optional[bool] = Field(
        None,
        description='Remember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same\nclient asks the same user for the same, or a subset of, scope.',
    )
    remember_for: Optional[int] = Field(
        None,
        description='RememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the\nauthorization will be remembered indefinitely.',
    )
    session: Optional[AcceptOAuth2ConsentRequestSession] = None


class BatchCheckPermissionResult(BaseModel):
    results: List[CheckPermissionResultWithError] = Field(
        ...,
        description='An array of check results. The order aligns with the input order.',
    )


class BatchPatchIdentitiesResponse(BaseModel):
    identities: Optional[List[IdentityPatchResponse]] = Field(
        None, description='The patch responses for the individual identities.'
    )


class CheckOplSyntaxResult(BaseModel):
    errors: Optional[List[ParseError]] = Field(
        None, description='The list of syntax errors'
    )


class ContinueWithRecoveryUi(BaseModel):
    action: Literal['show_recovery_ui'] = Field(
        ...,
        description='Action will always be `show_recovery_ui`\nshow_recovery_ui ContinueWithActionShowRecoveryUIString',
    )
    flow: ContinueWithRecoveryUiFlow


class ContinueWithSettingsUi(BaseModel):
    action: Literal['show_settings_ui'] = Field(
        ...,
        description='Action will always be `show_settings_ui`\nshow_settings_ui ContinueWithActionShowSettingsUIString',
    )
    flow: ContinueWithSettingsUiFlow


class ContinueWithVerificationUi(BaseModel):
    action: Literal['show_verification_ui'] = Field(
        ...,
        description='Action will always be `show_verification_ui`\nshow_verification_ui ContinueWithActionShowVerificationUIString',
    )
    flow: ContinueWithVerificationUiFlow


class CreateMemberInviteResponse(BaseModel):
    __root__: CreateInviteResponse


class CreateProjectBranding(BaseModel):
    favicon_type: Optional[str] = None
    favicon_url: Optional[str] = None
    logo_type: Optional[str] = None
    logo_url: Optional[str] = None
    name: Optional[str] = None
    theme: Optional[ProjectBrandingColors] = None


class CreateRecoveryCodeForIdentityBody(BaseModel):
    expires_in: Optional[constr(regex=r'^([0-9]+(ns|us|ms|s|m|h))*$')] = Field(
        None,
        description='Code Expires In\n\nThe recovery code will expire after that amount of time has passed. Defaults to the configuration value of\n`selfservice.methods.code.config.lifespan`.',
    )
    flow_type: Optional[SelfServiceFlowType] = None
    identity_id: UUID = Field(
        ..., description="Identity to Recover\n\nThe identity's ID you wish to recover."
    )


class CreateRelationshipBody(BaseModel):
    namespace: Optional[str] = Field(None, description='Namespace to query')
    object: Optional[str] = Field(None, description='Object to query')
    relation: Optional[str] = Field(None, description='Relation to query')
    subject_id: Optional[str] = Field(
        None,
        description='SubjectID to query\n\nEither SubjectSet or SubjectID can be provided.',
    )
    subject_set: Optional[SubjectSet] = None


class EmailTemplateData(BaseModel):
    body: EmailTemplateDataBody
    subject: str


class ErrorGeneric(BaseModel):
    error: GenericErrorContent


class GenericError(BaseModel):
    code: Optional[int] = Field(None, description='The status code', example=404)
    debug: Optional[str] = Field(
        None,
        description='Debug information\n\nThis field is often not exposed to protect against leaking\nsensitive information.',
        example='SQL field "foo" is not a bool.',
    )
    details: Optional[Any] = Field(None, description='Further error details')
    error: Optional[GenericErrorContent] = None
    id: Optional[str] = Field(
        None,
        description='The error ID\n\nUseful when trying to identify various errors in application logic.',
    )
    message: str = Field(
        ...,
        description="Error message\n\nThe error's message.",
        example='The resource could not be found',
    )
    reason: Optional[str] = Field(
        None,
        description='A human-readable reason for the error',
        example='User with ID 1234 does not exist.',
    )
    request: Optional[str] = Field(
        None,
        description='The request ID\n\nThe request ID is often exposed internally in order to trace\nerrors across service architectures. This is often a UUID.',
        example='d7ef54b1-ec15-46e6-bccb-524b82c035e6',
    )
    status: Optional[str] = Field(
        None, description='The status description', example='Not Found'
    )


class GetOrganizationResponse(BaseModel):
    organization: Organization


class GetProjectMetricsResponse(BaseModel):
    data: List[MetricsDatapoint] = Field(..., description='The list of data points.')


class Identity(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    credentials: Optional[Dict[str, IdentityCredentials]] = Field(
        None,
        description='Credentials represents all credentials that can be used for authenticating this identity.',
    )
    id: UUID = Field(
        ...,
        description="ID is the identity's unique identifier.\n\nThe Identity ID can not be changed and can not be chosen. This ensures future\ncompatibility and optimization for distributed stores such as CockroachDB.",
    )
    metadata_admin: Optional[NullJsonRawMessage] = None
    metadata_public: Optional[NullJsonRawMessage] = None
    organization_id: Optional[NullUUID] = None
    recovery_addresses: Optional[List[RecoveryIdentityAddress]] = Field(
        None,
        description='RecoveryAddresses contains all the addresses that can be used to recover an identity.',
    )
    schema_id: str = Field(
        ...,
        description="SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.",
    )
    schema_url: str = Field(
        ...,
        description="SchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from.\n\nformat: url",
    )
    state: Optional[State] = Field(
        None,
        description="State is the identity's state.\n\nThis value has currently no effect.\nactive StateActive\ninactive StateInactive",
    )
    state_changed_at: Optional[NullTimeModel] = None
    traits: IdentityTraits
    updated_at: Optional[datetime] = Field(
        None, description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )
    verifiable_addresses: Optional[List[VerifiableIdentityAddress]] = Field(
        None,
        description='VerifiableAddresses contains all the addresses that can be verified by the user.',
    )


class IdentityCredentialsCode(BaseModel):
    addresses: Optional[List[IdentityCredentialsCodeAddress]] = None


class IdentityCredentialsOidc(BaseModel):
    providers: Optional[List[IdentityCredentialsOidcProvider]] = None


class IdentityWithCredentialsOidcConfig(BaseModel):
    config: Optional[IdentityWithCredentialsPasswordConfig] = None
    providers: Optional[List[IdentityWithCredentialsOidcConfigProvider]] = Field(
        None, description='A list of OpenID Connect Providers'
    )


class IdentityWithCredentialsPassword(BaseModel):
    config: Optional[IdentityWithCredentialsPasswordConfig] = None


class Invoice(BaseModel):
    id: UUID = Field(..., description='The ID of the invoice.')
    invoiced_at: Time
    type: Type3 = Field(
        ...,
        description='Type is the type of the invoice.\nusage InvoiceTypeUsage\nbase InvoiceTypeBase',
    )
    updated_at: Optional[datetime] = None
    v1: Optional[InvoiceDataV1] = None


class ListOrganizationsResponse(BaseModel):
    has_next_page: bool
    next_page_token: str
    organizations: List[Organization] = Field(
        ..., description='The list of organizations'
    )


class ListWorkspaces(BaseModel):
    has_next_page: bool
    next_page_token: str
    workspaces: List[Workspace]


class Message(BaseModel):
    body: str
    channel: Optional[str] = None
    created_at: datetime = Field(
        ..., description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    dispatches: Optional[List[MessageDispatch]] = Field(
        None,
        description='Dispatches store information about the attempts of delivering a message\nMay contain an error if any happened, or just the `success` state.',
    )
    id: UUID
    recipient: str
    send_count: int
    status: CourierMessageStatus
    subject: str
    template_type: TemplateType = Field(
        ...,
        description='\nrecovery_invalid TypeRecoveryInvalid\nrecovery_valid TypeRecoveryValid\nrecovery_code_invalid TypeRecoveryCodeInvalid\nrecovery_code_valid TypeRecoveryCodeValid\nverification_invalid TypeVerificationInvalid\nverification_valid TypeVerificationValid\nverification_code_invalid TypeVerificationCodeInvalid\nverification_code_valid TypeVerificationCodeValid\nstub TypeTestStub\nlogin_code_valid TypeLoginCodeValid\nregistration_code_valid TypeRegistrationCodeValid',
    )
    type: CourierMessageType
    updated_at: datetime = Field(
        ..., description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )


class NeedsPrivilegedSessionError(BaseModel):
    error: Optional[GenericError] = None
    redirect_browser_to: str = Field(
        ..., description='Points to where to redirect the user to next.'
    )


class OAuth2ConsentRequest(BaseModel):
    acr: Optional[str] = Field(
        None,
        description='ACR represents the Authentication AuthorizationContext Class Reference value for this authentication session. You can use it\nto express that, for example, a user authenticated using two factor authentication.',
    )
    amr: Optional[StringSliceJSONFormat] = None
    challenge: str = Field(
        ...,
        description='ID is the identifier ("authorization challenge") of the consent authorization request. It is used to\nidentify the session.',
    )
    client: Optional[OAuth2Client] = None
    context: Optional[JSONRawMessage] = None
    login_challenge: Optional[str] = Field(
        None,
        description='LoginChallenge is the login challenge this consent challenge belongs to. It can be used to associate\na login and consent request in the login & consent app.',
    )
    login_session_id: Optional[str] = Field(
        None,
        description='LoginSessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag)\nthis ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false)\nthis will be a new random value. This value is used as the "sid" parameter in the ID Token and in OIDC Front-/Back-\nchannel logout. It\'s value can generally be used to associate consecutive login requests by a certain user.',
    )
    oidc_context: Optional[OAuth2ConsentRequestOpenIDConnectContext] = None
    request_url: Optional[str] = Field(
        None,
        description='RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which\ninitiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but\nmight come in handy if you want to deal with additional request parameters.',
    )
    requested_access_token_audience: Optional[StringSliceJSONFormat] = None
    requested_scope: Optional[StringSliceJSONFormat] = None
    skip: Optional[bool] = Field(
        None,
        description='Skip, if true, implies that the client has requested the same scopes from the same user previously.\nIf true, you must not ask the user to grant the requested scopes. You must however either allow or deny the\nconsent request using the usual API call.',
    )
    subject: Optional[str] = Field(
        None,
        description='Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope\nrequested by the OAuth 2.0 client.',
    )


class OAuth2ConsentSession(BaseModel):
    consent_request: Optional[OAuth2ConsentRequest] = None
    context: Optional[JSONRawMessage] = None
    expires_at: Optional[ExpiresAt] = None
    grant_access_token_audience: Optional[StringSliceJSONFormat] = None
    grant_scope: Optional[StringSliceJSONFormat] = None
    handled_at: Optional[NullTimeModel] = None
    remember: Optional[bool] = Field(
        None,
        description='Remember Consent\n\nRemember, if set to true, tells ORY Hydra to remember this consent authorization and reuse it if the same\nclient asks the same user for the same, or a subset of, scope.',
    )
    remember_for: Optional[int] = Field(
        None,
        description='Remember Consent For\n\nRememberFor sets how long the consent authorization should be remembered for in seconds. If set to `0`, the\nauthorization will be remembered indefinitely.',
    )
    session: Optional[AcceptOAuth2ConsentRequestSession] = None


class PostCheckPermissionBody(BaseModel):
    namespace: Optional[str] = Field(None, description='Namespace to query')
    object: Optional[str] = Field(None, description='Object to query')
    relation: Optional[str] = Field(None, description='Relation to query')
    subject_id: Optional[str] = Field(
        None,
        description='SubjectID to query\n\nEither SubjectSet or SubjectID can be provided.',
    )
    subject_set: Optional[SubjectSet] = None


class PostCheckPermissionOrErrorBody(BaseModel):
    namespace: Optional[str] = Field(None, description='Namespace to query')
    object: Optional[str] = Field(None, description='Object to query')
    relation: Optional[str] = Field(None, description='Relation to query')
    subject_id: Optional[str] = Field(
        None,
        description='SubjectID to query\n\nEither SubjectSet or SubjectID can be provided.',
    )
    subject_set: Optional[SubjectSet] = None


class Project(BaseModel):
    cors_admin: Optional[ProjectCors] = None
    cors_public: Optional[ProjectCors] = None
    environment: Environment = Field(
        ...,
        description='The environment of the project.\nprod Production\nstage Staging\ndev Development',
    )
    home_region: HomeRegion = Field(
        ...,
        description="The project home region.\n\nThis is used to set where the project data is stored and where the project's endpoints are located.\neu-central EUCentral\nasia-northeast AsiaNorthEast\nus-east USEast\nus-west USWest\nus US\nglobal Global",
    )
    id: UUID = Field(..., description="The project's ID.")
    name: str = Field(..., description='The name of the project.')
    revision_id: UUID = Field(..., description='The configuration revision ID.')
    services: ProjectServices
    slug: str = Field(..., description="The project's slug")
    state: State4 = Field(
        ...,
        description='The state of the project.\nrunning Running\nhalted Halted\ndeleted Deleted',
    )
    workspace_id: Optional[NullUUID] = None


class ProjectBranding(BaseModel):
    created_at: datetime = Field(..., description='The Customization Creation Date')
    default_theme: ProjectBrandingTheme
    id: UUID = Field(..., description='The customization ID.')
    project_id: UUID = Field(
        ..., description="The Project's ID this customization is associated with"
    )
    themes: ProjectBrandingThemes
    updated_at: datetime = Field(..., description='Last Time Branding was Updated')


class ProjectMetadata(BaseModel):
    created_at: datetime = Field(..., description="The Project's Creation Date")
    environment: Environment = Field(
        ...,
        description='The environment of the project.\nprod Production\nstage Staging\ndev Development',
    )
    home_region: HomeRegion = Field(
        ...,
        description="The project's data home region\neu-central EUCentral\nasia-northeast AsiaNorthEast\nus-east USEast\nus-west USWest\nus US\nglobal Global",
    )
    hosts: StringSliceJSONFormat
    id: UUID = Field(..., description="The project's ID.")
    name: str = Field(..., description="The project's name if set")
    slug: str = Field(..., description="The project's slug")
    state: State4 = Field(
        ...,
        description='The state of the project.\nrunning Running\nhalted Halted\ndeleted Deleted',
    )
    subscription_id: Optional[NullUUID] = None
    subscription_plan: Optional[String] = None
    updated_at: datetime = Field(..., description='Last Time Project was Updated')
    workspace: Optional[Workspace] = None
    workspace_id: Optional[NullUUID] = None


class RelationQuery(BaseModel):
    namespace: Optional[str] = Field(None, description='Namespace to query')
    object: Optional[str] = Field(None, description='Object to query')
    relation: Optional[str] = Field(None, description='Relation to query')
    subject_id: Optional[str] = Field(
        None,
        description='SubjectID to query\n\nEither SubjectSet or SubjectID can be provided.',
    )
    subject_set: Optional[SubjectSet] = None


class Relationship(BaseModel):
    namespace: str = Field(..., description='Namespace of the Relation Tuple')
    object: str = Field(..., description='Object of the Relation Tuple')
    relation: str = Field(..., description='Relation of the Relation Tuple')
    subject_id: Optional[str] = Field(
        None,
        description='SubjectID of the Relation Tuple\n\nEither SubjectSet or SubjectID can be provided.',
    )
    subject_set: Optional[SubjectSet] = None


class RelationshipPatch(BaseModel):
    action: Optional[Action6] = None
    relation_tuple: Optional[Relationship] = None


class Relationships(BaseModel):
    next_page_token: Optional[str] = Field(
        None,
        description='The opaque token to provide in a subsequent request\nto get the next page. It is the empty string iff this is\nthe last page.',
    )
    relation_tuples: Optional[List[Relationship]] = None


class RevisionCourierChannels(BaseModel):
    __root__: List[NormalizedProjectRevisionCourierChannel]


class SelfServiceFlowExpiredError(BaseModel):
    error: Optional[GenericError] = None
    expired_at: Optional[datetime] = Field(
        None, description='When the flow has expired'
    )
    since: Optional[Duration] = None
    use_flow_id: Optional[UUID] = Field(
        None,
        description='The flow ID that should be used for the new flow as it contains the correct messages.',
    )


class Session(BaseModel):
    active: Optional[bool] = Field(
        None, description='Active state. If false the session is no longer active.'
    )
    authenticated_at: Optional[datetime] = Field(
        None,
        description='The Session Authentication Timestamp\n\nWhen this session was authenticated at. If multi-factor authentication was used this\nis the time when the last factor was authenticated (e.g. the TOTP code challenge was completed).',
    )
    authentication_methods: Optional[SessionAuthenticationMethods] = None
    authenticator_assurance_level: Optional[AuthenticatorAssuranceLevel] = None
    devices: Optional[List[SessionDevice]] = Field(
        None,
        description='Devices has history of all endpoints where the session was used',
    )
    expires_at: Optional[datetime] = Field(
        None, description='The Session Expiry\n\nWhen this session expires at.'
    )
    id: UUID = Field(..., description='Session ID')
    identity: Optional[Identity] = None
    issued_at: Optional[datetime] = Field(
        None,
        description='The Session Issuance Timestamp\n\nWhen this session was issued at. Usually equal or close to `authenticated_at`.',
    )
    tokenized: Optional[str] = Field(
        None,
        description='Tokenized is the tokenized (e.g. JWT) version of the session.\n\nIt is only set when the `tokenize` query parameter was set to a valid tokenize template during calls to `/session/whoami`.',
    )


class SuccessfulCodeExchangeResponse(BaseModel):
    session: Session
    session_token: Optional[str] = Field(
        None,
        description='The Session Token\n\nA session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization\nHeader:\n\nAuthorization: bearer ${session-token}\n\nThe session token is only issued for API flows, not for Browser flows!',
    )


class SuccessfulProjectUpdate(BaseModel):
    project: Project
    warnings: List[Warning] = Field(
        ...,
        description='Import Warnings\n\nNot all configuration items can be imported to the Ory Network. For example,\nsetting the port does not make sense because the Ory Network provides the runtime\nand networking.\n\nThis field contains warnings where configuration keys were found but can not\nbe imported. These keys will be ignored by the Ory Network. This field will help\nyou understand why certain configuration keys might not be respected!',
    )


class TrustedOAuth2JwtGrantIssuer(BaseModel):
    allow_any_subject: Optional[bool] = Field(
        None,
        description='The "allow_any_subject" indicates that the issuer is allowed to have any principal as the subject of the JWT.',
    )
    created_at: Optional[datetime] = Field(
        None, description='The "created_at" indicates, when grant was created.'
    )
    expires_at: Optional[datetime] = Field(
        None,
        description='The "expires_at" indicates, when grant will expire, so we will reject assertion from "issuer" targeting "subject".',
    )
    id: Optional[str] = Field(None, example='9edc811f-4e28-453c-9b46-4de65f00217f')
    issuer: Optional[str] = Field(
        None,
        description='The "issuer" identifies the principal that issued the JWT assertion (same as "iss" claim in JWT).',
        example='https://jwt-idp.example.com',
    )
    public_key: Optional[TrustedOAuth2JwtGrantJsonWebKey] = None
    scope: Optional[List[str]] = Field(
        None,
        description='The "scope" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])',
        example=['openid', 'offline'],
    )
    subject: Optional[str] = Field(
        None,
        description='The "subject" identifies the principal that is the subject of the JWT.',
        example='mike@example.com',
    )


class UiNodeAnchorAttributes(BaseModel):
    href: str = Field(
        ..., description="The link's href (destination) URL.\n\nformat: uri"
    )
    id: str = Field(..., description='A unique identifier')
    node_type: Literal['a'] = Field(
        ...,
        description='NodeType represents this node\'s types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "a".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script',
    )
    title: UiText


class UiNodeInputAttributes(BaseModel):
    autocomplete: Optional[Autocomplete] = Field(
        None,
        description='The autocomplete attribute for the input.\nemail InputAttributeAutocompleteEmail\ntel InputAttributeAutocompleteTel\nurl InputAttributeAutocompleteUrl\ncurrent-password InputAttributeAutocompleteCurrentPassword\nnew-password InputAttributeAutocompleteNewPassword\none-time-code InputAttributeAutocompleteOneTimeCode',
    )
    disabled: bool = Field(
        ..., description="Sets the input's disabled field to true or false."
    )
    label: Optional[UiText] = None
    maxlength: Optional[int] = Field(
        None, description="MaxLength may contain the input's maximum length."
    )
    name: str = Field(..., description="The input's element name.")
    node_type: Literal['input'] = Field(
        ...,
        description='NodeType represents this node\'s types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "input".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script',
    )
    onclick: Optional[str] = Field(
        None,
        description='OnClick may contain javascript which should be executed on click. This is primarily\nused for WebAuthn.\n\nDeprecated: Using OnClick requires the use of eval() which is a security risk. Use OnClickTrigger instead.',
    )
    onclickTrigger: Optional[OnclickTrigger] = Field(
        None,
        description='OnClickTrigger may contain a WebAuthn trigger which should be executed on click.\n\nThe trigger maps to a JavaScript function provided by Ory, which triggers actions such as PassKey registration or login.\noryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration\noryWebAuthnLogin WebAuthnTriggersWebAuthnLogin\noryPasskeyLogin WebAuthnTriggersPasskeyLogin\noryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit\noryPasskeyRegistration WebAuthnTriggersPasskeyRegistration\noryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration',
    )
    onload: Optional[str] = Field(
        None,
        description='OnLoad may contain javascript which should be executed on load. This is primarily\nused for WebAuthn.\n\nDeprecated: Using OnLoad requires the use of eval() which is a security risk. Use OnLoadTrigger instead.',
    )
    onloadTrigger: Optional[OnloadTrigger] = Field(
        None,
        description='OnLoadTrigger may contain a WebAuthn trigger which should be executed on load.\n\nThe trigger maps to a JavaScript function provided by Ory, which triggers actions such as PassKey registration or login.\noryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration\noryWebAuthnLogin WebAuthnTriggersWebAuthnLogin\noryPasskeyLogin WebAuthnTriggersPasskeyLogin\noryPasskeyLoginAutocompleteInit WebAuthnTriggersPasskeyLoginAutocompleteInit\noryPasskeyRegistration WebAuthnTriggersPasskeyRegistration\noryPasskeySettingsRegistration WebAuthnTriggersPasskeySettingsRegistration',
    )
    pattern: Optional[str] = Field(None, description="The input's pattern.")
    required: Optional[bool] = Field(
        None, description='Mark this input field as required.'
    )
    type: Type6 = Field(
        ...,
        description="The input's element type.\ntext InputAttributeTypeText\npassword InputAttributeTypePassword\nnumber InputAttributeTypeNumber\ncheckbox InputAttributeTypeCheckbox\nhidden InputAttributeTypeHidden\nemail InputAttributeTypeEmail\ntel InputAttributeTypeTel\nsubmit InputAttributeTypeSubmit\nbutton InputAttributeTypeButton\ndatetime-local InputAttributeTypeDateTimeLocal\ndate InputAttributeTypeDate\nurl InputAttributeTypeURI",
    )
    value: Optional[Any] = Field(None, description="The input's value.")


class UiNodeMeta(BaseModel):
    label: Optional[UiText] = None


class UiNodeTextAttributes(BaseModel):
    id: str = Field(..., description='A unique identifier')
    node_type: Literal['text'] = Field(
        ...,
        description='NodeType represents this node\'s types. It is a mirror of `node.type` and\nis primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "text".\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script',
    )
    text: UiText


class AdminRelationTuplesPatchRequest(BaseModel):
    __root__: List[RelationshipPatch]


class CreateProjectNormalizedPayload(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description="The Project's Revision Creation Date"
    )
    disable_account_experience_welcome_screen: Optional[bool] = Field(
        None,
        description='Whether to disable the account experience welcome screen, which is hosted under `/ui/welcome`.',
    )
    enable_ax_v2: Optional[bool] = Field(
        None, description='Whether the new account experience is enabled and reachable.'
    )
    environment: Environment = Field(
        ..., description='\nprod Production\nstage Staging\ndev Development'
    )
    home_region: Optional[HomeRegion] = Field(
        None,
        description='\neu-central EUCentral\nasia-northeast AsiaNorthEast\nus-east USEast\nus-west USWest\nus US\nglobal Global',
    )
    hydra_oauth2_allowed_top_level_claims: Optional[StringSliceJSONFormat] = None
    hydra_oauth2_client_credentials_default_grant_allowed_scope: Optional[bool] = Field(
        None,
        description='Automatically grant authorized OAuth2 Scope in OAuth2 Client Credentials Flow.\n\nEach OAuth2 Client is allowed to request a predefined OAuth2 Scope (for example `read write`). If this option is enabled, the full\nscope is automatically granted when performing the OAuth2 Client Credentials flow.\n\nIf disabled, the OAuth2 Client has to request the scope in the OAuth2 request by providing the `scope` query parameter.\n\nSetting this option to true is common if you need compatibility with MITREid.\n\nThis governs the "oauth2.client_credentials.default_grant_allowed_scope" setting.',
    )
    hydra_oauth2_exclude_not_before_claim: Optional[bool] = Field(
        None,
        description='Set to true if you want to exclude claim `nbf (not before)` part of access token.\n\nThis governs the "oauth2.exclude_not_before_claim" setting.',
    )
    hydra_oauth2_grant_jwt_iat_optional: Optional[bool] = Field(
        None,
        description='Configures if the issued at (`iat`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).\n\nIf set to `false`, the `iat` claim is required. Set this value to `true` only after careful consideration.\n\nThis governs the "oauth2.grant.jwt.iat_optional" setting.',
    )
    hydra_oauth2_grant_jwt_jti_optional: Optional[bool] = Field(
        None,
        description='Configures if the JSON Web Token ID (`jti`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).\n\nIf set to `false`, the `jti` claim is required. Set this value to `true` only after careful consideration.\n\nThis governs the "oauth2.grant.jwt.jti_optional" setting.',
    )
    hydra_oauth2_grant_jwt_max_ttl: Optional[
        constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')
    ] = Field(
        '720h',
        description='Configures what the maximum age of a JWT assertion used in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523) can be.\n\nThis feature uses the `exp` claim and `iat` claim to calculate assertion age. Assertions exceeding the max age will be denied.\n\nUseful as a safety measure and recommended to keep below 720h.\n\nThis governs the "oauth2.grant.jwt.max_ttl" setting.',
        example='30m',
    )
    hydra_oauth2_mirror_top_level_claims: Optional[bool] = Field(
        None,
        description='Set to false if you don\'t want to mirror custom claims under \'ext\'.\n\nThis governs the "oauth2.mirror_top_level_claims" setting.',
    )
    hydra_oauth2_pkce_enforced: Optional[bool] = Field(
        None,
        description='Configures whether PKCE should be enforced for all OAuth2 Clients.\n\nThis governs the "oauth2.pkce.enforced" setting.',
    )
    hydra_oauth2_pkce_enforced_for_public_clients: Optional[bool] = Field(
        None,
        description='Configures whether PKCE should be enforced for OAuth2 Clients without a client secret (public clients).\n\nThis governs the "oauth2.pkce.enforced_for_public_clients" setting.',
    )
    hydra_oauth2_refresh_token_hook: Optional[str] = Field(
        None,
        description='Sets the Refresh Token Hook Endpoint. If set this endpoint will be called during the OAuth2 Token Refresh grant update the OAuth2 Access Token claims.\n\nThis governs the "oauth2.refresh_token_hook" setting.',
    )
    hydra_oauth2_token_hook: Optional[str] = Field(
        None,
        description='Sets the token hook endpoint for all grant types. If set it will be called while providing token to customize claims.\n\nThis governs the "oauth2.token_hook.url" setting.',
    )
    hydra_oidc_dynamic_client_registration_default_scope: Optional[
        StringSliceJSONFormat
    ] = None
    hydra_oidc_dynamic_client_registration_enabled: Optional[bool] = Field(
        None,
        description='Configures OpenID Connect Dynamic Client Registration.\n\nThis governs the "oidc.dynamic_client_registration.enabled" setting.',
    )
    hydra_oidc_subject_identifiers_pairwise_salt: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the pairwise algorithm\n\nThis governs the "oidc.subject_identifiers.pairwise_salt" setting.',
    )
    hydra_oidc_subject_identifiers_supported_types: Optional[StringSliceJSONFormat] = (
        None
    )
    hydra_secrets_cookie: Optional[StringSliceJSONFormat] = None
    hydra_secrets_system: Optional[StringSliceJSONFormat] = None
    hydra_serve_cookies_same_site_legacy_workaround: Optional[bool] = Field(
        None,
        description='Configures the Ory Hydra Cookie Same Site Legacy Workaround\n\nThis governs the "serve.cookies.same_site_legacy_workaround" setting.',
    )
    hydra_serve_cookies_same_site_mode: Optional[str] = Field(
        None,
        description='Configures the Ory Hydra Cookie Same Site Mode\n\nThis governs the "serve.cookies.same_site_mode" setting.',
    )
    hydra_strategies_access_token: Optional[HydraStrategiesAccessToken] = Field(
        'opaque',
        description='Defines access token type\n\nThis governs the "strategies.access_token" setting.\nopaque Oauth2AccessTokenStrategyOpaque\njwt Oauth2AccessTokenStrategyJwt',
    )
    hydra_strategies_jwt_scope_claim: Optional[HydraStrategiesJwtScopeClaim] = Field(
        'list',
        description='Define the claim to use as the scope in the access token.\n\nThis governs the "strategies.jwt.scope_claim" setting:\n\nlist: The scope claim is an array of strings named `scope`: `{ "scope": ["read", "write"] }`\nstring: The scope claim is a space delimited list of strings named `scp`: `{ "scp": "read write" }`\nboth: The scope claim is both a space delimited list and an array of strings named `scope` and `scp`: `{ "scope": ["read", "write"], "scp": "read write" }`\nlist OAuth2JWTScopeClaimList\nstring OAuth2JWTScopeClaimString\nboth OAuth2JWTScopeClaimBoth',
    )
    hydra_strategies_scope: Optional[HydraStrategiesScope] = Field(
        'wildcard',
        description='Defines how scopes are matched. For more details have a look at https://github.com/ory/fosite#scopes\n\nThis governs the "strategies.scope" setting.\nexact Oauth2ScopeStrategyExact\nwildcard Oauth2ScopeStrategyWildcard',
    )
    hydra_ttl_access_token: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '30m', description='This governs the "ttl.access_token" setting.', example='1h'
    )
    hydra_ttl_auth_code: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '720h',
        description='Configures how long refresh tokens are valid.\n\nSet to -1 for refresh tokens to never expire. This is not recommended!\n\nThis governs the "ttl.auth_code" setting.',
        example='30m',
    )
    hydra_ttl_id_token: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '30m', description='This governs the "ttl.id_token" setting.', example='1h'
    )
    hydra_ttl_login_consent_request: Optional[
        constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')
    ] = Field(
        '30m',
        description='Configures how long a user login and consent flow may take.\n\nThis governs the "ttl.login_consent_request" setting.',
        example='1h',
    )
    hydra_ttl_refresh_token: Optional[
        constr(regex=r'^([0-9]+(ns|us|ms|s|m|h)|-1)$')
    ] = Field(
        '720h',
        description='Configures how long refresh tokens are valid.\n\nSet to -1 for refresh tokens to never expire. This is not recommended!\n\nThis governs the "ttl.refresh_token" setting.',
        example='30m',
    )
    hydra_urls_consent: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Consent Endpoint URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.consent" setting.',
    )
    hydra_urls_error: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Error URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.error" setting.',
    )
    hydra_urls_login: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Login Endpoint URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.login" setting.',
    )
    hydra_urls_logout: Optional[str] = Field(
        None,
        description='Sets the logout endpoint.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.logout" setting.',
    )
    hydra_urls_post_logout_redirect: Optional[str] = Field(
        None,
        description='When an OAuth2-related user agent requests to log out, they will be redirected to this url afterwards per default.\n\nDefaults to the Ory Account Experience in development and your application in production mode when a custom domain is connected.\n\nThis governs the "urls.post_logout_redirect" setting.',
    )
    hydra_urls_registration: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Registration Endpoint URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.registration" setting.',
    )
    hydra_urls_self_issuer: Optional[str] = Field(
        None,
        description='This value will be used as the issuer in access and ID tokens. It must be specified and using HTTPS protocol, unless the development mode is enabled.\n\nOn the Ory Network it will be very rare that you want to modify this value. If left empty, it will default to the correct value for the Ory Network.\n\nThis governs the "urls.self.issuer" setting.',
    )
    hydra_webfinger_jwks_broadcast_keys: Optional[StringSliceJSONFormat] = None
    hydra_webfinger_oidc_discovery_auth_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the OAuth2 Authorization URL.\n\nThis governs the "webfinger.oidc.discovery.auth_url" setting.',
    )
    hydra_webfinger_oidc_discovery_client_registration_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the OpenID Connect Dynamic Client Registration Endpoint.\n\nThis governs the "webfinger.oidc.discovery.client_registration_url" setting.',
    )
    hydra_webfinger_oidc_discovery_jwks_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the JWKS URL.\n\nThis governs the "webfinger.oidc.discovery.jwks_url" setting.',
    )
    hydra_webfinger_oidc_discovery_supported_claims: Optional[StringSliceJSONFormat] = (
        None
    )
    hydra_webfinger_oidc_discovery_supported_scope: Optional[StringSliceJSONFormat] = (
        None
    )
    hydra_webfinger_oidc_discovery_token_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the OAuth2 Token URL.\n\nThis governs the "webfinger.oidc.discovery.token_url" setting.',
    )
    hydra_webfinger_oidc_discovery_userinfo_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites userinfo endpoint to be advertised at the OpenID Connect Discovery endpoint /.well-known/openid-configuration. Defaults to Ory Hydra\'s userinfo endpoint at /userinfo. Set this value if you want to handle this endpoint yourself.\n\nThis governs the "webfinger.oidc.discovery.userinfo_url" setting.',
    )
    id: Optional[UUID] = Field(None, description='The revision ID.')
    keto_namespace_configuration: Optional[str] = Field(
        None,
        description="The Revisions' Keto Namespace Configuration\n\nThe string is a URL pointing to an OPL file with the configuration.",
    )
    keto_namespaces: Optional[KetoNamespaces] = None
    kratos_cookies_same_site: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Cookie SameSite Attribute\n\nThis governs the "cookies.same_site" setting.',
    )
    kratos_courier_channels: Optional[RevisionCourierChannels] = None
    kratos_courier_delivery_strategy: Optional[str] = Field(
        'smtp',
        description='The delivery strategy to use when sending emails\n\n`smtp`: Use SMTP server\n`http`: Use the built in HTTP client to send the email to some remote service',
    )
    kratos_courier_http_request_config_auth_api_key_in: Optional[str] = Field(
        None,
        description='The location of the API key to use in the HTTP email sending service\'s authentication\n\n`header`: Send the key value pair as a header\n`cookie`: Send the key value pair as a cookie\nThis governs the "courier.http.auth.config.in" setting',
    )
    kratos_courier_http_request_config_auth_api_key_name: Optional[str] = Field(
        None,
        description='The name of the API key to use in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.name" setting',
    )
    kratos_courier_http_request_config_auth_api_key_value: Optional[str] = Field(
        None,
        description='The value of the API key to use in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.value" setting',
    )
    kratos_courier_http_request_config_auth_basic_auth_password: Optional[str] = Field(
        None,
        description='The password to use for basic auth in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.password" setting',
    )
    kratos_courier_http_request_config_auth_basic_auth_user: Optional[str] = Field(
        None,
        description='The user to use for basic auth in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.user" setting',
    )
    kratos_courier_http_request_config_auth_type: Optional[str] = Field(
        'empty (no authentication)',
        description='The authentication type to use while contacting the remote HTTP email sending service\n\n`basic_auth`: Use Basic Authentication\n`api_key`: Use API Key Authentication in a header or cookie',
    )
    kratos_courier_http_request_config_body: Optional[str] = Field(
        None,
        description='The Jsonnet template to generate the body to send to the remote HTTP email sending service\n\nShould be valid Jsonnet and base64 encoded\n\nThis governs the "courier.http.body" setting',
    )
    kratos_courier_http_request_config_headers: Optional[NullJsonRawMessage] = None
    kratos_courier_http_request_config_method: Optional[str] = Field(
        'POST',
        description='The http METHOD to use when calling the remote HTTP email sending service',
    )
    kratos_courier_http_request_config_url: Optional[str] = Field(
        None,
        description='The URL of the remote HTTP email sending service\n\nThis governs the "courier.http.url" setting',
    )
    kratos_courier_smtp_connection_uri: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos SMTP Connection URI\n\nThis governs the "courier.smtp.connection_uri" setting.',
    )
    kratos_courier_smtp_from_address: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos SMTP From Address\n\nThis governs the "courier.smtp.from_address" setting.',
    )
    kratos_courier_smtp_from_name: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos SMTP From Name\n\nThis governs the "courier.smtp.from_name" setting.',
    )
    kratos_courier_smtp_headers: Optional[NullJsonRawMessage] = None
    kratos_courier_smtp_local_name: Optional[str] = Field(
        None,
        description='Configures the local_name to use in SMTP connections\n\nThis governs the "courier.smtp.local_name" setting.',
    )
    kratos_courier_templates_login_code_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Login via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.login_code.valid.email.body.html" setting.',
    )
    kratos_courier_templates_login_code_valid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Login via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.login_code.valid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_login_code_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Login via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.login_code.valid.email.subject" setting.',
    )
    kratos_courier_templates_login_code_valid_sms_body_plaintext: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Login via Code SMS plain text body\n\nThis governs the "courier.smtp.templates.login_code.valid.sms.plaintext" setting.',
    )
    kratos_courier_templates_recovery_code_invalid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Recovery via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery_code.invalid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_recovery_code_invalid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery_code.invalid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_recovery_code_invalid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery_code.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_code_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery_code.valid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_code_valid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Recovery via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery_code.valid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_recovery_code_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery_code.valid.email.subject" setting.',
    )
    kratos_courier_templates_recovery_invalid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_invalid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Recovery Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery.invalid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_recovery_invalid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery.valid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_valid_email_body_plaintext: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery.valid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_recovery_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery.valid.email.subject" setting.',
    )
    kratos_courier_templates_registration_code_valid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Registration via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_registration_code_valid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Registration via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_registration_code_valid_email_subject: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Registration via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.email.subject" setting.',
        )
    )
    kratos_courier_templates_registration_code_valid_sms_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Registration via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.sms.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_code_invalid_email_body_html: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification_code.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_verification_code_invalid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification_code.invalid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_code_invalid_email_subject: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Verification via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.verification_code.invalid.email.subject" setting.',
        )
    )
    kratos_courier_templates_verification_code_valid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Verification via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification_code.valid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_verification_code_valid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification_code.valid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_code_valid_email_subject: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Verification via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.verification_code.valid.email.subject" setting.',
        )
    )
    kratos_courier_templates_verification_code_valid_sms_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification via Code SMS Body Plaintext\n\nThis governs the "courier.smtp.templates.verification_code.valid.sms.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_invalid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Verification Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification.invalid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_verification_invalid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification.invalid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_invalid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification Email Subject Template\n\nThis governs the "courier.smtp.templates.verification.invalid.email.subject" setting.',
    )
    kratos_courier_templates_verification_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification.valid.email.body.html" setting.',
    )
    kratos_courier_templates_verification_valid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Verification Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification.valid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_verification_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification Email Subject Template\n\nThis governs the "courier.smtp.templates.verification.valid.email.subject" setting.',
    )
    kratos_feature_flags_cacheable_sessions: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Session caching feature flag\n\nThis governs the "feature_flags.cacheable_sessions" setting.',
    )
    kratos_feature_flags_cacheable_sessions_max_age: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session caching max-age feature flag\n\nThis governs the "feature_flags.cacheable_sessions_max_age" setting.',
    )
    kratos_feature_flags_faster_session_extend: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Faster Session Extend setting\n\nIf enabled allows faster session extension by skipping the session lookup and returning 201 instead of 200.\nDisabling this feature will be deprecated in the future.\n\nThis governs the "feature_flags.faster_session_extend" setting.',
    )
    kratos_feature_flags_use_continue_with_transitions: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Session use_continue_with_transitions flag\n\nThis governs the "feature_flags.use_continue_with_transitions" setting.',
    )
    kratos_identity_schemas: Optional[ProjectRevisionIdentitySchemas] = None
    kratos_oauth2_provider_headers: Optional[NullJsonRawMessage] = None
    kratos_oauth2_provider_override_return_to: Optional[bool] = Field(
        None,
        description='Kratos OAuth2 Provider Override Return To\n\nEnabling this allows Kratos to set the return_to parameter automatically to the OAuth2 request URL on the login flow, allowing complex flows such as recovery to continue to the initial OAuth2 flow.',
    )
    kratos_oauth2_provider_url: Optional[str] = Field(
        None,
        description='The Revisions\' OAuth2 Provider Integration URL\n\nThis governs the "oauth2_provider.url" setting.',
    )
    kratos_preview_default_read_consistency_level: Optional[str] = Field(
        None,
        description='Configures the default read consistency level for identity APIs\n\nThis governs the `preview.default_read_consistency_level` setting.\n\nThe read consistency level determines the consistency guarantee for reads:\n\nstrong (slow): The read is guaranteed to return the most recent data committed at the start of the read.\neventual (very fast): The result will return data that is about 4.8 seconds old.\n\nSetting the default consistency level to `eventual` may cause regressions in the future as we add consistency\ncontrols to more APIs. Currently, the following APIs will be affected by this setting:\n\n`GET /admin/identities`\n\nDefaults to "strong" for new and existing projects. This feature is in preview. Use with caution.',
    )
    kratos_secrets_cipher: Optional[StringSliceJSONFormat] = None
    kratos_secrets_cookie: Optional[StringSliceJSONFormat] = None
    kratos_secrets_default: Optional[StringSliceJSONFormat] = None
    kratos_selfservice_allowed_return_urls: Optional[StringSliceJSONFormat] = None
    kratos_selfservice_default_browser_return_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Default Return URL\n\nThis governs the "selfservice.allowed_return_urls" setting.',
    )
    kratos_selfservice_flows_error_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Error UI URL\n\nThis governs the "selfservice.flows.error.ui_url" setting.',
    )
    kratos_selfservice_flows_login_after_code_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.code.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_default_browser_return_url: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Login Default Return URL\n\nThis governs the "selfservice.flows.login.after.default_browser_return_url" setting.',
        )
    )
    kratos_selfservice_flows_login_after_lookup_secret_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.lookup_secret.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_oidc_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After OIDC Default Return URL\n\nThis governs the "selfservice.flows.login.after.oidc.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_passkey_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Passkey Default Return URL\n\nThis governs the "selfservice.flows.login.after.passkey.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_password_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.login.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_totp_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.totp.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_webauthn_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After WebAuthn Default Return URL\n\nThis governs the "selfservice.flows.login.after.webauthn.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Login Lifespan\n\nThis governs the "selfservice.flows.login.lifespan" setting.',
    )
    kratos_selfservice_flows_login_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Login UI URL\n\nThis governs the "selfservice.flows.login.ui_url" setting.',
    )
    kratos_selfservice_flows_logout_after_default_browser_return_url: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Logout Default Return URL\n\nThis governs the "selfservice.flows.logout.after.default_browser_return_url" setting.',
        )
    )
    kratos_selfservice_flows_recovery_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Recovery Default Return URL\n\nThis governs the "selfservice.flows.recovery.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_recovery_enabled: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Recovery Enabled Setting\n\nThis governs the "selfservice.flows.recovery.enabled" setting.',
    )
    kratos_selfservice_flows_recovery_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Recovery Lifespan\n\nThis governs the "selfservice.flows.recovery.lifespan" setting.',
    )
    kratos_selfservice_flows_recovery_notify_unknown_recipients: Optional[bool] = Field(
        None,
        description='Configures whether to notify unknown recipients of a Ory Kratos recovery flow\n\nThis governs the "selfservice.flows.recovery.notify_unknown_recipients" setting.',
    )
    kratos_selfservice_flows_recovery_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Recovery UI URL\n\nThis governs the "selfservice.flows.recovery.ui_url" setting.',
    )
    kratos_selfservice_flows_recovery_use: Optional[
        KratosSelfserviceFlowsRecoveryUse
    ] = Field(
        None,
        description='Configures the Ory Kratos Recovery strategy to use ("link" or "code")\n\nThis governs the "selfservice.flows.recovery.use" setting.\nlink SelfServiceMessageVerificationStrategyLink\ncode SelfServiceMessageVerificationStrategyCode',
    )
    kratos_selfservice_flows_registration_after_code_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Code Default Return URL\n\nThis governs the "selfservice.flows.registration.after.code.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Registration Default Return URL\n\nThis governs the "selfservice.flows.registration.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_oidc_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After OIDC Default Return URL\n\nThis governs the "selfservice.flows.registration.after.oidc.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_passkey_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Passkey Default Return URL\n\nThis governs the "selfservice.flows.registration.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_password_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Password Default Return URL\n\nThis governs the "selfservice.flows.registration.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_webauthn_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Webauthn Default Return URL\n\nThis governs the "selfservice.flows.registration.after.webauthn.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_enable_legacy_one_step: Optional[bool] = (
        Field(
            None,
            description='Disable two-step registration\n\nTwo-step registration is a significantly improved sign up flow and recommended\nwhen using more than one sign up methods. To revert to one-step registration,\nset this to `true`.\n\nThis governs the "selfservice.flows.registration.enable_legacy_one_step" setting.',
        )
    )
    kratos_selfservice_flows_registration_enabled: Optional[bool] = Field(
        None,
        description='Configures the Whether Ory Kratos Registration is Enabled\n\nThis governs the "selfservice.flows.registration.enabled" setting.0',
    )
    kratos_selfservice_flows_registration_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Registration Lifespan\n\nThis governs the "selfservice.flows.registration.lifespan" setting.',
    )
    kratos_selfservice_flows_registration_login_hints: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Registration Login Hints\n\nShows helpful information when a user tries to sign up with a duplicate account.\n\nThis governs the "selfservice.flows.registration.login_hints" setting.',
    )
    kratos_selfservice_flows_registration_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Registration UI URL\n\nThis governs the "selfservice.flows.registration.ui_url" setting.',
    )
    kratos_selfservice_flows_settings_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL\n\nThis governs the "selfservice.flows.settings.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_lookup_secret_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Lookup Secrets\n\nThis governs the "selfservice.flows.settings.after.lookup_secret.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_oidc_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Social Sign In\n\nThis governs the "selfservice.flows.settings.after.oidc.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_passkey_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Passkey\n\nThis governs the "selfservice.flows.settings.after.passkey.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_password_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Passwords\n\nThis governs the "selfservice.flows.settings.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_profile_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Profiles\n\nThis governs the "selfservice.flows.settings.after.profile.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_totp_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating TOTP\n\nThis governs the "selfservice.flows.settings.after.totp.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_webauthn_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating WebAuthn\n\nThis governs the "selfservice.flows.settings.after.webauthn.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings Lifespan\n\nThis governs the "selfservice.flows.settings.lifespan" setting.',
    )
    kratos_selfservice_flows_settings_privileged_session_max_age: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings Privileged Session Max Age\n\nThis governs the "selfservice.flows.settings.privileged_session_max_age" setting.',
    )
    kratos_selfservice_flows_settings_required_aal: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings Required AAL\n\nThis governs the "selfservice.flows.settings.required_aal" setting.',
    )
    kratos_selfservice_flows_settings_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings UI URL\n\nThis governs the "selfservice.flows.settings.ui_url" setting.',
    )
    kratos_selfservice_flows_verification_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Verification Default Return URL\n\nThis governs the "selfservice.flows.verification.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_verification_enabled: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Verification Enabled Setting\n\nThis governs the "selfservice.flows.verification.enabled" setting.',
    )
    kratos_selfservice_flows_verification_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Verification Lifespan\n\nThis governs the "selfservice.flows.verification.lifespan" setting.',
    )
    kratos_selfservice_flows_verification_notify_unknown_recipients: Optional[bool] = (
        Field(
            None,
            description='Configures whether to notify unknown recipients of a Ory Kratos verification flow\n\nThis governs the "selfservice.flows.verification.notify_unknown_recipients" setting.',
        )
    )
    kratos_selfservice_flows_verification_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Verification UI URL\n\nThis governs the "selfservice.flows.verification.ui_url" setting.',
    )
    kratos_selfservice_flows_verification_use: Optional[
        KratosSelfserviceFlowsVerificationUse
    ] = Field(
        None,
        description='Configures the Ory Kratos Strategy to use for Verification\n\nThis governs the "selfservice.flows.verification.use" setting.\nlink SelfServiceMessageVerificationStrategyLink\ncode SelfServiceMessageVerificationStrategyCode',
    )
    kratos_selfservice_methods_code_config_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Code Method\'s lifespan\n\nThis governs the "selfservice.methods.code.config.lifespan" setting.',
    )
    kratos_selfservice_methods_code_config_missing_credential_fallback_enabled: (
        Optional[bool]
    ) = Field(
        None,
        description='Enables a fallback method required in certain legacy use cases.\n\nThis governs the "selfservice.methods.code.config.missing_credential_fallback_enabled" setting.',
    )
    kratos_selfservice_methods_code_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Code Method is enabled\n\nThis governs the "selfservice.methods.code.enabled" setting.',
    )
    kratos_selfservice_methods_code_mfa_enabled: Optional[bool] = Field(
        None,
        description='Configures whether the code method can be used to fulfil MFA flows\n\nThis governs the "selfservice.methods.code.mfa_enabled" setting.',
    )
    kratos_selfservice_methods_code_passwordless_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Passwordless should use the Code Method\n\nThis governs the "selfservice.methods.code.passwordless_enabled" setting.',
    )
    kratos_selfservice_methods_code_passwordless_login_fallback_enabled: Optional[
        bool
    ] = Field(
        None,
        description='This setting allows the code method to always login a user with code if they have registered with another authentication method such as password or social sign in.\n\nThis governs the "selfservice.methods.code.passwordless_login_fallback_enabled" setting.',
    )
    kratos_selfservice_methods_link_config_base_url: Optional[str] = Field(
        None,
        description='Configures the Base URL which Recovery, Verification, and Login Links Point to\n\nIt is recommended to leave this value empty. It will be appropriately configured to the best matching domain\n(e.g. when using custom domains) automatically.\n\nThis governs the "selfservice.methods.link.config.base_url" setting.',
    )
    kratos_selfservice_methods_link_config_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Link Method\'s lifespan\n\nThis governs the "selfservice.methods.link.config.lifespan" setting.',
    )
    kratos_selfservice_methods_link_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Link Method is enabled\n\nThis governs the "selfservice.methods.link.enabled" setting.',
    )
    kratos_selfservice_methods_lookup_secret_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos TOTP Lookup Secret is enabled\n\nThis governs the "selfservice.methods.lookup_secret.enabled" setting.',
    )
    kratos_selfservice_methods_oidc_config_base_redirect_uri: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Third Party / OpenID Connect base redirect URI\n\nThis governs the "selfservice.methods.oidc.config.base_redirect_uri" setting.',
    )
    kratos_selfservice_methods_oidc_config_providers: Optional[
        ProjectRevisionThirdPartyLoginProviders
    ] = None
    kratos_selfservice_methods_oidc_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Third Party / OpenID Connect Login is enabled\n\nThis governs the "selfservice.methods.oidc.enabled" setting.',
    )
    kratos_selfservice_methods_passkey_config_rp_display_name: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Passkey RP Display Name\n\nThis governs the "selfservice.methods.passkey.config.rp.display_name" setting.',
    )
    kratos_selfservice_methods_passkey_config_rp_id: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Passkey RP ID\n\nThis governs the "selfservice.methods.passkey.config.rp.id" setting.',
    )
    kratos_selfservice_methods_passkey_config_rp_origins: Optional[
        StringSliceJSONFormat
    ] = None
    kratos_selfservice_methods_passkey_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Passkey authentication is enabled\n\nThis governs the "selfservice.methods.passkey.enabled" setting.',
    )
    kratos_selfservice_methods_password_config_haveibeenpwned_enabled: Optional[
        bool
    ] = Field(
        None,
        description='Configures whether Ory Kratos Password HIBP Checks is enabled\n\nThis governs the "selfservice.methods.password.config.haveibeenpwned_enabled" setting.',
    )
    kratos_selfservice_methods_password_config_identifier_similarity_check_enabled: (
        Optional[bool]
    ) = Field(
        None,
        description='Configures whether Ory Kratos Password should disable the similarity policy.\n\nThis governs the "selfservice.methods.password.config.identifier_similarity_check_enabled" setting.',
    )
    kratos_selfservice_methods_password_config_ignore_network_errors: Optional[bool] = (
        Field(
            None,
            description='Configures whether Ory Kratos Password Should ignore HIBPWND Network Errors\n\nThis governs the "selfservice.methods.password.config.ignore_network_errors" setting.',
        )
    )
    kratos_selfservice_methods_password_config_max_breaches: Optional[int] = Field(
        None,
        description='Configures Ory Kratos Password Max Breaches Detection\n\nThis governs the "selfservice.methods.password.config.max_breaches" setting.',
    )
    kratos_selfservice_methods_password_config_min_password_length: Optional[int] = (
        Field(
            None,
            description='Configures the minimum length of passwords.\n\nThis governs the "selfservice.methods.password.config.min_password_length" setting.',
        )
    )
    kratos_selfservice_methods_password_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Password Method is enabled\n\nThis governs the "selfservice.methods.password.enabled" setting.',
    )
    kratos_selfservice_methods_profile_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Profile Method is enabled\n\nThis governs the "selfservice.methods.profile.enabled" setting.',
    )
    kratos_selfservice_methods_totp_config_issuer: Optional[str] = Field(
        None,
        description='Configures Ory Kratos TOTP Issuer\n\nThis governs the "selfservice.methods.totp.config.issuer" setting.',
    )
    kratos_selfservice_methods_totp_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos TOTP Method is enabled\n\nThis governs the "selfservice.methods.totp.enabled" setting.',
    )
    kratos_selfservice_methods_webauthn_config_passwordless: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Webauthn is used for passwordless flows\n\nThis governs the "selfservice.methods.webauthn.config.passwordless" setting.',
    )
    kratos_selfservice_methods_webauthn_config_rp_display_name: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Webauthn RP Display Name\n\nThis governs the "selfservice.methods.webauthn.config.rp.display_name" setting.',
    )
    kratos_selfservice_methods_webauthn_config_rp_icon: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Webauthn RP Icon\n\nThis governs the "selfservice.methods.webauthn.config.rp.icon" setting.\nDeprecated: This value will be ignored due to security considerations.',
    )
    kratos_selfservice_methods_webauthn_config_rp_id: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Webauthn RP ID\n\nThis governs the "selfservice.methods.webauthn.config.rp.id" setting.',
    )
    kratos_selfservice_methods_webauthn_config_rp_origins: Optional[
        StringSliceJSONFormat
    ] = None
    kratos_selfservice_methods_webauthn_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Webauthn is enabled\n\nThis governs the "selfservice.methods.webauthn.enabled" setting.',
    )
    kratos_session_cookie_persistent: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Session Cookie Persistent Attribute\n\nThis governs the "session.cookie.persistent" setting.',
    )
    kratos_session_cookie_same_site: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session Cookie SameSite Attribute\n\nThis governs the "session.cookie.same_site" setting.',
    )
    kratos_session_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session Lifespan\n\nThis governs the "session.lifespan" setting.',
    )
    kratos_session_whoami_required_aal: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session Whoami AAL requirement\n\nThis governs the "session.whoami.required_aal" setting.',
    )
    kratos_session_whoami_tokenizer_templates: Optional[
        NormalizedProjectRevisionTokenizerTemplates
    ] = None
    name: str = Field(..., description="The project's name.")
    project_id: Optional[UUID] = Field(None, description="The Revision's Project ID")
    project_revision_hooks: Optional[ProjectRevisionHooks] = None
    serve_admin_cors_allowed_origins: Optional[StringSliceJSONFormat] = None
    serve_admin_cors_enabled: Optional[bool] = Field(
        None,
        description='Enable CORS headers on all admin APIs\n\nThis governs the "serve.admin.cors.enabled" setting.',
    )
    serve_public_cors_allowed_origins: Optional[StringSliceJSONFormat] = None
    serve_public_cors_enabled: Optional[bool] = Field(
        None,
        description='Enable CORS headers on all public APIs\n\nThis governs the "serve.public.cors.enabled" setting.',
    )
    strict_security: Optional[bool] = Field(
        None,
        description='Whether the project should employ strict security measures. Setting this to true is recommended for going into production.',
    )
    updated_at: Optional[datetime] = Field(
        None, description="Last Time Project's Revision was Updated"
    )
    workspace_id: Optional[UUID] = None


class Invoices(BaseModel):
    __root__: List[Invoice]


class PlanDetails(BaseModel):
    base_fee_monthly: int = Field(
        ..., description='BaseFeeMonthly is the monthly base fee for the plan.'
    )
    base_fee_yearly: int = Field(
        ..., description='BaseFeeYearly is the yearly base fee for the plan.'
    )
    custom: bool = Field(
        ...,
        description='Custom is true if the plan is custom. This means it will be hidden from the pricing page.',
    )
    description: str = Field(
        ..., description='Description is the description of the plan.'
    )
    features: PlanFeatures
    latest: Optional[bool] = Field(
        None,
        description='Latest is true if the plan is the latest version of a plan and should be available for self-service usage.',
    )
    name: str = Field(..., description='Name is the name of the plan.')
    version: int = Field(
        ...,
        description='Version is the version of the plan. The combination of `name@version` must be unique.',
    )


class Pricing(BaseModel):
    __root__: List[PlanDetails]


class BatchCheckPermissionBody(BaseModel):
    tuples: Optional[List[Relationship]] = None


class ContinueWith(BaseModel):
    __root__: Union[
        ContinueWithVerificationUi,
        ContinueWithSetOrySessionToken,
        ContinueWithSettingsUi,
        ContinueWithRecoveryUi,
        ContinueWithRedirectBrowserTo,
    ] = Field(..., discriminator='action')


class ErrorAuthenticatorAssuranceLevelNotSatisfied(BaseModel):
    error: Optional[GenericError] = None
    redirect_browser_to: Optional[str] = Field(
        None, description='Points to where to redirect the user to next.'
    )


class ErrorBrowserLocationChangeRequired(BaseModel):
    error: Optional[ErrorGeneric] = None
    redirect_browser_to: Optional[str] = Field(
        None, description='Points to where to redirect the user to next.'
    )


class ErrorFlowReplaced(BaseModel):
    error: Optional[GenericError] = None
    use_flow_id: Optional[UUID] = Field(
        None,
        description='The flow ID that should be used for the new flow as it contains the correct messages.',
    )


class ExpandedPermissionTree(BaseModel):
    children: Optional[List[ExpandedPermissionTree]] = Field(
        None, description='The children of the node, possibly none.'
    )
    tuple: Optional[Relationship] = None
    type: Type1 = Field(
        ...,
        description='The type of the node.\nunion TreeNodeUnion\nexclusion TreeNodeExclusion\nintersection TreeNodeIntersection\nleaf TreeNodeLeaf\ntuple_to_subject_set TreeNodeTupleToSubjectSet\ncomputed_subject_set TreeNodeComputedSubjectSet\nnot TreeNodeNot\nunspecified TreeNodeUnspecified',
    )


class IdentityWithCredentialsOidc(BaseModel):
    config: Optional[IdentityWithCredentialsOidcConfig] = None


class ListWorkspaceProjects(BaseModel):
    has_next_page: bool
    next_page: str
    projects: List[ProjectMetadata]


class NormalizedProjectRevision(BaseModel):
    created_at: Optional[datetime] = Field(
        None, description="The Project's Revision Creation Date"
    )
    disable_account_experience_welcome_screen: Optional[bool] = Field(
        None,
        description='Whether to disable the account experience welcome screen, which is hosted under `/ui/welcome`.',
    )
    enable_ax_v2: Optional[bool] = Field(
        None, description='Whether the new account experience is enabled and reachable.'
    )
    hydra_oauth2_allowed_top_level_claims: Optional[StringSliceJSONFormat] = None
    hydra_oauth2_client_credentials_default_grant_allowed_scope: Optional[bool] = Field(
        None,
        description='Automatically grant authorized OAuth2 Scope in OAuth2 Client Credentials Flow.\n\nEach OAuth2 Client is allowed to request a predefined OAuth2 Scope (for example `read write`). If this option is enabled, the full\nscope is automatically granted when performing the OAuth2 Client Credentials flow.\n\nIf disabled, the OAuth2 Client has to request the scope in the OAuth2 request by providing the `scope` query parameter.\n\nSetting this option to true is common if you need compatibility with MITREid.\n\nThis governs the "oauth2.client_credentials.default_grant_allowed_scope" setting.',
    )
    hydra_oauth2_exclude_not_before_claim: Optional[bool] = Field(
        None,
        description='Set to true if you want to exclude claim `nbf (not before)` part of access token.\n\nThis governs the "oauth2.exclude_not_before_claim" setting.',
    )
    hydra_oauth2_grant_jwt_iat_optional: Optional[bool] = Field(
        None,
        description='Configures if the issued at (`iat`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).\n\nIf set to `false`, the `iat` claim is required. Set this value to `true` only after careful consideration.\n\nThis governs the "oauth2.grant.jwt.iat_optional" setting.',
    )
    hydra_oauth2_grant_jwt_jti_optional: Optional[bool] = Field(
        None,
        description='Configures if the JSON Web Token ID (`jti`) claim is required in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523).\n\nIf set to `false`, the `jti` claim is required. Set this value to `true` only after careful consideration.\n\nThis governs the "oauth2.grant.jwt.jti_optional" setting.',
    )
    hydra_oauth2_grant_jwt_max_ttl: Optional[
        constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')
    ] = Field(
        '720h',
        description='Configures what the maximum age of a JWT assertion used in the JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants (RFC7523) can be.\n\nThis feature uses the `exp` claim and `iat` claim to calculate assertion age. Assertions exceeding the max age will be denied.\n\nUseful as a safety measure and recommended to keep below 720h.\n\nThis governs the "oauth2.grant.jwt.max_ttl" setting.',
        example='30m',
    )
    hydra_oauth2_mirror_top_level_claims: Optional[bool] = Field(
        None,
        description='Set to false if you don\'t want to mirror custom claims under \'ext\'.\n\nThis governs the "oauth2.mirror_top_level_claims" setting.',
    )
    hydra_oauth2_pkce_enforced: Optional[bool] = Field(
        None,
        description='Configures whether PKCE should be enforced for all OAuth2 Clients.\n\nThis governs the "oauth2.pkce.enforced" setting.',
    )
    hydra_oauth2_pkce_enforced_for_public_clients: Optional[bool] = Field(
        None,
        description='Configures whether PKCE should be enforced for OAuth2 Clients without a client secret (public clients).\n\nThis governs the "oauth2.pkce.enforced_for_public_clients" setting.',
    )
    hydra_oauth2_refresh_token_hook: Optional[str] = Field(
        None,
        description='Sets the Refresh Token Hook Endpoint. If set this endpoint will be called during the OAuth2 Token Refresh grant update the OAuth2 Access Token claims.\n\nThis governs the "oauth2.refresh_token_hook" setting.',
    )
    hydra_oauth2_token_hook: Optional[str] = Field(
        None,
        description='Sets the token hook endpoint for all grant types. If set it will be called while providing token to customize claims.\n\nThis governs the "oauth2.token_hook.url" setting.',
    )
    hydra_oidc_dynamic_client_registration_default_scope: Optional[
        StringSliceJSONFormat
    ] = None
    hydra_oidc_dynamic_client_registration_enabled: Optional[bool] = Field(
        None,
        description='Configures OpenID Connect Dynamic Client Registration.\n\nThis governs the "oidc.dynamic_client_registration.enabled" setting.',
    )
    hydra_oidc_subject_identifiers_pairwise_salt: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the pairwise algorithm\n\nThis governs the "oidc.subject_identifiers.pairwise_salt" setting.',
    )
    hydra_oidc_subject_identifiers_supported_types: Optional[StringSliceJSONFormat] = (
        None
    )
    hydra_secrets_cookie: Optional[StringSliceJSONFormat] = None
    hydra_secrets_system: Optional[StringSliceJSONFormat] = None
    hydra_serve_cookies_same_site_legacy_workaround: Optional[bool] = Field(
        None,
        description='Configures the Ory Hydra Cookie Same Site Legacy Workaround\n\nThis governs the "serve.cookies.same_site_legacy_workaround" setting.',
    )
    hydra_serve_cookies_same_site_mode: Optional[str] = Field(
        None,
        description='Configures the Ory Hydra Cookie Same Site Mode\n\nThis governs the "serve.cookies.same_site_mode" setting.',
    )
    hydra_strategies_access_token: Optional[HydraStrategiesAccessToken] = Field(
        'opaque',
        description='Defines access token type\n\nThis governs the "strategies.access_token" setting.\nopaque Oauth2AccessTokenStrategyOpaque\njwt Oauth2AccessTokenStrategyJwt',
    )
    hydra_strategies_jwt_scope_claim: Optional[HydraStrategiesJwtScopeClaim] = Field(
        'list',
        description='Define the claim to use as the scope in the access token.\n\nThis governs the "strategies.jwt.scope_claim" setting:\n\nlist: The scope claim is an array of strings named `scope`: `{ "scope": ["read", "write"] }`\nstring: The scope claim is a space delimited list of strings named `scp`: `{ "scp": "read write" }`\nboth: The scope claim is both a space delimited list and an array of strings named `scope` and `scp`: `{ "scope": ["read", "write"], "scp": "read write" }`\nlist OAuth2JWTScopeClaimList\nstring OAuth2JWTScopeClaimString\nboth OAuth2JWTScopeClaimBoth',
    )
    hydra_strategies_scope: Optional[HydraStrategiesScope] = Field(
        'wildcard',
        description='Defines how scopes are matched. For more details have a look at https://github.com/ory/fosite#scopes\n\nThis governs the "strategies.scope" setting.\nexact Oauth2ScopeStrategyExact\nwildcard Oauth2ScopeStrategyWildcard',
    )
    hydra_ttl_access_token: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '30m', description='This governs the "ttl.access_token" setting.', example='1h'
    )
    hydra_ttl_auth_code: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '720h',
        description='Configures how long refresh tokens are valid.\n\nSet to -1 for refresh tokens to never expire. This is not recommended!\n\nThis governs the "ttl.auth_code" setting.',
        example='30m',
    )
    hydra_ttl_id_token: Optional[constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')] = Field(
        '30m', description='This governs the "ttl.id_token" setting.', example='1h'
    )
    hydra_ttl_login_consent_request: Optional[
        constr(regex=r'^[0-9]+(ns|us|ms|s|m|h)$')
    ] = Field(
        '30m',
        description='Configures how long a user login and consent flow may take.\n\nThis governs the "ttl.login_consent_request" setting.',
        example='1h',
    )
    hydra_ttl_refresh_token: Optional[
        constr(regex=r'^([0-9]+(ns|us|ms|s|m|h)|-1)$')
    ] = Field(
        '720h',
        description='Configures how long refresh tokens are valid.\n\nSet to -1 for refresh tokens to never expire. This is not recommended!\n\nThis governs the "ttl.refresh_token" setting.',
        example='30m',
    )
    hydra_urls_consent: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Consent Endpoint URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.consent" setting.',
    )
    hydra_urls_error: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Error URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.error" setting.',
    )
    hydra_urls_login: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Login Endpoint URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.login" setting.',
    )
    hydra_urls_logout: Optional[str] = Field(
        None,
        description='Sets the logout endpoint.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.logout" setting.',
    )
    hydra_urls_post_logout_redirect: Optional[str] = Field(
        None,
        description='When an OAuth2-related user agent requests to log out, they will be redirected to this url afterwards per default.\n\nDefaults to the Ory Account Experience in development and your application in production mode when a custom domain is connected.\n\nThis governs the "urls.post_logout_redirect" setting.',
    )
    hydra_urls_registration: Optional[str] = Field(
        None,
        description='Sets the OAuth2 Registration Endpoint URL of the OAuth2 User Login & Consent flow.\n\nDefaults to the Ory Account Experience if left empty.\n\nThis governs the "urls.registration" setting.',
    )
    hydra_urls_self_issuer: Optional[str] = Field(
        None,
        description='This value will be used as the issuer in access and ID tokens. It must be specified and using HTTPS protocol, unless the development mode is enabled.\n\nOn the Ory Network it will be very rare that you want to modify this value. If left empty, it will default to the correct value for the Ory Network.\n\nThis governs the "urls.self.issuer" setting.',
    )
    hydra_webfinger_jwks_broadcast_keys: Optional[StringSliceJSONFormat] = None
    hydra_webfinger_oidc_discovery_auth_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the OAuth2 Authorization URL.\n\nThis governs the "webfinger.oidc.discovery.auth_url" setting.',
    )
    hydra_webfinger_oidc_discovery_client_registration_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the OpenID Connect Dynamic Client Registration Endpoint.\n\nThis governs the "webfinger.oidc.discovery.client_registration_url" setting.',
    )
    hydra_webfinger_oidc_discovery_jwks_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the JWKS URL.\n\nThis governs the "webfinger.oidc.discovery.jwks_url" setting.',
    )
    hydra_webfinger_oidc_discovery_supported_claims: Optional[StringSliceJSONFormat] = (
        None
    )
    hydra_webfinger_oidc_discovery_supported_scope: Optional[StringSliceJSONFormat] = (
        None
    )
    hydra_webfinger_oidc_discovery_token_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites the OAuth2 Token URL.\n\nThis governs the "webfinger.oidc.discovery.token_url" setting.',
    )
    hydra_webfinger_oidc_discovery_userinfo_url: Optional[str] = Field(
        None,
        description='Configures OpenID Connect Discovery and overwrites userinfo endpoint to be advertised at the OpenID Connect Discovery endpoint /.well-known/openid-configuration. Defaults to Ory Hydra\'s userinfo endpoint at /userinfo. Set this value if you want to handle this endpoint yourself.\n\nThis governs the "webfinger.oidc.discovery.userinfo_url" setting.',
    )
    id: Optional[UUID] = Field(None, description='The revision ID.')
    keto_namespace_configuration: Optional[str] = Field(
        None,
        description="The Revisions' Keto Namespace Configuration\n\nThe string is a URL pointing to an OPL file with the configuration.",
    )
    keto_namespaces: Optional[KetoNamespaces] = None
    kratos_cookies_same_site: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Cookie SameSite Attribute\n\nThis governs the "cookies.same_site" setting.',
    )
    kratos_courier_channels: Optional[RevisionCourierChannels] = None
    kratos_courier_delivery_strategy: Optional[str] = Field(
        'smtp',
        description='The delivery strategy to use when sending emails\n\n`smtp`: Use SMTP server\n`http`: Use the built in HTTP client to send the email to some remote service',
    )
    kratos_courier_http_request_config_auth_api_key_in: Optional[str] = Field(
        None,
        description='The location of the API key to use in the HTTP email sending service\'s authentication\n\n`header`: Send the key value pair as a header\n`cookie`: Send the key value pair as a cookie\nThis governs the "courier.http.auth.config.in" setting',
    )
    kratos_courier_http_request_config_auth_api_key_name: Optional[str] = Field(
        None,
        description='The name of the API key to use in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.name" setting',
    )
    kratos_courier_http_request_config_auth_api_key_value: Optional[str] = Field(
        None,
        description='The value of the API key to use in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.value" setting',
    )
    kratos_courier_http_request_config_auth_basic_auth_password: Optional[str] = Field(
        None,
        description='The password to use for basic auth in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.password" setting',
    )
    kratos_courier_http_request_config_auth_basic_auth_user: Optional[str] = Field(
        None,
        description='The user to use for basic auth in the HTTP email sending service\'s authentication\n\nThis governs the "courier.http.auth.config.user" setting',
    )
    kratos_courier_http_request_config_auth_type: Optional[str] = Field(
        'empty (no authentication)',
        description='The authentication type to use while contacting the remote HTTP email sending service\n\n`basic_auth`: Use Basic Authentication\n`api_key`: Use API Key Authentication in a header or cookie',
    )
    kratos_courier_http_request_config_body: Optional[str] = Field(
        None,
        description='The Jsonnet template to generate the body to send to the remote HTTP email sending service\n\nShould be valid Jsonnet and base64 encoded\n\nThis governs the "courier.http.body" setting',
    )
    kratos_courier_http_request_config_headers: Optional[NullJsonRawMessage] = None
    kratos_courier_http_request_config_method: Optional[str] = Field(
        'POST',
        description='The http METHOD to use when calling the remote HTTP email sending service',
    )
    kratos_courier_http_request_config_url: Optional[str] = Field(
        None,
        description='The URL of the remote HTTP email sending service\n\nThis governs the "courier.http.url" setting',
    )
    kratos_courier_smtp_connection_uri: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos SMTP Connection URI\n\nThis governs the "courier.smtp.connection_uri" setting.',
    )
    kratos_courier_smtp_from_address: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos SMTP From Address\n\nThis governs the "courier.smtp.from_address" setting.',
    )
    kratos_courier_smtp_from_name: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos SMTP From Name\n\nThis governs the "courier.smtp.from_name" setting.',
    )
    kratos_courier_smtp_headers: Optional[NullJsonRawMessage] = None
    kratos_courier_smtp_local_name: Optional[str] = Field(
        None,
        description='Configures the local_name to use in SMTP connections\n\nThis governs the "courier.smtp.local_name" setting.',
    )
    kratos_courier_templates_login_code_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Login via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.login_code.valid.email.body.html" setting.',
    )
    kratos_courier_templates_login_code_valid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Login via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.login_code.valid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_login_code_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Login via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.login_code.valid.email.subject" setting.',
    )
    kratos_courier_templates_login_code_valid_sms_body_plaintext: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Login via Code SMS plain text body\n\nThis governs the "courier.smtp.templates.login_code.valid.sms.plaintext" setting.',
    )
    kratos_courier_templates_recovery_code_invalid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Recovery via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery_code.invalid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_recovery_code_invalid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery_code.invalid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_recovery_code_invalid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery_code.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_code_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery_code.valid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_code_valid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Recovery via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery_code.valid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_recovery_code_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery_code.valid.email.subject" setting.',
    )
    kratos_courier_templates_recovery_invalid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_invalid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Recovery Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery.invalid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_recovery_invalid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Recovery Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery Email Body HTML Template\n\nThis governs the "courier.smtp.templates.recovery.valid.email.body.html" setting.',
    )
    kratos_courier_templates_recovery_valid_email_body_plaintext: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.recovery.valid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_recovery_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Recovery Email Subject Template\n\nThis governs the "courier.smtp.templates.recovery.valid.email.subject" setting.',
    )
    kratos_courier_templates_registration_code_valid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Registration via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_registration_code_valid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Registration via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_registration_code_valid_email_subject: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Registration via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.email.subject" setting.',
        )
    )
    kratos_courier_templates_registration_code_valid_sms_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Registration via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.registration_code.valid.sms.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_code_invalid_email_body_html: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification_code.invalid.email.body.html" setting.',
    )
    kratos_courier_templates_verification_code_invalid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification_code.invalid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_code_invalid_email_subject: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Verification via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.verification_code.invalid.email.subject" setting.',
        )
    )
    kratos_courier_templates_verification_code_valid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Verification via Code Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification_code.valid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_verification_code_valid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification via Code Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification_code.valid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_code_valid_email_subject: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Verification via Code Email Subject Template\n\nThis governs the "courier.smtp.templates.verification_code.valid.email.subject" setting.',
        )
    )
    kratos_courier_templates_verification_code_valid_sms_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification via Code SMS Body Plaintext\n\nThis governs the "courier.smtp.templates.verification_code.valid.sms.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_invalid_email_body_html: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Invalid Verification Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification.invalid.email.body.html" setting.',
        )
    )
    kratos_courier_templates_verification_invalid_email_body_plaintext: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification.invalid.email.body.plaintext" setting.',
    )
    kratos_courier_templates_verification_invalid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Invalid Verification Email Subject Template\n\nThis governs the "courier.smtp.templates.verification.invalid.email.subject" setting.',
    )
    kratos_courier_templates_verification_valid_email_body_html: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification Email Body HTML Template\n\nThis governs the "courier.smtp.templates.verification.valid.email.body.html" setting.',
    )
    kratos_courier_templates_verification_valid_email_body_plaintext: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Valid Verification Email Body Plaintext Template\n\nThis governs the "courier.smtp.templates.verification.valid.email.body.plaintext" setting.',
        )
    )
    kratos_courier_templates_verification_valid_email_subject: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Valid Verification Email Subject Template\n\nThis governs the "courier.smtp.templates.verification.valid.email.subject" setting.',
    )
    kratos_feature_flags_cacheable_sessions: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Session caching feature flag\n\nThis governs the "feature_flags.cacheable_sessions" setting.',
    )
    kratos_feature_flags_cacheable_sessions_max_age: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session caching max-age feature flag\n\nThis governs the "feature_flags.cacheable_sessions_max_age" setting.',
    )
    kratos_feature_flags_faster_session_extend: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Faster Session Extend setting\n\nIf enabled allows faster session extension by skipping the session lookup and returning 201 instead of 200.\nDisabling this feature will be deprecated in the future.\n\nThis governs the "feature_flags.faster_session_extend" setting.',
    )
    kratos_feature_flags_use_continue_with_transitions: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Session use_continue_with_transitions flag\n\nThis governs the "feature_flags.use_continue_with_transitions" setting.',
    )
    kratos_identity_schemas: Optional[ProjectRevisionIdentitySchemas] = None
    kratos_oauth2_provider_headers: Optional[NullJsonRawMessage] = None
    kratos_oauth2_provider_override_return_to: Optional[bool] = Field(
        None,
        description='Kratos OAuth2 Provider Override Return To\n\nEnabling this allows Kratos to set the return_to parameter automatically to the OAuth2 request URL on the login flow, allowing complex flows such as recovery to continue to the initial OAuth2 flow.',
    )
    kratos_oauth2_provider_url: Optional[str] = Field(
        None,
        description='The Revisions\' OAuth2 Provider Integration URL\n\nThis governs the "oauth2_provider.url" setting.',
    )
    kratos_preview_default_read_consistency_level: Optional[str] = Field(
        None,
        description='Configures the default read consistency level for identity APIs\n\nThis governs the `preview.default_read_consistency_level` setting.\n\nThe read consistency level determines the consistency guarantee for reads:\n\nstrong (slow): The read is guaranteed to return the most recent data committed at the start of the read.\neventual (very fast): The result will return data that is about 4.8 seconds old.\n\nSetting the default consistency level to `eventual` may cause regressions in the future as we add consistency\ncontrols to more APIs. Currently, the following APIs will be affected by this setting:\n\n`GET /admin/identities`\n\nDefaults to "strong" for new and existing projects. This feature is in preview. Use with caution.',
    )
    kratos_secrets_cipher: Optional[StringSliceJSONFormat] = None
    kratos_secrets_cookie: Optional[StringSliceJSONFormat] = None
    kratos_secrets_default: Optional[StringSliceJSONFormat] = None
    kratos_selfservice_allowed_return_urls: Optional[StringSliceJSONFormat] = None
    kratos_selfservice_default_browser_return_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Default Return URL\n\nThis governs the "selfservice.allowed_return_urls" setting.',
    )
    kratos_selfservice_flows_error_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Error UI URL\n\nThis governs the "selfservice.flows.error.ui_url" setting.',
    )
    kratos_selfservice_flows_login_after_code_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.code.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_default_browser_return_url: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Login Default Return URL\n\nThis governs the "selfservice.flows.login.after.default_browser_return_url" setting.',
        )
    )
    kratos_selfservice_flows_login_after_lookup_secret_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.lookup_secret.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_oidc_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After OIDC Default Return URL\n\nThis governs the "selfservice.flows.login.after.oidc.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_passkey_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Passkey Default Return URL\n\nThis governs the "selfservice.flows.login.after.passkey.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_password_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.login.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_totp_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After Password Default Return URL\n\nThis governs the "selfservice.flows.totp.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_after_webauthn_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Login After WebAuthn Default Return URL\n\nThis governs the "selfservice.flows.login.after.webauthn.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_login_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Login Lifespan\n\nThis governs the "selfservice.flows.login.lifespan" setting.',
    )
    kratos_selfservice_flows_login_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Login UI URL\n\nThis governs the "selfservice.flows.login.ui_url" setting.',
    )
    kratos_selfservice_flows_logout_after_default_browser_return_url: Optional[str] = (
        Field(
            None,
            description='Configures the Ory Kratos Logout Default Return URL\n\nThis governs the "selfservice.flows.logout.after.default_browser_return_url" setting.',
        )
    )
    kratos_selfservice_flows_recovery_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Recovery Default Return URL\n\nThis governs the "selfservice.flows.recovery.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_recovery_enabled: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Recovery Enabled Setting\n\nThis governs the "selfservice.flows.recovery.enabled" setting.',
    )
    kratos_selfservice_flows_recovery_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Recovery Lifespan\n\nThis governs the "selfservice.flows.recovery.lifespan" setting.',
    )
    kratos_selfservice_flows_recovery_notify_unknown_recipients: Optional[bool] = Field(
        None,
        description='Configures whether to notify unknown recipients of a Ory Kratos recovery flow\n\nThis governs the "selfservice.flows.recovery.notify_unknown_recipients" setting.',
    )
    kratos_selfservice_flows_recovery_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Recovery UI URL\n\nThis governs the "selfservice.flows.recovery.ui_url" setting.',
    )
    kratos_selfservice_flows_recovery_use: Optional[
        KratosSelfserviceFlowsRecoveryUse
    ] = Field(
        None,
        description='Configures the Ory Kratos Recovery strategy to use ("link" or "code")\n\nThis governs the "selfservice.flows.recovery.use" setting.\nlink SelfServiceMessageVerificationStrategyLink\ncode SelfServiceMessageVerificationStrategyCode',
    )
    kratos_selfservice_flows_registration_after_code_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Code Default Return URL\n\nThis governs the "selfservice.flows.registration.after.code.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Registration Default Return URL\n\nThis governs the "selfservice.flows.registration.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_oidc_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After OIDC Default Return URL\n\nThis governs the "selfservice.flows.registration.after.oidc.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_passkey_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Passkey Default Return URL\n\nThis governs the "selfservice.flows.registration.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_password_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Password Default Return URL\n\nThis governs the "selfservice.flows.registration.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_after_webauthn_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Registration After Webauthn Default Return URL\n\nThis governs the "selfservice.flows.registration.after.webauthn.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_registration_enable_legacy_one_step: Optional[bool] = (
        Field(
            None,
            description='Disable two-step registration\n\nTwo-step registration is a significantly improved sign up flow and recommended\nwhen using more than one sign up methods. To revert to one-step registration,\nset this to `true`.\n\nThis governs the "selfservice.flows.registration.enable_legacy_one_step" setting.',
        )
    )
    kratos_selfservice_flows_registration_enabled: Optional[bool] = Field(
        None,
        description='Configures the Whether Ory Kratos Registration is Enabled\n\nThis governs the "selfservice.flows.registration.enabled" setting.0',
    )
    kratos_selfservice_flows_registration_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Registration Lifespan\n\nThis governs the "selfservice.flows.registration.lifespan" setting.',
    )
    kratos_selfservice_flows_registration_login_hints: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Registration Login Hints\n\nShows helpful information when a user tries to sign up with a duplicate account.\n\nThis governs the "selfservice.flows.registration.login_hints" setting.',
    )
    kratos_selfservice_flows_registration_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Registration UI URL\n\nThis governs the "selfservice.flows.registration.ui_url" setting.',
    )
    kratos_selfservice_flows_settings_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL\n\nThis governs the "selfservice.flows.settings.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_lookup_secret_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Lookup Secrets\n\nThis governs the "selfservice.flows.settings.after.lookup_secret.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_oidc_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Social Sign In\n\nThis governs the "selfservice.flows.settings.after.oidc.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_passkey_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Passkey\n\nThis governs the "selfservice.flows.settings.after.passkey.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_password_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Passwords\n\nThis governs the "selfservice.flows.settings.after.password.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_profile_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating Profiles\n\nThis governs the "selfservice.flows.settings.after.profile.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_totp_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating TOTP\n\nThis governs the "selfservice.flows.settings.after.totp.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_after_webauthn_default_browser_return_url: (
        Optional[str]
    ) = Field(
        None,
        description='Configures the Ory Kratos Settings Default Return URL After Updating WebAuthn\n\nThis governs the "selfservice.flows.settings.after.webauthn.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_settings_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings Lifespan\n\nThis governs the "selfservice.flows.settings.lifespan" setting.',
    )
    kratos_selfservice_flows_settings_privileged_session_max_age: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings Privileged Session Max Age\n\nThis governs the "selfservice.flows.settings.privileged_session_max_age" setting.',
    )
    kratos_selfservice_flows_settings_required_aal: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings Required AAL\n\nThis governs the "selfservice.flows.settings.required_aal" setting.',
    )
    kratos_selfservice_flows_settings_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Settings UI URL\n\nThis governs the "selfservice.flows.settings.ui_url" setting.',
    )
    kratos_selfservice_flows_verification_after_default_browser_return_url: Optional[
        str
    ] = Field(
        None,
        description='Configures the Ory Kratos Verification Default Return URL\n\nThis governs the "selfservice.flows.verification.after.default_browser_return_url" setting.',
    )
    kratos_selfservice_flows_verification_enabled: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Verification Enabled Setting\n\nThis governs the "selfservice.flows.verification.enabled" setting.',
    )
    kratos_selfservice_flows_verification_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Verification Lifespan\n\nThis governs the "selfservice.flows.verification.lifespan" setting.',
    )
    kratos_selfservice_flows_verification_notify_unknown_recipients: Optional[bool] = (
        Field(
            None,
            description='Configures whether to notify unknown recipients of a Ory Kratos verification flow\n\nThis governs the "selfservice.flows.verification.notify_unknown_recipients" setting.',
        )
    )
    kratos_selfservice_flows_verification_ui_url: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Verification UI URL\n\nThis governs the "selfservice.flows.verification.ui_url" setting.',
    )
    kratos_selfservice_flows_verification_use: Optional[
        KratosSelfserviceFlowsVerificationUse
    ] = Field(
        None,
        description='Configures the Ory Kratos Strategy to use for Verification\n\nThis governs the "selfservice.flows.verification.use" setting.\nlink SelfServiceMessageVerificationStrategyLink\ncode SelfServiceMessageVerificationStrategyCode',
    )
    kratos_selfservice_methods_code_config_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Code Method\'s lifespan\n\nThis governs the "selfservice.methods.code.config.lifespan" setting.',
    )
    kratos_selfservice_methods_code_config_missing_credential_fallback_enabled: (
        Optional[bool]
    ) = Field(
        None,
        description='Enables a fallback method required in certain legacy use cases.\n\nThis governs the "selfservice.methods.code.config.missing_credential_fallback_enabled" setting.',
    )
    kratos_selfservice_methods_code_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Code Method is enabled\n\nThis governs the "selfservice.methods.code.enabled" setting.',
    )
    kratos_selfservice_methods_code_mfa_enabled: Optional[bool] = Field(
        None,
        description='Configures whether the code method can be used to fulfil MFA flows\n\nThis governs the "selfservice.methods.code.mfa_enabled" setting.',
    )
    kratos_selfservice_methods_code_passwordless_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Passwordless should use the Code Method\n\nThis governs the "selfservice.methods.code.passwordless_enabled" setting.',
    )
    kratos_selfservice_methods_code_passwordless_login_fallback_enabled: Optional[
        bool
    ] = Field(
        None,
        description='This setting allows the code method to always login a user with code if they have registered with another authentication method such as password or social sign in.\n\nThis governs the "selfservice.methods.code.passwordless_login_fallback_enabled" setting.',
    )
    kratos_selfservice_methods_link_config_base_url: Optional[str] = Field(
        None,
        description='Configures the Base URL which Recovery, Verification, and Login Links Point to\n\nIt is recommended to leave this value empty. It will be appropriately configured to the best matching domain\n(e.g. when using custom domains) automatically.\n\nThis governs the "selfservice.methods.link.config.base_url" setting.',
    )
    kratos_selfservice_methods_link_config_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Link Method\'s lifespan\n\nThis governs the "selfservice.methods.link.config.lifespan" setting.',
    )
    kratos_selfservice_methods_link_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Link Method is enabled\n\nThis governs the "selfservice.methods.link.enabled" setting.',
    )
    kratos_selfservice_methods_lookup_secret_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos TOTP Lookup Secret is enabled\n\nThis governs the "selfservice.methods.lookup_secret.enabled" setting.',
    )
    kratos_selfservice_methods_oidc_config_base_redirect_uri: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Third Party / OpenID Connect base redirect URI\n\nThis governs the "selfservice.methods.oidc.config.base_redirect_uri" setting.',
    )
    kratos_selfservice_methods_oidc_config_providers: Optional[
        ProjectRevisionThirdPartyLoginProviders
    ] = None
    kratos_selfservice_methods_oidc_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Third Party / OpenID Connect Login is enabled\n\nThis governs the "selfservice.methods.oidc.enabled" setting.',
    )
    kratos_selfservice_methods_passkey_config_rp_display_name: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Passkey RP Display Name\n\nThis governs the "selfservice.methods.passkey.config.rp.display_name" setting.',
    )
    kratos_selfservice_methods_passkey_config_rp_id: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Passkey RP ID\n\nThis governs the "selfservice.methods.passkey.config.rp.id" setting.',
    )
    kratos_selfservice_methods_passkey_config_rp_origins: Optional[
        StringSliceJSONFormat
    ] = None
    kratos_selfservice_methods_passkey_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Passkey authentication is enabled\n\nThis governs the "selfservice.methods.passkey.enabled" setting.',
    )
    kratos_selfservice_methods_password_config_haveibeenpwned_enabled: Optional[
        bool
    ] = Field(
        None,
        description='Configures whether Ory Kratos Password HIBP Checks is enabled\n\nThis governs the "selfservice.methods.password.config.haveibeenpwned_enabled" setting.',
    )
    kratos_selfservice_methods_password_config_identifier_similarity_check_enabled: (
        Optional[bool]
    ) = Field(
        None,
        description='Configures whether Ory Kratos Password should disable the similarity policy.\n\nThis governs the "selfservice.methods.password.config.identifier_similarity_check_enabled" setting.',
    )
    kratos_selfservice_methods_password_config_ignore_network_errors: Optional[bool] = (
        Field(
            None,
            description='Configures whether Ory Kratos Password Should ignore HIBPWND Network Errors\n\nThis governs the "selfservice.methods.password.config.ignore_network_errors" setting.',
        )
    )
    kratos_selfservice_methods_password_config_max_breaches: Optional[int] = Field(
        None,
        description='Configures Ory Kratos Password Max Breaches Detection\n\nThis governs the "selfservice.methods.password.config.max_breaches" setting.',
    )
    kratos_selfservice_methods_password_config_min_password_length: Optional[int] = (
        Field(
            None,
            description='Configures the minimum length of passwords.\n\nThis governs the "selfservice.methods.password.config.min_password_length" setting.',
        )
    )
    kratos_selfservice_methods_password_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Password Method is enabled\n\nThis governs the "selfservice.methods.password.enabled" setting.',
    )
    kratos_selfservice_methods_profile_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Profile Method is enabled\n\nThis governs the "selfservice.methods.profile.enabled" setting.',
    )
    kratos_selfservice_methods_totp_config_issuer: Optional[str] = Field(
        None,
        description='Configures Ory Kratos TOTP Issuer\n\nThis governs the "selfservice.methods.totp.config.issuer" setting.',
    )
    kratos_selfservice_methods_totp_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos TOTP Method is enabled\n\nThis governs the "selfservice.methods.totp.enabled" setting.',
    )
    kratos_selfservice_methods_webauthn_config_passwordless: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Webauthn is used for passwordless flows\n\nThis governs the "selfservice.methods.webauthn.config.passwordless" setting.',
    )
    kratos_selfservice_methods_webauthn_config_rp_display_name: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Webauthn RP Display Name\n\nThis governs the "selfservice.methods.webauthn.config.rp.display_name" setting.',
    )
    kratos_selfservice_methods_webauthn_config_rp_icon: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Webauthn RP Icon\n\nThis governs the "selfservice.methods.webauthn.config.rp.icon" setting.\nDeprecated: This value will be ignored due to security considerations.',
    )
    kratos_selfservice_methods_webauthn_config_rp_id: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Webauthn RP ID\n\nThis governs the "selfservice.methods.webauthn.config.rp.id" setting.',
    )
    kratos_selfservice_methods_webauthn_config_rp_origins: Optional[
        StringSliceJSONFormat
    ] = None
    kratos_selfservice_methods_webauthn_enabled: Optional[bool] = Field(
        None,
        description='Configures whether Ory Kratos Webauthn is enabled\n\nThis governs the "selfservice.methods.webauthn.enabled" setting.',
    )
    kratos_session_cookie_persistent: Optional[bool] = Field(
        None,
        description='Configures the Ory Kratos Session Cookie Persistent Attribute\n\nThis governs the "session.cookie.persistent" setting.',
    )
    kratos_session_cookie_same_site: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session Cookie SameSite Attribute\n\nThis governs the "session.cookie.same_site" setting.',
    )
    kratos_session_lifespan: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session Lifespan\n\nThis governs the "session.lifespan" setting.',
    )
    kratos_session_whoami_required_aal: Optional[str] = Field(
        None,
        description='Configures the Ory Kratos Session Whoami AAL requirement\n\nThis governs the "session.whoami.required_aal" setting.',
    )
    kratos_session_whoami_tokenizer_templates: Optional[
        NormalizedProjectRevisionTokenizerTemplates
    ] = None
    name: str = Field(..., description="The project's name.")
    project_id: Optional[UUID] = Field(None, description="The Revision's Project ID")
    project_revision_hooks: Optional[ProjectRevisionHooks] = None
    serve_admin_cors_allowed_origins: Optional[StringSliceJSONFormat] = None
    serve_admin_cors_enabled: Optional[bool] = Field(
        None,
        description='Enable CORS headers on all admin APIs\n\nThis governs the "serve.admin.cors.enabled" setting.',
    )
    serve_public_cors_allowed_origins: Optional[StringSliceJSONFormat] = None
    serve_public_cors_enabled: Optional[bool] = Field(
        None,
        description='Enable CORS headers on all public APIs\n\nThis governs the "serve.public.cors.enabled" setting.',
    )
    strict_security: Optional[bool] = Field(
        None,
        description='Whether the project should employ strict security measures. Setting this to true is recommended for going into production.',
    )
    updated_at: Optional[datetime] = Field(
        None, description="Last Time Project's Revision was Updated"
    )


class Plans(BaseModel):
    __root__: Pricing


class ProjectRevisions(BaseModel):
    __root__: List[NormalizedProjectRevision]


class Subscription(BaseModel):
    created_at: datetime
    currency: Currency = Field(
        ...,
        description='The currency of the subscription. To change this, a new subscription must be created.\nusd USD\neur Euro',
    )
    current_interval: CurrentInterval = Field(
        ...,
        description='The currently active interval of the subscription\nmonthly Monthly\nyearly Yearly',
    )
    current_plan: str = Field(
        ..., description='The currently active plan of the subscription'
    )
    current_plan_details: Optional[PlanDetails] = None
    customer_id: str = Field(..., description='The ID of the stripe customer')
    id: UUID = Field(..., description='The ID of the subscription')
    interval_changes_to: String
    ongoing_stripe_checkout_id: Optional[String] = None
    payed_until: datetime = Field(
        ..., description='Until when the subscription is payed'
    )
    plan_changes_at: Optional[Time] = None
    plan_changes_to: String
    status: SubscriptionStatus
    stripe_checkout_expires_at: Optional[Time] = None
    updated_at: datetime


class SuccessfulNativeLogin(BaseModel):
    continue_with: Optional[List[ContinueWith]] = Field(
        None,
        description="Contains a list of actions, that could follow this flow\n\nIt can, for example, this will contain a reference to the verification flow, created as part of the user's\nregistration or the token of the session.",
    )
    session: Session
    session_token: Optional[str] = Field(
        None,
        description='The Session Token\n\nA session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization\nHeader:\n\nAuthorization: bearer ${session-token}\n\nThe session token is only issued for API flows, not for Browser flows!',
    )


class SuccessfulNativeRegistration(BaseModel):
    continue_with: Optional[List[ContinueWith]] = Field(
        None,
        description="Contains a list of actions, that could follow this flow\n\nIt can, for example, this will contain a reference to the verification flow, created as part of the user's\nregistration or the token of the session.",
    )
    identity: Identity
    session: Optional[Session] = None
    session_token: Optional[str] = Field(
        None,
        description='The Session Token\n\nThis field is only set when the session hook is configured as a post-registration hook.\n\nA session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization\nHeader:\n\nAuthorization: bearer ${session-token}\n\nThe session token is only issued for API flows, not for Browser flows!',
    )


class UiNodeAttributes(BaseModel):
    __root__: Union[
        UiNodeInputAttributes,
        UiNodeTextAttributes,
        UiNodeImageAttributes,
        UiNodeAnchorAttributes,
        UiNodeScriptAttributes,
    ] = Field(
        ...,
        discriminator='node_type',
        title='Attributes represents a list of attributes (e.g. `href="foo"` for links).',
    )


class BillingPeriodBucket(BaseModel):
    base_invoices: Optional[Invoices] = None
    billing_period: Optional[TimeInterval] = None
    usage_invoice: Optional[Invoice] = None


class IdentityWithCredentials(BaseModel):
    oidc: Optional[IdentityWithCredentialsOidc] = None
    password: Optional[IdentityWithCredentialsPassword] = None


class ListInvoicesResponse(BaseModel):
    buckets: List[BillingPeriodBucket]
    has_next_page: bool
    next_page_token: str


class NormalizedProject(BaseModel):
    created_at: datetime = Field(..., description="The Project's Creation Date")
    current_revision: NormalizedProjectRevision
    environment: Environment = Field(
        ...,
        description='The environment of the project.\nprod Production\nstage Staging\ndev Development',
    )
    home_region: HomeRegion = Field(
        ...,
        description="The project's data home region.\neu-central EUCentral\nasia-northeast AsiaNorthEast\nus-east USEast\nus-west USWest\nus US\nglobal Global",
    )
    hosts: StringSliceJSONFormat
    id: UUID = Field(..., description="The project's ID.")
    slug: str = Field(..., description="The project's slug")
    state: State2 = Field(
        ...,
        description='The state of the project.\nrunning Running\nhalted Halted\ndeleted Deleted',
    )
    subscription_id: Optional[NullUUID] = None
    subscription_plan: Optional[String] = None
    updated_at: datetime = Field(..., description='Last Time Project was Updated')
    workspace: Optional[Workspace] = None
    workspace_id: NullUUID


class NormalizedProjects(BaseModel):
    __root__: List[NormalizedProject]


class UiNode(BaseModel):
    attributes: UiNodeAttributes
    group: Group = Field(
        ...,
        description='Group specifies which group (e.g. password authenticator) this node belongs to.\ndefault DefaultGroup\npassword PasswordGroup\noidc OpenIDConnectGroup\nprofile ProfileGroup\nlink LinkGroup\ncode CodeGroup\ntotp TOTPGroup\nlookup_secret LookupGroup\nwebauthn WebAuthnGroup\npasskey PasskeyGroup\nidentifier_first IdentifierFirstGroup',
    )
    messages: UiTexts
    meta: UiNodeMeta
    type: Type5 = Field(
        ...,
        description="The node's type\ntext Text\ninput Input\nimg Image\na Anchor\nscript Script",
    )


class UiNodes(BaseModel):
    __root__: List[UiNode]


class UpdateIdentityBody(BaseModel):
    credentials: Optional[IdentityWithCredentials] = None
    metadata_admin: Optional[Any] = Field(
        None,
        description='Store metadata about the user which is only accessible through admin APIs such as `GET /admin/identities/<id>`.',
    )
    metadata_public: Optional[Any] = Field(
        None,
        description='Store metadata about the identity which the identity itself can see when calling for example the\nsession endpoint. Do not store sensitive information (e.g. credit score) about the identity in this field.',
    )
    schema_id: str = Field(
        ...,
        description="SchemaID is the ID of the JSON Schema to be used for validating the identity's traits. If set\nwill update the Identity's SchemaID.",
    )
    state: State6 = Field(
        ...,
        description="State is the identity's state.\nactive StateActive\ninactive StateInactive",
    )
    traits: Dict[str, Any] = Field(
        ...,
        description="Traits represent an identity's traits. The identity is able to create, modify, and delete traits\nin a self-service manner. The input will always be validated against the JSON Schema defined\nin `schema_id`.",
    )


class CreateIdentityBody(BaseModel):
    credentials: Optional[IdentityWithCredentials] = None
    metadata_admin: Optional[Any] = Field(
        None,
        description='Store metadata about the user which is only accessible through admin APIs such as `GET /admin/identities/<id>`.',
    )
    metadata_public: Optional[Any] = Field(
        None,
        description='Store metadata about the identity which the identity itself can see when calling for example the\nsession endpoint. Do not store sensitive information (e.g. credit score) about the identity in this field.',
    )
    recovery_addresses: Optional[List[RecoveryIdentityAddress]] = Field(
        None,
        description='RecoveryAddresses contains all the addresses that can be used to recover an identity.\n\nUse this structure to import recovery addresses for an identity. Please keep in mind\nthat the address needs to be represented in the Identity Schema or this field will be overwritten\non the next identity update.',
    )
    schema_id: str = Field(
        ...,
        description="SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.",
    )
    state: Optional[State] = Field(
        None,
        description="State is the identity's state.\nactive StateActive\ninactive StateInactive",
    )
    traits: Dict[str, Any] = Field(
        ...,
        description="Traits represent an identity's traits. The identity is able to create, modify, and delete traits\nin a self-service manner. The input will always be validated against the JSON Schema defined\nin `schema_url`.",
    )
    verifiable_addresses: Optional[List[VerifiableIdentityAddress]] = Field(
        None,
        description='VerifiableAddresses contains all the addresses that can be verified by the user.\n\nUse this structure to import verified addresses for an identity. Please keep in mind\nthat the address needs to be represented in the Identity Schema or this field will be overwritten\non the next identity update.',
    )


class IdentityPatch(BaseModel):
    create: Optional[CreateIdentityBody] = None
    patch_id: Optional[UUID] = Field(
        None,
        description='The ID of this patch.\n\nThe patch ID is optional. If specified, the ID will be returned in the\nresponse, so consumers of this API can correlate the response with the\npatch.',
    )


class PatchIdentitiesBody(BaseModel):
    identities: Optional[List[IdentityPatch]] = Field(
        None, description='Identities holds the list of patches to apply\n\nrequired'
    )


class UiContainer(BaseModel):
    action: str = Field(
        ...,
        description='Action should be used as the form action URL `<form action="{{ .Action }}" method="post">`.',
    )
    messages: Optional[UiTexts] = None
    method: str = Field(..., description='Method is the form method (e.g. POST)')
    nodes: UiNodes


class VerificationFlow(BaseModel):
    active: Optional[str] = Field(
        None,
        description='Active, if set, contains the registration method that is being used. It is initially\nnot set.',
    )
    expires_at: Optional[datetime] = Field(
        None,
        description='ExpiresAt is the time (UTC) when the request expires. If the user still wishes to verify the address,\na new request has to be initiated.',
    )
    id: UUID = Field(
        ...,
        description="ID represents the request's unique ID. When performing the verification flow, this\nrepresents the id in the verify ui's query parameter: http://<selfservice.flows.verification.ui_url>?request=<id>\n\ntype: string\nformat: uuid",
    )
    issued_at: Optional[datetime] = Field(
        None, description='IssuedAt is the time (UTC) when the request occurred.'
    )
    request_url: Optional[str] = Field(
        None,
        description="RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
    )
    return_to: Optional[str] = Field(
        None, description='ReturnTo contains the requested return_to URL.'
    )
    state: Any = Field(
        ...,
        description='State represents the state of this request:\n\nchoose_method: ask the user to choose a method (e.g. verify your email)\nsent_email: the email has been sent to the user\npassed_challenge: the request was successful and the verification challenge was passed.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None,
        description='TransientPayload is used to pass data from the verification flow to hooks and email templates',
    )
    type: SelfServiceFlowType
    ui: UiContainer


class LoginFlow(BaseModel):
    active: Optional[Active] = Field(
        None,
        description='The active login method\n\nIf set contains the login method used. If the flow is new, it is unset.\npassword CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode',
    )
    created_at: Optional[datetime] = Field(
        None, description='CreatedAt is a helper struct field for gobuffalo.pop.'
    )
    expires_at: datetime = Field(
        ...,
        description='ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,\na new flow has to be initiated.',
    )
    id: UUID = Field(
        ...,
        description="ID represents the flow's unique ID. When performing the login flow, this\nrepresents the id in the login UI's query parameter: http://<selfservice.flows.login.ui_url>/?flow=<flow_id>",
    )
    issued_at: datetime = Field(
        ..., description='IssuedAt is the time (UTC) when the flow started.'
    )
    oauth2_login_challenge: Optional[str] = Field(
        None,
        description='Ory OAuth 2.0 Login Challenge.\n\nThis value is set using the `login_challenge` query parameter of the registration and login endpoints.\nIf set will cooperate with Ory OAuth2 and OpenID to act as an OAuth2 server / OpenID Provider.',
    )
    oauth2_login_request: Optional[OAuth2LoginRequest] = None
    organization_id: Optional[NullUUID] = None
    refresh: Optional[bool] = Field(
        None,
        description='Refresh stores whether this login flow should enforce re-authentication.',
    )
    request_url: str = Field(
        ...,
        description="RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
    )
    requested_aal: Optional[AuthenticatorAssuranceLevel] = None
    return_to: Optional[str] = Field(
        None, description='ReturnTo contains the requested return_to URL.'
    )
    session_token_exchange_code: Optional[str] = Field(
        None,
        description='SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the login flow has been completed.\nThis is only set if the client has requested a session token exchange code, and if the flow is of type "api",\nand only on creating the login flow.',
    )
    state: Any = Field(
        ...,
        description='State represents the state of this request:\n\nchoose_method: ask the user to choose a method to sign in with\nsent_email: the email has been sent to the user\npassed_challenge: the request was successful and the login challenge was passed.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None,
        description='TransientPayload is used to pass data from the login to hooks and email templates',
    )
    type: SelfServiceFlowType
    ui: UiContainer
    updated_at: Optional[datetime] = Field(
        None, description='UpdatedAt is a helper struct field for gobuffalo.pop.'
    )


class RecoveryFlow(BaseModel):
    active: Optional[str] = Field(
        None,
        description='Active, if set, contains the recovery method that is being used. It is initially\nnot set.',
    )
    continue_with: Optional[List[ContinueWith]] = Field(
        None, description='Contains possible actions that could follow this flow'
    )
    expires_at: datetime = Field(
        ...,
        description='ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting,\na new request has to be initiated.',
    )
    id: UUID = Field(
        ...,
        description="ID represents the request's unique ID. When performing the recovery flow, this\nrepresents the id in the recovery ui's query parameter: http://<selfservice.flows.recovery.ui_url>?request=<id>",
    )
    issued_at: datetime = Field(
        ..., description='IssuedAt is the time (UTC) when the request occurred.'
    )
    request_url: str = Field(
        ...,
        description="RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
    )
    return_to: Optional[str] = Field(
        None, description='ReturnTo contains the requested return_to URL.'
    )
    state: Any = Field(
        ...,
        description='State represents the state of this request:\n\nchoose_method: ask the user to choose a method (e.g. recover account via email)\nsent_email: the email has been sent to the user\npassed_challenge: the request was successful and the recovery challenge was passed.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None,
        description='TransientPayload is used to pass data from the recovery flow to hooks and email templates',
    )
    type: SelfServiceFlowType
    ui: UiContainer


class RegistrationFlow(BaseModel):
    active: Optional[Active] = Field(
        None,
        description='Active, if set, contains the registration method that is being used. It is initially\nnot set.\npassword CredentialsTypePassword\noidc CredentialsTypeOIDC\ntotp CredentialsTypeTOTP\nlookup_secret CredentialsTypeLookup\nwebauthn CredentialsTypeWebAuthn\ncode CredentialsTypeCodeAuth\npasskey CredentialsTypePasskey\nprofile CredentialsTypeProfile\nlink_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.\ncode_recovery CredentialsTypeRecoveryCode',
    )
    expires_at: datetime = Field(
        ...,
        description='ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,\na new flow has to be initiated.',
    )
    id: UUID = Field(
        ...,
        description="ID represents the flow's unique ID. When performing the registration flow, this\nrepresents the id in the registration ui's query parameter: http://<selfservice.flows.registration.ui_url>/?flow=<id>",
    )
    issued_at: datetime = Field(
        ..., description='IssuedAt is the time (UTC) when the flow occurred.'
    )
    oauth2_login_challenge: Optional[str] = Field(
        None,
        description='Ory OAuth 2.0 Login Challenge.\n\nThis value is set using the `login_challenge` query parameter of the registration and login endpoints.\nIf set will cooperate with Ory OAuth2 and OpenID to act as an OAuth2 server / OpenID Provider.',
    )
    oauth2_login_request: Optional[OAuth2LoginRequest] = None
    organization_id: Optional[NullUUID] = None
    request_url: str = Field(
        ...,
        description="RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
    )
    return_to: Optional[str] = Field(
        None, description='ReturnTo contains the requested return_to URL.'
    )
    session_token_exchange_code: Optional[str] = Field(
        None,
        description='SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the flow has been completed.\nThis is only set if the client has requested a session token exchange code, and if the flow is of type "api",\nand only on creating the flow.',
    )
    state: Any = Field(
        ...,
        description='State represents the state of this request:\n\nchoose_method: ask the user to choose a method (e.g. registration with email)\nsent_email: the email has been sent to the user\npassed_challenge: the request was successful and the registration challenge was passed.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None,
        description='TransientPayload is used to pass data from the registration to a webhook',
    )
    type: SelfServiceFlowType
    ui: UiContainer


class SettingsFlow(BaseModel):
    active: Optional[str] = Field(
        None,
        description='Active, if set, contains the registration method that is being used. It is initially\nnot set.',
    )
    continue_with: Optional[List[ContinueWith]] = Field(
        None,
        description="Contains a list of actions, that could follow this flow\n\nIt can, for example, contain a reference to the verification flow, created as part of the user's\nregistration.",
    )
    expires_at: datetime = Field(
        ...,
        description='ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to update the setting,\na new flow has to be initiated.',
    )
    id: UUID = Field(
        ...,
        description="ID represents the flow's unique ID. When performing the settings flow, this\nrepresents the id in the settings ui's query parameter: http://<selfservice.flows.settings.ui_url>?flow=<id>",
    )
    identity: Identity
    issued_at: datetime = Field(
        ..., description='IssuedAt is the time (UTC) when the flow occurred.'
    )
    request_url: str = Field(
        ...,
        description="RequestURL is the initial URL that was requested from Ory Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
    )
    return_to: Optional[str] = Field(
        None, description='ReturnTo contains the requested return_to URL.'
    )
    state: Any = Field(
        ...,
        description='State represents the state of this flow. It knows two states:\n\nshow_form: No user data has been collected, or it is invalid, and thus the form should be shown.\nsuccess: Indicates that the settings flow has been updated successfully with the provided data.\nDone will stay true when repeatedly checking. If set to true, done will revert back to false only\nwhen a flow with invalid (e.g. "please use a valid phone number") data was sent.',
    )
    transient_payload: Optional[Dict[str, Any]] = Field(
        None,
        description='TransientPayload is used to pass data from the settings flow to hooks and email templates',
    )
    type: SelfServiceFlowType
    ui: UiContainer


LineItemV1.update_forward_refs()
ExpandedPermissionTree.update_forward_refs()
